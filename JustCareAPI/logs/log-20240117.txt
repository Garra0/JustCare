{"@t":"2024-01-17T05:48:46.1834573Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["178.9847"],"@tr":"ba133c1a417a5014618ecfe53dcf4fb2","@sp":"73400ebbb525db74","RequestMethod":"GET","RequestPath":"/swagger/index.html","StatusCode":200,"Elapsed":178.9847,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"80000051-000e-ff00-b63f-84710c7967bb"}
{"@t":"2024-01-17T05:48:46.3553501Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["87.4597"],"@tr":"343da996e4f5887314dbb1dffa23832b","@sp":"27f84b08c1db0948","RequestMethod":"GET","RequestPath":"/swagger/v1/swagger.json","StatusCode":200,"Elapsed":87.4597,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"80000025-0002-fc00-b63f-84710c7967bb"}
{"@t":"2024-01-17T05:49:21.3233600Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["2037.8047"],"@tr":"3bc7350e16c40903dc3ccff2937a0403","@sp":"295e65cbe692796f","RequestMethod":"POST","RequestPath":"/UserAPI/Login","StatusCode":200,"Elapsed":2037.8047,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"8000005b-0000-fd00-b63f-84710c7967bb"}
{"@t":"2024-01-17T05:50:08.6678055Z","@mt":"Get all Categories","@tr":"a49795b612161bce656c9f4526088310","@sp":"d698b8702d4e76c5","SourceContext":"JustCare_MB.Services.CategoryService","ActionId":"5fe1c624-34c8-406a-be06-0d04036788c6","ActionName":"JustCareAPI.Controllers.CategoryController.GetAllCategorys (JustCareAPI)","RequestId":"800000ba-000b-ff00-b63f-84710c7967bb","RequestPath":"/CategoryAPI/GetAllCategorys"}
{"@t":"2024-01-17T05:50:08.7353642Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["184.4916"],"@tr":"a49795b612161bce656c9f4526088310","@sp":"d698b8702d4e76c5","RequestMethod":"GET","RequestPath":"/CategoryAPI/GetAllCategorys","StatusCode":200,"Elapsed":184.4916,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"800000ba-000b-ff00-b63f-84710c7967bb"}
{"@t":"2024-01-17T05:50:43.9193307Z","@mt":"Create Appointment: {\"Date\":\"2024-01-18T00:00:00\",\"CategoryId\":1,\"DentistDescription\":\"string\",\"Images\":[\"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\",\"\"]}","@tr":"0b4380343a8b30ba0b0fc589becbac19","@sp":"cdb091b7ce0d875e","SourceContext":"JustCare_MB.Services.AppointmentService","ActionId":"f3b806e9-0436-46f9-ab2a-7e12b1344412","ActionName":"JustCareAPI.Controllers.AppointmentController.CreateAppointment (JustCareAPI)","RequestId":"8000009c-000a-ff00-b63f-84710c7967bb","RequestPath":"/AppointmentAPI/Create%20appointment"}
{"@t":"2024-01-17T05:50:45.6227485Z","@mt":"Appointment Exists","@l":"Error","@x":"JustCare_MB.Helpers.ExistsException: Appointment Exists\r\n   at JustCare_MB.Services.AppointmentService.CreateAppointment(CreateAppointmentDto appointmentDto) in C:\\Users\\Smail_-\\Desktop\\JustCare\\JustCare_MB\\Services\\AppointmentService.cs:line 60\r\n   at JustCareAPI.Controllers.AppointmentController.CreateAppointment(CreateAppointmentDto appointmentDto) in C:\\Users\\Smail_-\\Desktop\\JustCare\\JustCareAPI\\Controllers\\AppointmentController.cs:line 29\r\n   at lambda_method127(Closure, Object)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfActionResultExecutor.Execute(ActionContext actionContext, IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Awaited|17_0(ResourceInvoker invoker, Task task, IDisposable scope)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Awaited|17_0(ResourceInvoker invoker, Task task, IDisposable scope)\r\n   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)\r\n   at JustCare_MB.Middlewares.GlobalExceptionHandlingMiddleware.InvokeAsync(HttpContext context, RequestDelegate next) in C:\\Users\\Smail_-\\Desktop\\JustCare\\JustCare_MB\\Middlewares\\GlobalExceptionHandlingMiddleware.cs:line 31","@tr":"0b4380343a8b30ba0b0fc589becbac19","@sp":"cdb091b7ce0d875e","SourceContext":"JustCare_MB.Middlewares.GlobalExceptionHandlingMiddleware","ActionId":"f3b806e9-0436-46f9-ab2a-7e12b1344412","ActionName":"JustCareAPI.Controllers.AppointmentController.CreateAppointment (JustCareAPI)","RequestId":"8000009c-000a-ff00-b63f-84710c7967bb","RequestPath":"/AppointmentAPI/Create%20appointment"}
{"@t":"2024-01-17T05:50:45.6397232Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["3962.5483"],"@tr":"0b4380343a8b30ba0b0fc589becbac19","@sp":"cdb091b7ce0d875e","RequestMethod":"POST","RequestPath":"/AppointmentAPI/Create appointment","StatusCode":409,"Elapsed":3962.5483,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"8000009c-000a-ff00-b63f-84710c7967bb"}
{"@t":"2024-01-17T05:51:02.1819803Z","@mt":"Create Appointment: {\"Date\":\"2024-02-18T00:00:00\",\"CategoryId\":1,\"DentistDescription\":\"string\",\"Images\":[\"\",\"\"]}","@tr":"531532b1a101bc65f52483ffff29b2cf","@sp":"33a544a2cf7bdfb3","SourceContext":"JustCare_MB.Services.AppointmentService","ActionId":"f3b806e9-0436-46f9-ab2a-7e12b1344412","ActionName":"JustCareAPI.Controllers.AppointmentController.CreateAppointment (JustCareAPI)","RequestId":"80000009-000e-fe00-b63f-84710c7967bb","RequestPath":"/AppointmentAPI/Create%20appointment"}
{"@t":"2024-01-17T05:51:46.3436441Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["46098.7183"],"@tr":"531532b1a101bc65f52483ffff29b2cf","@sp":"33a544a2cf7bdfb3","RequestMethod":"POST","RequestPath":"/AppointmentAPI/Create appointment","StatusCode":200,"Elapsed":46098.7183,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"80000009-000e-fe00-b63f-84710c7967bb"}
{"@t":"2024-01-17T05:52:36.9643200Z","@mt":"Create new Category {\"EnglishName\":\"lolo\",\"ArabicName\":\"lolo\",\"Image\":\"\"}","@tr":"569f30ae7b646b6b732f5b26fc47a8a8","@sp":"f30c5590a7b04eb0","SourceContext":"JustCare_MB.Services.CategoryService","ActionId":"c7a43259-15b6-4668-ad67-0dde4edbdbb3","ActionName":"JustCareAPI.Controllers.CategoryController.CreateCategory (JustCareAPI)","RequestId":"800000bc-000b-ff00-b63f-84710c7967bb","RequestPath":"/CategoryAPI/CreateCategory"}
{"@t":"2024-01-17T05:52:37.0000766Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["47.1003"],"@tr":"569f30ae7b646b6b732f5b26fc47a8a8","@sp":"f30c5590a7b04eb0","RequestMethod":"POST","RequestPath":"/CategoryAPI/CreateCategory","StatusCode":200,"Elapsed":47.1003,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"800000bc-000b-ff00-b63f-84710c7967bb"}
{"@t":"2024-01-17T05:54:12.8299509Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["164.9297"],"@tr":"fc6807a03acfe1ab66271a24e1840427","@sp":"e7502998eae4b748","RequestMethod":"GET","RequestPath":"/swagger/index.html","StatusCode":200,"Elapsed":164.9297,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"8000000e-000c-fe00-b63f-84710c7967bb"}
{"@t":"2024-01-17T05:54:14.1201157Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["335.4289"],"@tr":"0d6573a0b888227a9307ba5ffd6ac976","@sp":"7b66b41a926c4009","RequestMethod":"POST","RequestPath":"/AppointmentAPI/Create appointment","StatusCode":400,"Elapsed":335.4289,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"8000006e-0009-ff00-b63f-84710c7967bb"}
{"@t":"2024-01-17T05:54:49.4879581Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["30.2465"],"@tr":"759674d9bcf385f73d4ab6cda6b3e162","@sp":"d6b6466fca2be232","RequestMethod":"POST","RequestPath":"/AppointmentAPI/Create appointment","StatusCode":400,"Elapsed":30.2465,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"80000032-0004-fd00-b63f-84710c7967bb"}
{"@t":"2024-01-17T05:55:02.6334869Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["6.8148"],"@tr":"5ea0d22ccc859be52b2165a79f9a0613","@sp":"8a86d6c1b26b60b1","RequestMethod":"POST","RequestPath":"/AppointmentAPI/Create appointment","StatusCode":400,"Elapsed":6.8148,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"80000049-0002-f800-b63f-84710c7967bb"}
{"@t":"2024-01-17T05:55:13.8584537Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["3.1684"],"@tr":"07d12df3d2b88e1f497b85f9aeae3bc3","@sp":"074b68c8976f7f0e","RequestMethod":"POST","RequestPath":"/AppointmentAPI/Create appointment","StatusCode":400,"Elapsed":3.1684,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"8000009e-000a-ff00-b63f-84710c7967bb"}
{"@t":"2024-01-17T05:55:50.1342263Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["28.5159"],"@tr":"a1ea3909eec69973993012ef74422d21","@sp":"c149bdc43a45f751","RequestMethod":"GET","RequestPath":"/swagger/index.html","StatusCode":200,"Elapsed":28.5159,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"80000010-000c-fe00-b63f-84710c7967bb"}
{"@t":"2024-01-17T05:55:50.2756660Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["74.9149"],"@tr":"bfa29f1902e546c662ed605f12aa6b4c","@sp":"93fc68019c3b43a9","RequestMethod":"GET","RequestPath":"/swagger/v1/swagger.json","StatusCode":200,"Elapsed":74.9149,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"80000036-0004-fd00-b63f-84710c7967bb"}
{"@t":"2024-01-17T05:56:14.2272170Z","@mt":"Create Appointment: {\"Date\":\"2024-01-27T00:00:00\",\"CategoryId\":1,\"DentistDescription\":\"string\",\"Images\":[\"string\"]}","@tr":"e6a2af62aba8cdcff2224919a11aee84","@sp":"1fa5a67fbafa940a","SourceContext":"JustCare_MB.Services.AppointmentService","ActionId":"50f44bd2-8473-4750-bf98-0f721751ccef","ActionName":"JustCareAPI.Controllers.AppointmentController.CreateAppointment (JustCareAPI)","RequestId":"8000004b-0002-f800-b63f-84710c7967bb","RequestPath":"/AppointmentAPI/Create%20appointment"}
{"@t":"2024-01-17T05:56:15.0507756Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["2453.7429"],"@tr":"e6a2af62aba8cdcff2224919a11aee84","@sp":"1fa5a67fbafa940a","RequestMethod":"POST","RequestPath":"/AppointmentAPI/Create appointment","StatusCode":200,"Elapsed":2453.7429,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"8000004b-0002-f800-b63f-84710c7967bb"}
{"@t":"2024-01-17T05:56:24.7359878Z","@mt":"Create Appointment: {\"Date\":\"2024-01-28T00:00:00\",\"CategoryId\":1,\"DentistDescription\":\"string\",\"Images\":[\"\"]}","@tr":"7d07bcfe2da0d535e0a73c0057365c06","@sp":"d89fa907ee5de331","SourceContext":"JustCare_MB.Services.AppointmentService","ActionId":"50f44bd2-8473-4750-bf98-0f721751ccef","ActionName":"JustCareAPI.Controllers.AppointmentController.CreateAppointment (JustCareAPI)","RequestId":"80000038-0004-fd00-b63f-84710c7967bb","RequestPath":"/AppointmentAPI/Create%20appointment"}
{"@t":"2024-01-17T05:56:29.9281607Z","@mt":"Appointment Exists","@l":"Error","@x":"JustCare_MB.Helpers.ExistsException: Appointment Exists\r\n   at JustCare_MB.Services.AppointmentService.CreateAppointment(CreateAppointmentDto appointmentDto) in C:\\Users\\Smail_-\\Desktop\\JustCare\\JustCare_MB\\Services\\AppointmentService.cs:line 60\r\n   at JustCareAPI.Controllers.AppointmentController.CreateAppointment(CreateAppointmentDto appointmentDto) in C:\\Users\\Smail_-\\Desktop\\JustCare\\JustCareAPI\\Controllers\\AppointmentController.cs:line 29\r\n   at lambda_method6(Closure, Object)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfActionResultExecutor.Execute(ActionContext actionContext, IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Awaited|17_0(ResourceInvoker invoker, Task task, IDisposable scope)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Awaited|17_0(ResourceInvoker invoker, Task task, IDisposable scope)\r\n   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)\r\n   at JustCare_MB.Middlewares.GlobalExceptionHandlingMiddleware.InvokeAsync(HttpContext context, RequestDelegate next) in C:\\Users\\Smail_-\\Desktop\\JustCare\\JustCare_MB\\Middlewares\\GlobalExceptionHandlingMiddleware.cs:line 31","@tr":"7d07bcfe2da0d535e0a73c0057365c06","@sp":"d89fa907ee5de331","SourceContext":"JustCare_MB.Middlewares.GlobalExceptionHandlingMiddleware","ActionId":"50f44bd2-8473-4750-bf98-0f721751ccef","ActionName":"JustCareAPI.Controllers.AppointmentController.CreateAppointment (JustCareAPI)","RequestId":"80000038-0004-fd00-b63f-84710c7967bb","RequestPath":"/AppointmentAPI/Create%20appointment"}
{"@t":"2024-01-17T05:56:29.9354740Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["6900.9058"],"@tr":"7d07bcfe2da0d535e0a73c0057365c06","@sp":"d89fa907ee5de331","RequestMethod":"POST","RequestPath":"/AppointmentAPI/Create appointment","StatusCode":409,"Elapsed":6900.9058,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"80000038-0004-fd00-b63f-84710c7967bb"}
{"@t":"2024-01-17T05:56:42.6531931Z","@mt":"Create Appointment: {\"Date\":\"2024-04-28T00:00:00\",\"CategoryId\":1,\"DentistDescription\":\"string\",\"Images\":[\"\"]}","@tr":"ebed62c756692033de01b621a79413f1","@sp":"6acb04e468972fcd","SourceContext":"JustCare_MB.Services.AppointmentService","ActionId":"50f44bd2-8473-4750-bf98-0f721751ccef","ActionName":"JustCareAPI.Controllers.AppointmentController.CreateAppointment (JustCareAPI)","RequestId":"8000003a-0004-fd00-b63f-84710c7967bb","RequestPath":"/AppointmentAPI/Create%20appointment"}
{"@t":"2024-01-17T05:57:06.9535585Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["25779.1477"],"@tr":"ebed62c756692033de01b621a79413f1","@sp":"6acb04e468972fcd","RequestMethod":"POST","RequestPath":"/AppointmentAPI/Create appointment","StatusCode":200,"Elapsed":25779.1477,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"8000003a-0004-fd00-b63f-84710c7967bb"}
{"@t":"2024-01-17T06:10:45.2941240Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["167.6257"],"@tr":"f1e21fc59f5e4c600c39d632a69cf0e5","@sp":"b3585c8405a9539f","RequestMethod":"GET","RequestPath":"/swagger/index.html","StatusCode":200,"Elapsed":167.6257,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"8000001f-0006-ff00-b63f-84710c7967bb"}
{"@t":"2024-01-17T06:10:45.4598802Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["80.0630"],"@tr":"484dc4896c953b3681fcb1724b16329f","@sp":"058aa8453963cdee","RequestMethod":"GET","RequestPath":"/swagger/v1/swagger.json","StatusCode":200,"Elapsed":80.063,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"80000021-0006-ff00-b63f-84710c7967bb"}
{"@t":"2024-01-17T06:11:08.7495230Z","@mt":"Get all Categories","@tr":"82e1c7d0006376d70682ed0946c27441","@sp":"02881e8e2acc0234","SourceContext":"JustCare_MB.Services.CategoryService","ActionId":"062d18bb-d55f-4646-b48d-27ec9304b6be","ActionName":"JustCareAPI.Controllers.CategoryController.GetAllCategorys (JustCareAPI)","RequestId":"800000aa-000f-fd00-b63f-84710c7967bb","RequestPath":"/CategoryAPI/GetAllCategorys"}
{"@t":"2024-01-17T06:11:09.9962745Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["1707.4725"],"@tr":"82e1c7d0006376d70682ed0946c27441","@sp":"02881e8e2acc0234","RequestMethod":"GET","RequestPath":"/CategoryAPI/GetAllCategorys","StatusCode":200,"Elapsed":1707.4725,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"800000aa-000f-fd00-b63f-84710c7967bb"}
{"@t":"2024-01-17T06:11:34.6593701Z","@mt":"Create Appointment: {\"Date\":\"2024-01-29T00:00:00\",\"CategoryId\":1,\"DentistDescription\":\"string\",\"Images\":[\"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\"]}","@tr":"a43c282cb93ba9a1be80113d6b0ccd1a","@sp":"08a9c5c4d5bd25a0","SourceContext":"JustCare_MB.Services.AppointmentService","ActionId":"7a67d8d3-8d84-448e-9268-e694e8787ff9","ActionName":"JustCareAPI.Controllers.AppointmentController.CreateAppointment (JustCareAPI)","RequestId":"80000026-0008-fd00-b63f-84710c7967bb","RequestPath":"/AppointmentAPI/Create%20appointment"}
{"@t":"2024-01-17T06:11:53.5612513Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["20623.6921"],"@tr":"a43c282cb93ba9a1be80113d6b0ccd1a","@sp":"08a9c5c4d5bd25a0","RequestMethod":"POST","RequestPath":"/AppointmentAPI/Create appointment","StatusCode":200,"Elapsed":20623.6921,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"80000026-0008-fd00-b63f-84710c7967bb"}
{"@t":"2024-01-17T06:54:04.1704975Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["190.3250"],"@tr":"3b85cb14fd6cd2080cc13ff6c3b52b8d","@sp":"153a02e3a32d6cbf","RequestMethod":"GET","RequestPath":"/swagger/index.html","StatusCode":200,"Elapsed":190.325,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"80000004-0005-fe00-b63f-84710c7967bb"}
{"@t":"2024-01-17T06:54:04.3421311Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["85.9932"],"@tr":"d686952c3033b08b6d53b135a5a6fec7","@sp":"6c396caf5a6bd5cf","RequestMethod":"GET","RequestPath":"/swagger/v1/swagger.json","StatusCode":200,"Elapsed":85.9932,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"8000002a-0001-fd00-b63f-84710c7967bb"}
{"@t":"2024-01-17T06:54:35.5880090Z","@mt":"User not exist or Invalid Password","@l":"Error","@x":"JustCare_MB.Helpers.InvalidUserPasswordOrUserNotExistException: User not exist or Invalid Password\r\n   at JustCare_MB.Services.UsersService.Authenticate(UserLoginRequestDto userLogin) in C:\\Users\\Smail_-\\Desktop\\JustCare\\JustCare_MB\\Services\\UsersService.cs:line 56\r\n   at JustCare_MB.Services.UsersService.Login(UserLoginRequestDto userLogin) in C:\\Users\\Smail_-\\Desktop\\JustCare\\JustCare_MB\\Services\\UsersService.cs:line 123\r\n   at JustCareAPI.Controllers.UserController.Login(UserLoginRequestDto userLogin) in C:\\Users\\Smail_-\\Desktop\\JustCare\\JustCareAPI\\Controllers\\UserController.cs:line 36\r\n   at lambda_method6(Closure, Object)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfActionResultExecutor.Execute(ActionContext actionContext, IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeInnerFilterAsync()\r\n--- End of stack trace from previous location ---\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Awaited|17_0(ResourceInvoker invoker, Task task, IDisposable scope)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Awaited|17_0(ResourceInvoker invoker, Task task, IDisposable scope)\r\n   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)\r\n   at JustCare_MB.Middlewares.GlobalExceptionHandlingMiddleware.InvokeAsync(HttpContext context, RequestDelegate next) in C:\\Users\\Smail_-\\Desktop\\JustCare\\JustCare_MB\\Middlewares\\GlobalExceptionHandlingMiddleware.cs:line 31","@tr":"9fb763777cac134bbc98e897b920d067","@sp":"9c2809c788accc4d","SourceContext":"JustCare_MB.Middlewares.GlobalExceptionHandlingMiddleware","ActionId":"50e4f91f-7fb2-4ed8-a6af-ca2298c9044f","ActionName":"JustCareAPI.Controllers.UserController.Login (JustCareAPI)","RequestId":"80000057-000e-ff00-b63f-84710c7967bb","RequestPath":"/UserAPI/Login"}
{"@t":"2024-01-17T06:54:35.6120455Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["1775.1143"],"@tr":"9fb763777cac134bbc98e897b920d067","@sp":"9c2809c788accc4d","RequestMethod":"POST","RequestPath":"/UserAPI/Login","StatusCode":400,"Elapsed":1775.1143,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"80000057-000e-ff00-b63f-84710c7967bb"}
{"@t":"2024-01-17T06:54:42.2301175Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["178.9355"],"@tr":"3c872758847efe50226cc418bed0180b","@sp":"c7662facdacaa7ff","RequestMethod":"POST","RequestPath":"/UserAPI/Login","StatusCode":200,"Elapsed":178.9355,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"800000c2-000c-ff00-b63f-84710c7967bb"}
{"@t":"2024-01-17T06:55:09.5941985Z","@mt":"Get all Categories","@tr":"1014ea5c111e8616110a5b04e0d6243a","@sp":"0b06501e35f14440","SourceContext":"JustCare_MB.Services.CategoryService","ActionId":"b40145f9-337a-4033-8a6a-dc65c4639716","ActionName":"JustCareAPI.Controllers.CategoryController.GetAllCategorys (JustCareAPI)","RequestId":"80000012-0007-ff00-b63f-84710c7967bb","RequestPath":"/CategoryAPI/GetAllCategorys"}
{"@t":"2024-01-17T06:55:09.7055065Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["176.5305"],"@tr":"1014ea5c111e8616110a5b04e0d6243a","@sp":"0b06501e35f14440","RequestMethod":"GET","RequestPath":"/CategoryAPI/GetAllCategorys","StatusCode":200,"Elapsed":176.5305,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"80000012-0007-ff00-b63f-84710c7967bb"}
{"@t":"2024-01-17T06:55:45.0881444Z","@mt":"Create Appointment: {\"Date\":\"2024-01-19T00:00:00\",\"CategoryId\":1,\"DentistDescription\":\"string\",\"Images\":[\"\",\"\",\"\"]}","@tr":"fc864ad959291ee7f294fe67e16ebfe6","@sp":"9daf95574bb93529","SourceContext":"JustCare_MB.Services.AppointmentService","ActionId":"60abec40-1f95-4726-90c4-b38ad9a8bcdb","ActionName":"JustCareAPI.Controllers.AppointmentController.CreateAppointment (JustCareAPI)","RequestId":"8000007e-0008-fc00-b63f-84710c7967bb","RequestPath":"/AppointmentAPI/Create%20appointment"}
{"@t":"2024-01-17T06:55:45.2490507Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["1830.5109"],"@tr":"fc864ad959291ee7f294fe67e16ebfe6","@sp":"9daf95574bb93529","RequestMethod":"POST","RequestPath":"/AppointmentAPI/Create appointment","StatusCode":200,"Elapsed":1830.5109,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"8000007e-0008-fc00-b63f-84710c7967bb"}
{"@t":"2024-01-17T06:57:33.1673781Z","@mt":"Get All Appoitnment Dates By Category Id(4.1): 1","@tr":"bb359c031fc0e420c177eddaf0b6104c","@sp":"694dcbaed473c164","SourceContext":"JustCare_MB.Services.AppointmentService","ActionId":"28ce79d0-c551-4759-8e76-dcf7afcb8318","ActionName":"JustCareAPI.Controllers.AppointmentController.GetAllDatesDtoByCategoryId (JustCareAPI)","RequestId":"8000003d-0004-fd00-b63f-84710c7967bb","RequestPath":"/AppointmentAPI/1"}
{"@t":"2024-01-17T06:57:39.4353116Z","@mt":"Get All Appoitnment Dates By Category Id(4.2): 1","@tr":"bb359c031fc0e420c177eddaf0b6104c","@sp":"694dcbaed473c164","SourceContext":"JustCare_MB.Services.AppointmentService","ActionId":"28ce79d0-c551-4759-8e76-dcf7afcb8318","ActionName":"JustCareAPI.Controllers.AppointmentController.GetAllDatesDtoByCategoryId (JustCareAPI)","RequestId":"8000003d-0004-fd00-b63f-84710c7967bb","RequestPath":"/AppointmentAPI/1"}
{"@t":"2024-01-17T06:59:08.3843955Z","@mt":"Could not find file 'C:\\Images\\DentistAppointmentImages\\520e9327-0363-4faa-a4da-98b365d70983.jpg'.","@l":"Error","@x":"System.IO.FileNotFoundException: Could not find file 'C:\\Images\\DentistAppointmentImages\\520e9327-0363-4faa-a4da-98b365d70983.jpg'.\r\nFile name: 'C:\\Images\\DentistAppointmentImages\\520e9327-0363-4faa-a4da-98b365d70983.jpg'\r\n   at Microsoft.Win32.SafeHandles.SafeFileHandle.CreateFile(String fullPath, FileMode mode, FileAccess access, FileShare share, FileOptions options)\r\n   at Microsoft.Win32.SafeHandles.SafeFileHandle.Open(String fullPath, FileMode mode, FileAccess access, FileShare share, FileOptions options, Int64 preallocationSize, Nullable`1 unixCreateMode)\r\n   at System.IO.File.OpenHandle(String path, FileMode mode, FileAccess access, FileShare share, FileOptions options, Int64 preallocationSize)\r\n   at System.IO.File.ReadAllBytesAsync(String path, CancellationToken cancellationToken)\r\n   at JustCare_MB.Services.AppointmentService.GetAllAvailableAppointmentByCategoryId(Int32 CategoryId) in C:\\Users\\Smail_-\\Desktop\\JustCare\\JustCare_MB\\Services\\AppointmentService.cs:line 188\r\n   at JustCare_MB.Services.AppointmentService.GetAllAppoitnmentDatesDtoByCategoryId(Int32 CategoryId) in C:\\Users\\Smail_-\\Desktop\\JustCare\\JustCare_MB\\Services\\AppointmentService.cs:line 145\r\n   at JustCareAPI.Controllers.AppointmentController.GetAllDatesDtoByCategoryId(Int32 Categoryid) in C:\\Users\\Smail_-\\Desktop\\JustCare\\JustCareAPI\\Controllers\\AppointmentController.cs:line 36\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(ActionContext actionContext, IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Awaited|17_0(ResourceInvoker invoker, Task task, IDisposable scope)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Awaited|17_0(ResourceInvoker invoker, Task task, IDisposable scope)\r\n   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)\r\n   at JustCare_MB.Middlewares.GlobalExceptionHandlingMiddleware.InvokeAsync(HttpContext context, RequestDelegate next) in C:\\Users\\Smail_-\\Desktop\\JustCare\\JustCare_MB\\Middlewares\\GlobalExceptionHandlingMiddleware.cs:line 31","@tr":"bb359c031fc0e420c177eddaf0b6104c","@sp":"694dcbaed473c164","SourceContext":"JustCare_MB.Middlewares.GlobalExceptionHandlingMiddleware","ActionId":"28ce79d0-c551-4759-8e76-dcf7afcb8318","ActionName":"JustCareAPI.Controllers.AppointmentController.GetAllDatesDtoByCategoryId (JustCareAPI)","RequestId":"8000003d-0004-fd00-b63f-84710c7967bb","RequestPath":"/AppointmentAPI/1"}
{"@t":"2024-01-17T06:59:08.3879418Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["98108.4228"],"@tr":"bb359c031fc0e420c177eddaf0b6104c","@sp":"694dcbaed473c164","RequestMethod":"GET","RequestPath":"/AppointmentAPI/1","StatusCode":400,"Elapsed":98108.4228,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"8000003d-0004-fd00-b63f-84710c7967bb"}
{"@t":"2024-01-17T07:02:55.9884332Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["149.5163"],"@tr":"c6afc43c4d5e05f8c5c7a92173809cbd","@sp":"6cccd90a97675da6","RequestMethod":"GET","RequestPath":"/swagger/index.html","StatusCode":200,"Elapsed":149.5163,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"80000008-0005-fe00-b63f-84710c7967bb"}
{"@t":"2024-01-17T07:02:56.1733866Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["73.3278"],"@tr":"91fb2beb6ad7f369da5dafc02e55e8fc","@sp":"59864b07bc3aadce","RequestMethod":"GET","RequestPath":"/swagger/v1/swagger.json","StatusCode":200,"Elapsed":73.3278,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"8000002f-0006-fb00-b63f-84710c7967bb"}
{"@t":"2024-01-17T07:03:16.0617083Z","@mt":"Create Appointment: {\"Date\":\"2024-01-19T00:00:00\",\"CategoryId\":1,\"DentistDescription\":\"string\",\"Images\":[\"/9j/4AAQSkZJRgABAQAAAQABAAD/2wCEAAkGBxMTEhUSEBIVFhUVFRUVFRUVFxUVFRUXFxUWFhUVFRYYHSggGBolHRUVITEhJSkrLi4uFx8zODMsNygtLisBCgoKDg0OGxAQGi0lICUtLS4tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLf/AABEIAJEBWwMBIgACEQEDEQH/xAAbAAACAwEBAQAAAAAAAAAAAAACAwABBAUGB//EAEIQAAEDAgIGBgcECQQDAAAAAAEAAhEDIQQxEkFRYXGBBSKRobHRBhMyQpLB8BRSYuEVI1NyorLC0vEHM0OCFoOj/8QAGgEAAgMBAQAAAAAAAAAAAAAAAAECAwUEBv/EADkRAAEDAQUECAQFBAMAAAAAAAEAAhEDBBIhMUFRYaGxE3GBkcHR4fAFFCKiI0JS0vEVMlNicpLC/9oADAMBAAIRAxEAPwDlEqpUK1dHdH1Kz9CkwuO7IDa45AL05IAkrwzWlxgCSkMC002r3fRXoE0AGu8vOxvVA3TmeNl3aPoxhm+zQZ/2l3e4lcL7dTGUn3vWrS+FViJcQOJ4YcV8vY1aKbV9O/QeH/Y0/hHkgd6P4Y/8I5SPAqn51p0K6P6W8ZOHFfPWNWim1e1Po1htTCOD3fMom+jVD8XxfkkbWw7ffapD4fUGzv8AReQptWhjV66n0Dhx7hPFzvNa6fR1EZU29gVbrS3QK5thfqRxK8axq0MYvZtwzPujsSK+Apn3R2Kv5gHRWixkarzbGJrGLfWwIGSW2mnfByS6ItzS2MTW001lNNp05yUS5TYyUptNMDFqbg9qL7Oq76uFJZw0bQiDRuTfVqaKV5S6MIRTV+qRBm5GKe5K8ncSfVqjTWj1f4VegNgReRcCxmmgdTXQ9U3YEupQGpMPSNNc91NLdTWqo0hLBB4qYcqixY3MSXsXRexZ3U1MOVRZK572JD2Lu0MGDnddGjQaNQSNYBMWYnMrxj6R2HsKzPavoRa3YlVKLDm0HiJTFp3JOsX+3D1Xzp7Vne1fQ6nRVE50hyEeCQ7oLD/sv4n+atFpbqCqHWB+hHHyXzt7VnqNX0n9B4f9kOZcfEq/0Jh/2TOd/FTFsaNDwVf9NefzBfLKjVnqNX1w9B0P2LPhHks2I9FcM/OiORc3wKm23M2FVu+FPjBw4+q+R1AlFe+6Y9BCAXYd5P4HRfcHiI5jmvD4vDOpuLKjS1wzBEH/ABvXZSrMqD6Ssy0WWrRP1jt07/OCkSrVIlcudOwOEdWqNpM9p5gbBtJ3ASeS+x9A9DU6FMMYLDMnN51ud9WXg/8ATjDB1ao8+4wAcXHPsaRzX1OiLLJt9Ul1zQc16H4TQa2n0mpnuy5ymAISESElZy2EtwCqyJ6UVIJJmkNir1w2JRVQhCccQNiWcQNiWQgcEJSmnEITXSSEJTSlFUekFGQhIQkmltuK3YanAWFmTefyXUZkk4psEIihIVlw2qiVFTS3IdJW5AU0kfrUPrygKohOEIziVRxO5LLUBahRlM+0KjXSSEJCESre9JKIqi1NJaAJAKza1poew7dPgswCcpAQU5j04V1mARAJJytIxCIYncswCMNSTlaRidyL16zgIoRCcp3rBsVSEsIghNMaAmAJbUwFRTVkWXnvSToGniGQ4Q4ToPGbT827R87r0SXXFlJji0gjNRexr2lrhIK+B43CupPdTeIc0wR8xu180tet/wBSMKG1qdQe+0g8WnPscByXkl6GjU6RgdtXjrTR6Gq5mz+RwXr/APTasBVqs+8xrux0f1L6fQfZfFPRnG+pxNN5MNmHfunqknhIPJfYsM9ZVuZFSdo9Fv8AwqoHULuwnjj59xW2ULiqLkBcuILTUcUKolCSmkiUQaSrTQiUZCEtRByJCSSWoSxPhVopoWYsVaC06CgYhCyuOiJOou8AUttdzrk22aloxdP9Uf3j4R4rFQIDZO0Kuo8tbICnTAJgp2mAmNq/QK4+LrdfRkjIjvnLXb/KxfpF0HbEtEgkjK2raNizHW5zSfRaQsTXAQvVNr7+1Ma+dYXlR0q4CTlE5bp7FsodLA2cDnquIyk7p8VY34i05qD/AIe4CQvQKLiOxrRMuaOevOIVU+lWEGDkDIOYjORnaVb88z2VT8k85cl3IQOjaFxv0ky06V8tewfNIq9LgEtjLI7SADHG/cUnfEGKTbA8rsvO9IdTlcM9MOJbFgbGRcGJ15WmymH6UJnStYEETlnlq19ipPxHQK7+mkCSuu6hqkJegWGR+RWOhVJfJeAI1ka9V9Vs9fDPrGCIm+dr7vrgVdZ7U57sVz17O1jZGa00vZdvA+fml6Cbhm9Q/ujuJ8k3QXeuNZwxEGJ2gr0UISg1GGo4UKSFUKIHOQF6E5TlEoPRhyEJrSmNKQCjBQmnApVd9lYcsuJekEL5z/qRWmrTZ91pd2uj+nvXkF1fSHGeur1KgyLoHAWHaBPNcpegs7LlMNXkLXUFSu541PAYDgEbAvrHon0j67DsJPWHVfxGs8RB5rxjfQ6oM3gcie+F2/RTB1MPVcx92PbIIJIBblY7QT2BcVqrUarIa7Eeytaw2O12Z81KZDTgcjGwmCfZXtw5QlJpuRkrNWwo4pTnK3FJcUIKIvVaaS5yrTTSWtj05pWJjlopuQhaQrSwUUpIRQqchLkurimNILzwGZPJGSYBJgLRWp/qyNg7xdceg3MDUVv/AEsz7j+weaw6Q0pbkcpsdiqf9TCFeGvpuBIXG6RY5r5GURoiLiRIE5aiBusubQqtIudIC8ZOmTpCxzG0bRK7vS1KW7DII2W2dy4GKu4wMr6ORyAPWGokzzWQYc8tdnpv3bMccd5nDLSDSGBzcBrGmUHbhu3YFV60hpa6SAHCctoE8Yidu3VpbXyDDE2nO8ySALkdm5c17wCGyTJnZMOnRMbeyx2X0US+pUcGmACA421gEgzMC4OoycxAmHRiTUPs4aY4YzqNMVe8kgMGGJx0u464YgiDltwwC0PaciSDBJLnGNE315DVxGrNY9EkODBps0h1wCdCGtvIHXbtA607pI7VLoLSIe7ONdyM/eMki+UroM6M0QBOsWGVrQBqGWSmL0fSMO7twk8cOrBUXmj+4ye+MdJ8M+K8/hwb6FSSAdK4cCYuIyb3ZX2q3VIguMgESIgjbOjadR1rbjehgbkAmIBIBAvbMdXXkudVpOaQJIBiWvJLS429oklovFnWOo5Ksug/icfP0GgyVzWSPwz2DDhvx12nNFi3iAcrw0ixA9W/M6wBfZZKoVzFzBOk4jUR/wAQLdXswRtk5rIKoc6lMgEE3g3DXQ7eY0voW1F0gkDOLm8tsBmed/uqYodG6Dt7AAYz24HSUPqFzQN3aSZ03HfGuM4dGhUL32sNMGTsaBkDlqP/AGEjZ6HDNAEAbL7c+3VdcjojA+8RkTE3Ig2uLZRO+Su2xl7/AFrldFl+ogDLDhquK0w0HGT57N2zbsC34RnVO+3z+ajd+qyEY6k0QXjlfwU9a03Y4EHYda1AcVnuY4CSEaiAPUlSUERKU9ytxSajkIQPel6aCo5J00IWtr0xrlja9PYUIWppRgpLSjBSTTC5ec9MOkPVYd0HrP8A1beYOkeTZ5wu7UcvHelWAqV6rQ2NFjddruMusNwaraN2+C8wFVXFR1MikCXHDDn2LwdQJK9R/wCIVT77ew+SH/wyt95v8XktYWuj+rn5Lz5+EW3/ABnvb5r3AeTfUha8TMc0VvZS3UjqXiWVntMyvewDgV0KNVaZXKp1IK6FJ8hbYIOIWQWlpIOiJyRUKa5IrJqCQ96APVOQxsk8AkXAZqbKbn/2iVqpvWlhXOpOW6mU1EggwVpa5EXJLSrcUIVuesGMqS4xwT9O6ygmJ1m65bW8tp4arrsjfqLveP8ACWxrkb3dxUcMpMcEFQzlrkc1x2SoRUjQrprtv0z7yTcUC5lrWsc9We/gvO4llwYIkskZ7nb7aXcV6HCulhGxcbpSk5p3SHN2E5EHeSdLfJ2Km1U7r+2O/wBFfZal5h95eq47rPIglzbAZXDzJM5AS0E7xnIB7/QOFAaHOuXdcnKSQIIE2sBaTYDPNcPoql6x1V5HWfUMEGxFtGZjIk/JexpMDRA2QPruU3MHSXdkdU45bpJjv1SNT6L22fDy8MgCTfiYAa3PwWdxd94zxQkxdXpWyXbUqMoQIlcNOkawvkxsTKVU5FI6QwYcDncZjMGbEb5hXTctjxIhQr0mVKd9qlRqPpVLjl4DpAmlEj2asA6pc10iDld1iN41SelTjSaL6IOW5oy4XHxFM9JsKNF0iRpDXAJADoPxOS/R1umetcNydbrSBc8I5m+yOMtvUyRmDj1HDnE/ytIvALTGBBjrGI4XgO3SF6votkMuCLk335I61TqnfblrQuqaLYScSb6P3RfjmV2Uop0i/sWc78SsAevyS3kDIBNwbwHC0au1Z3H8lA7uXLTrvDwSV2OZeaRtXYa9MDljL7960NK2ViI3FJqFE4pTyhCzVnLPpIqrlRd/iFVUrsYQHFXU7O94kI2OWukVibtC2UVaqi0tMFaWo5Smq6roCEBJr1Vk1zlPIlU+ogNTcuG21IAYF22RmBd2e+3krdUMoNI7Vb3yhWbJXcAnDbo3RNNpNlbd6shJQlIIvnM3+u5dLBZLE8RHGO1bcEFsWR16kN2Cz7U3652+GHKEbws9VasSLrK9dK5VkqmBxsroO1bEOINxyP12IqdTUVmW531ALUszYojfiqN7gXHfuWmg6Qs7yZtkm4V2fH81Ow1DixV2tguhy1tVVHIqYScSVoLgWdz/AGj+E99vmsqc7Lie4fQUdAFlm2931Bq0rGIZO08sFREgbVToAtnIVFxPNWadjdcTHXXArq61MIYeRqI/PzWf0iozScYuBI2yCCDPEJxPsu2WPyRdN05o1CPuOEi+Ygc5haNqZJDurgVxWc3CWHQwvO+irJblE1HDf1Xlond5r1rwIC876J0yAQdoI3TUqNIA40pt95ehrmABH19QqaTfxj18FdaX4Gd/fqs1TMbhPejByul1HdY9iFwOvs/JV2szVKlSbFNo3IqkytlK4+tiwl3gtOGfYdnerrIZY9iptLYuu2GO/wBlcb0ppfqqlvcneNTiOTh2FK9E2dUkmerTb8Om2Y22XU9IaM0KpINmOdG2BMDiJCx+idOGQREUqM7/ANWHO7yVWxuD56/uE+CvqVPw2f8AIz2tMcnduK6tRw0wNTRJ5JLdpGckniltfOm77x0RwzPgO1NFxAMAKy1G6xrPfvFVWcTeftPAe+CGBt7VbYzuUJOxUCuBdRC0tdZp3R2WWyk5c1h6vA+P+FuwxW+x15oKxqzbtRw3+qa5JqlaKgWLFOgFSJUA28QAswcJJPJUSNnehCPRKwqr77yVtwGiAro5rZSWOl7QWymtWyuvUgs22CKk7gtNMIMbkm4bNLxoXQuVcp4UawnUjbUgnj4KOqlY1pdeqlbFJpawN3eviqdYQhlFp228UCoVgC0CZvkgqVDMIntnI+SU5x1pKLUT5IldHCOXOBlpnUtWDfYbrLRsLsHNXLa2y0HYea2YlyyuTKjrrPiakDecvNd5IAkrga0vcANVmeQXEzlYK2vAyCWGqBYdWpfeXLaDQBdGiP1qdRs7sKzlpGY8kYdDgdXmrbK67VG9V1mXmEDZygrqUTZZsSmU3JbxK2FjrJVMFo2AntVestYQpVdLj2diqnmse1OmqVs0mXaYB2KU3XRAXuUPrCqJGxcyshSPaA4jiPooq9WaJOwPkbYpvcO9oVG0EbVh6TeW06mjk5jiOEGQN+Y5rVoHpaQGo98lxWgXH39CIO4xCd0BRgEjW1h+LSqW+NbX1JedjbnksGFxIa3RbFqdMCNsO8Glieyzd7rnhq806bQ0mocAPfv0UahNRwp7c+rP1VoyCRPJUIjPl+atrrRlvWW915xK7ygITGmAdxB7f8KnP571bDJg6xo+S6LG+7VE6qm0NL6R7+5M6RGlSf8Aia6NlwQPFcroSqRSe6b6LR3EAdhC1faIa5hzGXGcu1c/Bsgupj3ng8LuaB2Adi7GUYcWn2LzVzOrTRvD9Q77tTzXQYIawbtLt/IBaJixGecIJGllbIcrDwRh0nIWXHa33qi6qbLtNrdyr1W9LIjNN9bGYuhL7zcrlVgJRURcjaO8FasMsjXjSBy1dq1tC2LI6aQ3LOtjYeDtC01jZYMTeBtK1PcsbjJLonUPNTtFS5TJUbK2Xzs9jz7ETjsEpdQaz2KzE3PJVWbrlYi0RgUtz9ca5W5pWLRG1PwtS0ax4LSsLxBaua105aHDTkfXmuhh3JeLdr5oabrpGOqW42XccMVwsbfcG7SswbYZX7c0bWWyG5UQIE3UdnM+awXGXErZJlAKZTRTCB1QZQibUCSRlLc8ymHfGV1dQE5eajqg19iSJQioNQhRj9E3157lbQ3OEFRwKspVDTdeCTmhwukYLTUrga54LIXEkk5nuVQrG1X17UagugQFGlQbTyzU0TmqUJRgAe13LkV2SjsxwCFwG+e1HmZHeqc4bPJMGDIUQn4atIg5jvRV6uiN+pZHmVS0PnhdyxXN8m0vvabPeipoRm0EKMGcoXED81nkyV1nere6dSglLdWb95vaFTsQ0CZtzI7k7jtihebGYWlxMDKFz+l3D1L2m2lZp2OdbVulXielKYFg4kbiAN5J1LC0PquBLeqIM5awdEAgkZCxE5Los9+m+9kNZw9erDmouDTTxy0wOJ0g5deMxOC0YTCwQXkEEEwNdmCDsGfYug46ylUqWjvMAchlCanaLSagDRl74JUaDacka8tPBQhRQpkRYCVyK4lCGayhcNSvROwqwBrnemDGISBWbpGkXN0m+0NHSAsTcdYb1h6FaWvq6ftyHNG0Pb7Q3DxK61QDIi3E+K5OKwr2kOZJLLAiAdH7pBsdkaxfVbTZbA4RH1ZctezlpJHJ8swOn8sgx1Tvyg90rtUHAW70T3EZBczB9JNJh4IIMbp4GDwzWtuNaSdHnZw7bWWe5j5kjux5K8uE467cJ6phG9wJyRz1batqU+oy3WAneExjmwesDwIUS1w0Tvt0KjmSMhl3p2HrSIOYSnCRsjaqcW6xJ7FfZ7R0Ug5KNWiKjYKbiK2oZ69yRp+EKw4QYCFrr5BRr1zVM6J0qQptgK/VncjgEZ5IZvmjMGwVCmZ1QhoItPFWKcXBuqcYEIAYUmuLTIRmtTa496x+skl50zOQGU60OmdgKjmyc10vtjnNuwqWUGU3SP46kdOnF5S6jSjeBYTkjadhyXIrZWdQI6oM7kCFMJBxmrRPbTA/mVOxuotHbPhHijbQJN3nsA8ETsI6bVH/ABHzVv07R3HxVUmcj3gcggbi9V/hA8XFU7Egfe7GFW7DTm4niT8iFZwbC3LL9/8AuR9O37R6Jx/r958AUBxBORP8IP8AKq+1RnM79COeUpp6PZbqt3WHiVQwIygDk2PBEt9gDzRgRlHa4/tWY49ut/8AA8+CJvSMjqgv3tY9ajh2i4I+Gn5IDQB2fDT8kX2/p5ftHNS6MH83A+ZVDGOH/F2lw8WpP2l59yN00z2HTHeE8YRs3A5U6f8Aan06Ijhup/2ovjRo4nx8EjSETfPAeB5rnOxLh7XVG99PwAPirOJt1W1Sd1OqR3EAhdFlASYNt0DwhCGxN3fE7zR0mwR1Yeaj0bTgZPX/ACFzmF5ypz+8x4P8Q+aJzXj3GjeIBHIFbH0RrAPG/eU7RsIA7Ajpjl78uCZpszHl4yuWRWd74A2gnwbI71TejJMve4nbN+RJJHIrpvO231sREACPBRFRwyMdWHKFYS2IjmeZKz/ZKbfZY3cYnvPNMCPTtARNfAUSSc1EYaJbTdXp7h2K5BOxW5zdiSaWUQqFCiLIzKEzCmgTqVvEATmrrDLYha7bdCjjmmMAIyQhovmdSttQG0IGOjJCIKF+CYfaAO4gHx+SyVuimz1ZGwXAHAgytZVhx47s1MPcMii71dwWQ4Sq32KzgPxOfA7neKDQq7WOP4gAOR0yCt7tU28EUCIJCA8zp3Dnmh0ERHdPKY4LmPY8XLW32U5H8MpbqrhqPKnXA8QF0zh26g2eAHeoaJ/F8TvkVI1ifRIU6Y04fx4rnCvU1d/V/mlX9sqbAOBpGeekul6qB7RHMnxU9XOTnD4fJHSD9IRdGp99srnUK1R3unm4f0NKL1rpvSdzZVeFsGHJ94nf1T8kX2cTmOGjT8kX2/pHHxJSLT/kPcPABYH1WjPRH/qe2OcWRB+kf908jP8ANK2to7YG/Qp+So0GzYj4W+SL7NnL9qCHfqn/ALfuPJZ22P8Au1D/ANaX9qp9QE2qv+Fv9iZVwVOfZniG+Sn2NgHVbF948CiWbftb5p4jT7iP/JVUZz9b2tHdARetIP8AuN+Bze+/grbgQb3HAu/uTDhD+0dyJHgUfTt4Ry81Akzl3O82+Cyms7a4/uuZ/UAr9adj/wD4/IpjsM4Gz3+PjKP7Kf2h7G+ScN0I+5SvmMj9vkEylmnNzKiipQ5Z3Zox7J4+SiiFLZ1qqmrgmt18B4K1EJHJJo/LyRU8yrUQg5oW+12q8RqVqIR+YKqGfJLKiiFIZrQ7JBW1KKIUG5hLd8kIVqIVgyUVqKIQUKOnr4KKISchbmnV8laiFF2aCp7I+tSqjnyUUQjQ9qlHMqm581SiE9qupmVTdfBRRCeiutq4ICoohDckb/kFHauAUUQkEVbNCzXwUUQgZJtHJA/2uxRRCBmgq5oVFEJjJROoa1aiEnZI2KKKIUChdmEqrmVFEBSav//Z\",\"\",\"/9j/4AAQSkZJRgABAQAAAQABAAD/2wCEAAkGBxMTEhUSEBIVFhUVFRUVFRUVFxUVFRUXFxUWFhUVFRYYHSggGBolHRUVITEhJSkrLi4uFx8zODMsNygtLisBCgoKDg0OGxAQGi0lICUtLS4tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLf/AABEIAJEBWwMBIgACEQEDEQH/xAAbAAACAwEBAQAAAAAAAAAAAAACAwABBAUGB//EAEIQAAEDAgIGBgcECQQDAAAAAAEAAhEDIQQxEkFRYXGBBSKRobHRBhMyQpLB8BRSYuEVI1NyorLC0vEHM0OCFoOj/8QAGgEAAgMBAQAAAAAAAAAAAAAAAAECAwUEBv/EADkRAAEDAQUECAQFBAMAAAAAAAEAAhEDBBIhMUFRYaGxE3GBkcHR4fAFFCKiI0JS0vEVMlNicpLC/9oADAMBAAIRAxEAPwDlEqpUK1dHdH1Kz9CkwuO7IDa45AL05IAkrwzWlxgCSkMC002r3fRXoE0AGu8vOxvVA3TmeNl3aPoxhm+zQZ/2l3e4lcL7dTGUn3vWrS+FViJcQOJ4YcV8vY1aKbV9O/QeH/Y0/hHkgd6P4Y/8I5SPAqn51p0K6P6W8ZOHFfPWNWim1e1Po1htTCOD3fMom+jVD8XxfkkbWw7ffapD4fUGzv8AReQptWhjV66n0Dhx7hPFzvNa6fR1EZU29gVbrS3QK5thfqRxK8axq0MYvZtwzPujsSK+Apn3R2Kv5gHRWixkarzbGJrGLfWwIGSW2mnfByS6ItzS2MTW001lNNp05yUS5TYyUptNMDFqbg9qL7Oq76uFJZw0bQiDRuTfVqaKV5S6MIRTV+qRBm5GKe5K8ncSfVqjTWj1f4VegNgReRcCxmmgdTXQ9U3YEupQGpMPSNNc91NLdTWqo0hLBB4qYcqixY3MSXsXRexZ3U1MOVRZK572JD2Lu0MGDnddGjQaNQSNYBMWYnMrxj6R2HsKzPavoRa3YlVKLDm0HiJTFp3JOsX+3D1Xzp7Vne1fQ6nRVE50hyEeCQ7oLD/sv4n+atFpbqCqHWB+hHHyXzt7VnqNX0n9B4f9kOZcfEq/0Jh/2TOd/FTFsaNDwVf9NefzBfLKjVnqNX1w9B0P2LPhHks2I9FcM/OiORc3wKm23M2FVu+FPjBw4+q+R1AlFe+6Y9BCAXYd5P4HRfcHiI5jmvD4vDOpuLKjS1wzBEH/ABvXZSrMqD6Ssy0WWrRP1jt07/OCkSrVIlcudOwOEdWqNpM9p5gbBtJ3ASeS+x9A9DU6FMMYLDMnN51ud9WXg/8ATjDB1ao8+4wAcXHPsaRzX1OiLLJt9Ul1zQc16H4TQa2n0mpnuy5ymAISESElZy2EtwCqyJ6UVIJJmkNir1w2JRVQhCccQNiWcQNiWQgcEJSmnEITXSSEJTSlFUekFGQhIQkmltuK3YanAWFmTefyXUZkk4psEIihIVlw2qiVFTS3IdJW5AU0kfrUPrygKohOEIziVRxO5LLUBahRlM+0KjXSSEJCESre9JKIqi1NJaAJAKza1poew7dPgswCcpAQU5j04V1mARAJJytIxCIYncswCMNSTlaRidyL16zgIoRCcp3rBsVSEsIghNMaAmAJbUwFRTVkWXnvSToGniGQ4Q4ToPGbT827R87r0SXXFlJji0gjNRexr2lrhIK+B43CupPdTeIc0wR8xu180tet/wBSMKG1qdQe+0g8WnPscByXkl6GjU6RgdtXjrTR6Gq5mz+RwXr/APTasBVqs+8xrux0f1L6fQfZfFPRnG+pxNN5MNmHfunqknhIPJfYsM9ZVuZFSdo9Fv8AwqoHULuwnjj59xW2ULiqLkBcuILTUcUKolCSmkiUQaSrTQiUZCEtRByJCSSWoSxPhVopoWYsVaC06CgYhCyuOiJOou8AUttdzrk22aloxdP9Uf3j4R4rFQIDZO0Kuo8tbICnTAJgp2mAmNq/QK4+LrdfRkjIjvnLXb/KxfpF0HbEtEgkjK2raNizHW5zSfRaQsTXAQvVNr7+1Ma+dYXlR0q4CTlE5bp7FsodLA2cDnquIyk7p8VY34i05qD/AIe4CQvQKLiOxrRMuaOevOIVU+lWEGDkDIOYjORnaVb88z2VT8k85cl3IQOjaFxv0ky06V8tewfNIq9LgEtjLI7SADHG/cUnfEGKTbA8rsvO9IdTlcM9MOJbFgbGRcGJ15WmymH6UJnStYEETlnlq19ipPxHQK7+mkCSuu6hqkJegWGR+RWOhVJfJeAI1ka9V9Vs9fDPrGCIm+dr7vrgVdZ7U57sVz17O1jZGa00vZdvA+fml6Cbhm9Q/ujuJ8k3QXeuNZwxEGJ2gr0UISg1GGo4UKSFUKIHOQF6E5TlEoPRhyEJrSmNKQCjBQmnApVd9lYcsuJekEL5z/qRWmrTZ91pd2uj+nvXkF1fSHGeur1KgyLoHAWHaBPNcpegs7LlMNXkLXUFSu541PAYDgEbAvrHon0j67DsJPWHVfxGs8RB5rxjfQ6oM3gcie+F2/RTB1MPVcx92PbIIJIBblY7QT2BcVqrUarIa7Eeytaw2O12Z81KZDTgcjGwmCfZXtw5QlJpuRkrNWwo4pTnK3FJcUIKIvVaaS5yrTTSWtj05pWJjlopuQhaQrSwUUpIRQqchLkurimNILzwGZPJGSYBJgLRWp/qyNg7xdceg3MDUVv/AEsz7j+weaw6Q0pbkcpsdiqf9TCFeGvpuBIXG6RY5r5GURoiLiRIE5aiBusubQqtIudIC8ZOmTpCxzG0bRK7vS1KW7DII2W2dy4GKu4wMr6ORyAPWGokzzWQYc8tdnpv3bMccd5nDLSDSGBzcBrGmUHbhu3YFV60hpa6SAHCctoE8Yidu3VpbXyDDE2nO8ySALkdm5c17wCGyTJnZMOnRMbeyx2X0US+pUcGmACA421gEgzMC4OoycxAmHRiTUPs4aY4YzqNMVe8kgMGGJx0u464YgiDltwwC0PaciSDBJLnGNE315DVxGrNY9EkODBps0h1wCdCGtvIHXbtA607pI7VLoLSIe7ONdyM/eMki+UroM6M0QBOsWGVrQBqGWSmL0fSMO7twk8cOrBUXmj+4ye+MdJ8M+K8/hwb6FSSAdK4cCYuIyb3ZX2q3VIguMgESIgjbOjadR1rbjehgbkAmIBIBAvbMdXXkudVpOaQJIBiWvJLS429oklovFnWOo5Ksug/icfP0GgyVzWSPwz2DDhvx12nNFi3iAcrw0ixA9W/M6wBfZZKoVzFzBOk4jUR/wAQLdXswRtk5rIKoc6lMgEE3g3DXQ7eY0voW1F0gkDOLm8tsBmed/uqYodG6Dt7AAYz24HSUPqFzQN3aSZ03HfGuM4dGhUL32sNMGTsaBkDlqP/AGEjZ6HDNAEAbL7c+3VdcjojA+8RkTE3Ig2uLZRO+Su2xl7/AFrldFl+ogDLDhquK0w0HGT57N2zbsC34RnVO+3z+ajd+qyEY6k0QXjlfwU9a03Y4EHYda1AcVnuY4CSEaiAPUlSUERKU9ytxSajkIQPel6aCo5J00IWtr0xrlja9PYUIWppRgpLSjBSTTC5ec9MOkPVYd0HrP8A1beYOkeTZ5wu7UcvHelWAqV6rQ2NFjddruMusNwaraN2+C8wFVXFR1MikCXHDDn2LwdQJK9R/wCIVT77ew+SH/wyt95v8XktYWuj+rn5Lz5+EW3/ABnvb5r3AeTfUha8TMc0VvZS3UjqXiWVntMyvewDgV0KNVaZXKp1IK6FJ8hbYIOIWQWlpIOiJyRUKa5IrJqCQ96APVOQxsk8AkXAZqbKbn/2iVqpvWlhXOpOW6mU1EggwVpa5EXJLSrcUIVuesGMqS4xwT9O6ygmJ1m65bW8tp4arrsjfqLveP8ACWxrkb3dxUcMpMcEFQzlrkc1x2SoRUjQrprtv0z7yTcUC5lrWsc9We/gvO4llwYIkskZ7nb7aXcV6HCulhGxcbpSk5p3SHN2E5EHeSdLfJ2Km1U7r+2O/wBFfZal5h95eq47rPIglzbAZXDzJM5AS0E7xnIB7/QOFAaHOuXdcnKSQIIE2sBaTYDPNcPoql6x1V5HWfUMEGxFtGZjIk/JexpMDRA2QPruU3MHSXdkdU45bpJjv1SNT6L22fDy8MgCTfiYAa3PwWdxd94zxQkxdXpWyXbUqMoQIlcNOkawvkxsTKVU5FI6QwYcDncZjMGbEb5hXTctjxIhQr0mVKd9qlRqPpVLjl4DpAmlEj2asA6pc10iDld1iN41SelTjSaL6IOW5oy4XHxFM9JsKNF0iRpDXAJADoPxOS/R1umetcNydbrSBc8I5m+yOMtvUyRmDj1HDnE/ytIvALTGBBjrGI4XgO3SF6votkMuCLk335I61TqnfblrQuqaLYScSb6P3RfjmV2Uop0i/sWc78SsAevyS3kDIBNwbwHC0au1Z3H8lA7uXLTrvDwSV2OZeaRtXYa9MDljL7960NK2ViI3FJqFE4pTyhCzVnLPpIqrlRd/iFVUrsYQHFXU7O94kI2OWukVibtC2UVaqi0tMFaWo5Smq6roCEBJr1Vk1zlPIlU+ogNTcuG21IAYF22RmBd2e+3krdUMoNI7Vb3yhWbJXcAnDbo3RNNpNlbd6shJQlIIvnM3+u5dLBZLE8RHGO1bcEFsWR16kN2Cz7U3652+GHKEbws9VasSLrK9dK5VkqmBxsroO1bEOINxyP12IqdTUVmW531ALUszYojfiqN7gXHfuWmg6Qs7yZtkm4V2fH81Ow1DixV2tguhy1tVVHIqYScSVoLgWdz/AGj+E99vmsqc7Lie4fQUdAFlm2931Bq0rGIZO08sFREgbVToAtnIVFxPNWadjdcTHXXArq61MIYeRqI/PzWf0iozScYuBI2yCCDPEJxPsu2WPyRdN05o1CPuOEi+Ygc5haNqZJDurgVxWc3CWHQwvO+irJblE1HDf1Xlond5r1rwIC876J0yAQdoI3TUqNIA40pt95ehrmABH19QqaTfxj18FdaX4Gd/fqs1TMbhPejByul1HdY9iFwOvs/JV2szVKlSbFNo3IqkytlK4+tiwl3gtOGfYdnerrIZY9iptLYuu2GO/wBlcb0ppfqqlvcneNTiOTh2FK9E2dUkmerTb8Om2Y22XU9IaM0KpINmOdG2BMDiJCx+idOGQREUqM7/ANWHO7yVWxuD56/uE+CvqVPw2f8AIz2tMcnduK6tRw0wNTRJ5JLdpGckniltfOm77x0RwzPgO1NFxAMAKy1G6xrPfvFVWcTeftPAe+CGBt7VbYzuUJOxUCuBdRC0tdZp3R2WWyk5c1h6vA+P+FuwxW+x15oKxqzbtRw3+qa5JqlaKgWLFOgFSJUA28QAswcJJPJUSNnehCPRKwqr77yVtwGiAro5rZSWOl7QWymtWyuvUgs22CKk7gtNMIMbkm4bNLxoXQuVcp4UawnUjbUgnj4KOqlY1pdeqlbFJpawN3eviqdYQhlFp228UCoVgC0CZvkgqVDMIntnI+SU5x1pKLUT5IldHCOXOBlpnUtWDfYbrLRsLsHNXLa2y0HYea2YlyyuTKjrrPiakDecvNd5IAkrga0vcANVmeQXEzlYK2vAyCWGqBYdWpfeXLaDQBdGiP1qdRs7sKzlpGY8kYdDgdXmrbK67VG9V1mXmEDZygrqUTZZsSmU3JbxK2FjrJVMFo2AntVestYQpVdLj2diqnmse1OmqVs0mXaYB2KU3XRAXuUPrCqJGxcyshSPaA4jiPooq9WaJOwPkbYpvcO9oVG0EbVh6TeW06mjk5jiOEGQN+Y5rVoHpaQGo98lxWgXH39CIO4xCd0BRgEjW1h+LSqW+NbX1JedjbnksGFxIa3RbFqdMCNsO8Glieyzd7rnhq806bQ0mocAPfv0UahNRwp7c+rP1VoyCRPJUIjPl+atrrRlvWW915xK7ygITGmAdxB7f8KnP571bDJg6xo+S6LG+7VE6qm0NL6R7+5M6RGlSf8Aia6NlwQPFcroSqRSe6b6LR3EAdhC1faIa5hzGXGcu1c/Bsgupj3ng8LuaB2Adi7GUYcWn2LzVzOrTRvD9Q77tTzXQYIawbtLt/IBaJixGecIJGllbIcrDwRh0nIWXHa33qi6qbLtNrdyr1W9LIjNN9bGYuhL7zcrlVgJRURcjaO8FasMsjXjSBy1dq1tC2LI6aQ3LOtjYeDtC01jZYMTeBtK1PcsbjJLonUPNTtFS5TJUbK2Xzs9jz7ETjsEpdQaz2KzE3PJVWbrlYi0RgUtz9ca5W5pWLRG1PwtS0ax4LSsLxBaua105aHDTkfXmuhh3JeLdr5oabrpGOqW42XccMVwsbfcG7SswbYZX7c0bWWyG5UQIE3UdnM+awXGXErZJlAKZTRTCB1QZQibUCSRlLc8ymHfGV1dQE5eajqg19iSJQioNQhRj9E3157lbQ3OEFRwKspVDTdeCTmhwukYLTUrga54LIXEkk5nuVQrG1X17UagugQFGlQbTyzU0TmqUJRgAe13LkV2SjsxwCFwG+e1HmZHeqc4bPJMGDIUQn4atIg5jvRV6uiN+pZHmVS0PnhdyxXN8m0vvabPeipoRm0EKMGcoXED81nkyV1nere6dSglLdWb95vaFTsQ0CZtzI7k7jtihebGYWlxMDKFz+l3D1L2m2lZp2OdbVulXielKYFg4kbiAN5J1LC0PquBLeqIM5awdEAgkZCxE5Los9+m+9kNZw9erDmouDTTxy0wOJ0g5deMxOC0YTCwQXkEEEwNdmCDsGfYug46ylUqWjvMAchlCanaLSagDRl74JUaDacka8tPBQhRQpkRYCVyK4lCGayhcNSvROwqwBrnemDGISBWbpGkXN0m+0NHSAsTcdYb1h6FaWvq6ftyHNG0Pb7Q3DxK61QDIi3E+K5OKwr2kOZJLLAiAdH7pBsdkaxfVbTZbA4RH1ZctezlpJHJ8swOn8sgx1Tvyg90rtUHAW70T3EZBczB9JNJh4IIMbp4GDwzWtuNaSdHnZw7bWWe5j5kjux5K8uE467cJ6phG9wJyRz1batqU+oy3WAneExjmwesDwIUS1w0Tvt0KjmSMhl3p2HrSIOYSnCRsjaqcW6xJ7FfZ7R0Ug5KNWiKjYKbiK2oZ69yRp+EKw4QYCFrr5BRr1zVM6J0qQptgK/VncjgEZ5IZvmjMGwVCmZ1QhoItPFWKcXBuqcYEIAYUmuLTIRmtTa496x+skl50zOQGU60OmdgKjmyc10vtjnNuwqWUGU3SP46kdOnF5S6jSjeBYTkjadhyXIrZWdQI6oM7kCFMJBxmrRPbTA/mVOxuotHbPhHijbQJN3nsA8ETsI6bVH/ABHzVv07R3HxVUmcj3gcggbi9V/hA8XFU7Egfe7GFW7DTm4niT8iFZwbC3LL9/8AuR9O37R6Jx/r958AUBxBORP8IP8AKq+1RnM79COeUpp6PZbqt3WHiVQwIygDk2PBEt9gDzRgRlHa4/tWY49ut/8AA8+CJvSMjqgv3tY9ajh2i4I+Gn5IDQB2fDT8kX2/p5ftHNS6MH83A+ZVDGOH/F2lw8WpP2l59yN00z2HTHeE8YRs3A5U6f8Aan06Ijhup/2ovjRo4nx8EjSETfPAeB5rnOxLh7XVG99PwAPirOJt1W1Sd1OqR3EAhdFlASYNt0DwhCGxN3fE7zR0mwR1Yeaj0bTgZPX/ACFzmF5ypz+8x4P8Q+aJzXj3GjeIBHIFbH0RrAPG/eU7RsIA7Ajpjl78uCZpszHl4yuWRWd74A2gnwbI71TejJMve4nbN+RJJHIrpvO231sREACPBRFRwyMdWHKFYS2IjmeZKz/ZKbfZY3cYnvPNMCPTtARNfAUSSc1EYaJbTdXp7h2K5BOxW5zdiSaWUQqFCiLIzKEzCmgTqVvEATmrrDLYha7bdCjjmmMAIyQhovmdSttQG0IGOjJCIKF+CYfaAO4gHx+SyVuimz1ZGwXAHAgytZVhx47s1MPcMii71dwWQ4Sq32KzgPxOfA7neKDQq7WOP4gAOR0yCt7tU28EUCIJCA8zp3Dnmh0ERHdPKY4LmPY8XLW32U5H8MpbqrhqPKnXA8QF0zh26g2eAHeoaJ/F8TvkVI1ifRIU6Y04fx4rnCvU1d/V/mlX9sqbAOBpGeekul6qB7RHMnxU9XOTnD4fJHSD9IRdGp99srnUK1R3unm4f0NKL1rpvSdzZVeFsGHJ94nf1T8kX2cTmOGjT8kX2/pHHxJSLT/kPcPABYH1WjPRH/qe2OcWRB+kf908jP8ANK2to7YG/Qp+So0GzYj4W+SL7NnL9qCHfqn/ALfuPJZ22P8Au1D/ANaX9qp9QE2qv+Fv9iZVwVOfZniG+Sn2NgHVbF948CiWbftb5p4jT7iP/JVUZz9b2tHdARetIP8AuN+Bze+/grbgQb3HAu/uTDhD+0dyJHgUfTt4Ry81Akzl3O82+Cyms7a4/uuZ/UAr9adj/wD4/IpjsM4Gz3+PjKP7Kf2h7G+ScN0I+5SvmMj9vkEylmnNzKiipQ5Z3Zox7J4+SiiFLZ1qqmrgmt18B4K1EJHJJo/LyRU8yrUQg5oW+12q8RqVqIR+YKqGfJLKiiFIZrQ7JBW1KKIUG5hLd8kIVqIVgyUVqKIQUKOnr4KKISchbmnV8laiFF2aCp7I+tSqjnyUUQjQ9qlHMqm581SiE9qupmVTdfBRRCeiutq4ICoohDckb/kFHauAUUQkEVbNCzXwUUQgZJtHJA/2uxRRCBmgq5oVFEJjJROoa1aiEnZI2KKKIUChdmEqrmVFEBSav//Z\"]}","@tr":"eb09eb1cc996ebbc24c9c09b3a9b2ffc","@sp":"2aad05f49ffcac21","SourceContext":"JustCare_MB.Services.AppointmentService","ActionId":"4c2de8af-5b3e-4b1a-9fb2-cbfac0137225","ActionName":"JustCareAPI.Controllers.AppointmentController.CreateAppointment (JustCareAPI)","RequestId":"80000050-0002-f800-b63f-84710c7967bb","RequestPath":"/AppointmentAPI/Create%20appointment"}
{"@t":"2024-01-17T07:03:16.8602205Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["2952.1869"],"@tr":"eb09eb1cc996ebbc24c9c09b3a9b2ffc","@sp":"2aad05f49ffcac21","RequestMethod":"POST","RequestPath":"/AppointmentAPI/Create appointment","StatusCode":200,"Elapsed":2952.1869,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"80000050-0002-f800-b63f-84710c7967bb"}
{"@t":"2024-01-17T07:03:34.1613969Z","@mt":"Create Appointment: {\"Date\":\"2024-01-19T00:00:00\",\"CategoryId\":1,\"DentistDescription\":\"string\",\"Images\":[\"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\",\"\"]}","@tr":"28b46e8bca057806441537c6c1083e3c","@sp":"5eaa614cfc614a21","SourceContext":"JustCare_MB.Services.AppointmentService","ActionId":"4c2de8af-5b3e-4b1a-9fb2-cbfac0137225","ActionName":"JustCareAPI.Controllers.AppointmentController.CreateAppointment (JustCareAPI)","RequestId":"80000060-000d-fd00-b63f-84710c7967bb","RequestPath":"/AppointmentAPI/Create%20appointment"}
{"@t":"2024-01-17T07:03:34.2540770Z","@mt":"Appointment Exists","@l":"Error","@x":"JustCare_MB.Helpers.ExistsException: Appointment Exists\r\n   at JustCare_MB.Services.AppointmentService.CreateAppointment(CreateAppointmentDto appointmentDto) in C:\\Users\\Smail_-\\Desktop\\JustCare\\JustCare_MB\\Services\\AppointmentService.cs:line 60\r\n   at JustCareAPI.Controllers.AppointmentController.CreateAppointment(CreateAppointmentDto appointmentDto) in C:\\Users\\Smail_-\\Desktop\\JustCare\\JustCareAPI\\Controllers\\AppointmentController.cs:line 29\r\n   at lambda_method6(Closure, Object)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfActionResultExecutor.Execute(ActionContext actionContext, IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Awaited|17_0(ResourceInvoker invoker, Task task, IDisposable scope)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Awaited|17_0(ResourceInvoker invoker, Task task, IDisposable scope)\r\n   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)\r\n   at JustCare_MB.Middlewares.GlobalExceptionHandlingMiddleware.InvokeAsync(HttpContext context, RequestDelegate next) in C:\\Users\\Smail_-\\Desktop\\JustCare\\JustCare_MB\\Middlewares\\GlobalExceptionHandlingMiddleware.cs:line 31","@tr":"28b46e8bca057806441537c6c1083e3c","@sp":"5eaa614cfc614a21","SourceContext":"JustCare_MB.Middlewares.GlobalExceptionHandlingMiddleware","ActionId":"4c2de8af-5b3e-4b1a-9fb2-cbfac0137225","ActionName":"JustCareAPI.Controllers.AppointmentController.CreateAppointment (JustCareAPI)","RequestId":"80000060-000d-fd00-b63f-84710c7967bb","RequestPath":"/AppointmentAPI/Create%20appointment"}
{"@t":"2024-01-17T07:03:34.2693679Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["1506.6968"],"@tr":"28b46e8bca057806441537c6c1083e3c","@sp":"5eaa614cfc614a21","RequestMethod":"POST","RequestPath":"/AppointmentAPI/Create appointment","StatusCode":409,"Elapsed":1506.6968,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"80000060-000d-fd00-b63f-84710c7967bb"}
{"@t":"2024-01-17T07:04:03.5974385Z","@mt":"Create Appointment: {\"Date\":\"2024-01-20T00:00:00\",\"CategoryId\":1,\"DentistDescription\":\"string\",\"Images\":[\"\",\"\"]}","@tr":"11674a0bea290dc43b1e5e63cb805b6a","@sp":"e664b56e7a76a82f","SourceContext":"JustCare_MB.Services.AppointmentService","ActionId":"4c2de8af-5b3e-4b1a-9fb2-cbfac0137225","ActionName":"JustCareAPI.Controllers.AppointmentController.CreateAppointment (JustCareAPI)","RequestId":"800000c4-000c-ff00-b63f-84710c7967bb","RequestPath":"/AppointmentAPI/Create%20appointment"}
{"@t":"2024-01-17T07:04:03.6818612Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["2665.2059"],"@tr":"11674a0bea290dc43b1e5e63cb805b6a","@sp":"e664b56e7a76a82f","RequestMethod":"POST","RequestPath":"/AppointmentAPI/Create appointment","StatusCode":200,"Elapsed":2665.2059,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"800000c4-000c-ff00-b63f-84710c7967bb"}
{"@t":"2024-01-17T07:04:30.0084681Z","@mt":"Get All Appoitnment Dates By Category Id(4.1): 1","@tr":"61bb9e72428723ec86b785d645652251","@sp":"9675a0072acb340d","SourceContext":"JustCare_MB.Services.AppointmentService","ActionId":"c446cb47-4ae4-4066-bf73-bf752a772ade","ActionName":"JustCareAPI.Controllers.AppointmentController.GetAllDatesDtoByCategoryId (JustCareAPI)","RequestId":"80000052-0002-f800-b63f-84710c7967bb","RequestPath":"/AppointmentAPI/1"}
{"@t":"2024-01-17T07:04:31.5873270Z","@mt":"Get All Appoitnment Dates By Category Id(4.2): 1","@tr":"61bb9e72428723ec86b785d645652251","@sp":"9675a0072acb340d","SourceContext":"JustCare_MB.Services.AppointmentService","ActionId":"c446cb47-4ae4-4066-bf73-bf752a772ade","ActionName":"JustCareAPI.Controllers.AppointmentController.GetAllDatesDtoByCategoryId (JustCareAPI)","RequestId":"80000052-0002-f800-b63f-84710c7967bb","RequestPath":"/AppointmentAPI/1"}
{"@t":"2024-01-17T07:05:03.8554453Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["36871.9271"],"@tr":"61bb9e72428723ec86b785d645652251","@sp":"9675a0072acb340d","RequestMethod":"GET","RequestPath":"/AppointmentAPI/1","StatusCode":200,"Elapsed":36871.9271,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"80000052-0002-f800-b63f-84710c7967bb"}
{"@t":"2024-01-17T07:15:59.1849383Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["163.1723"],"@tr":"d3eee2a89e3cb4aacda55540380270f8","@sp":"811d9386aaa5f02f","RequestMethod":"GET","RequestPath":"/swagger/index.html","StatusCode":200,"Elapsed":163.1723,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"80000062-000d-fd00-b63f-84710c7967bb"}
{"@t":"2024-01-17T07:17:18.0974192Z","@mt":"Get All Appoitnment Dates By Category Id(4.1): 1","@tr":"b8c9586f086fb4664d5f3769c4126718","@sp":"703fc5f7ea767074","SourceContext":"JustCare_MB.Services.AppointmentService","ActionId":"f07868b9-e954-49a3-9049-bef7f20bbf54","ActionName":"JustCareAPI.Controllers.AppointmentController.GetAllDatesDtoByCategoryId (JustCareAPI)","RequestId":"8000000d-000e-fe00-b63f-84710c7967bb","RequestPath":"/AppointmentAPI/1"}
{"@t":"2024-01-17T07:17:19.4860911Z","@mt":"Get All Appoitnment Dates By Category Id(4.2): 1","@tr":"b8c9586f086fb4664d5f3769c4126718","@sp":"703fc5f7ea767074","SourceContext":"JustCare_MB.Services.AppointmentService","ActionId":"f07868b9-e954-49a3-9049-bef7f20bbf54","ActionName":"JustCareAPI.Controllers.AppointmentController.GetAllDatesDtoByCategoryId (JustCareAPI)","RequestId":"8000000d-000e-fe00-b63f-84710c7967bb","RequestPath":"/AppointmentAPI/1"}
{"@t":"2024-01-17T07:17:19.6020815Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["74155.0063"],"@tr":"b8c9586f086fb4664d5f3769c4126718","@sp":"703fc5f7ea767074","RequestMethod":"GET","RequestPath":"/AppointmentAPI/1","StatusCode":200,"Elapsed":74155.0063,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"8000000d-000e-fe00-b63f-84710c7967bb"}
{"@t":"2024-01-17T07:18:07.4734639Z","@mt":"Get All Appoitnment Dates By Category Id(4.1): 1","@tr":"3324d1cd24110346cad7046e29046fb5","@sp":"decc35813362f513","SourceContext":"JustCare_MB.Services.AppointmentService","ActionId":"34e2e710-a68c-420e-a2d0-2c2949388c41","ActionName":"JustCareAPI.Controllers.AppointmentController.GetAllDatesDtoByCategoryId (JustCareAPI)","RequestId":"800000b7-0000-fe00-b63f-84710c7967bb","RequestPath":"/AppointmentAPI/1"}
{"@t":"2024-01-17T07:18:08.0495919Z","@mt":"Get All Appoitnment Dates By Category Id(4.2): 1","@tr":"3324d1cd24110346cad7046e29046fb5","@sp":"decc35813362f513","SourceContext":"JustCare_MB.Services.AppointmentService","ActionId":"34e2e710-a68c-420e-a2d0-2c2949388c41","ActionName":"JustCareAPI.Controllers.AppointmentController.GetAllDatesDtoByCategoryId (JustCareAPI)","RequestId":"800000b7-0000-fe00-b63f-84710c7967bb","RequestPath":"/AppointmentAPI/1"}
{"@t":"2024-01-17T07:18:08.0607596Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["43970.1703"],"@tr":"3324d1cd24110346cad7046e29046fb5","@sp":"decc35813362f513","RequestMethod":"GET","RequestPath":"/AppointmentAPI/1","StatusCode":200,"Elapsed":43970.1703,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"800000b7-0000-fe00-b63f-84710c7967bb"}
{"@t":"2024-01-17T07:38:32.8081055Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["165.8465"],"@tr":"732df43e7b25788d291aba47a7ed1de6","@sp":"59fb830706d9beb3","RequestMethod":"GET","RequestPath":"/swagger/index.html","StatusCode":200,"Elapsed":165.8465,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"80000020-0003-ff00-b63f-84710c7967bb"}
{"@t":"2024-01-17T07:38:33.0074783Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["75.8482"],"@tr":"ef43254f1b98506db26603a9c0313e70","@sp":"e6844edda379d475","RequestMethod":"GET","RequestPath":"/swagger/v1/swagger.json","StatusCode":200,"Elapsed":75.8482,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"80000038-0004-ff00-b63f-84710c7967bb"}
{"@t":"2024-01-17T07:41:34.5844732Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["158.6811"],"@tr":"c151c0cd71c99df025ce155e944ec87f","@sp":"68dbb929207d8c0f","RequestMethod":"GET","RequestPath":"/swagger/index.html","StatusCode":200,"Elapsed":158.6811,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"8000001d-000a-fe00-b63f-84710c7967bb"}
{"@t":"2024-01-17T07:41:40.0344601Z","@mt":"Get all Categories","@tr":"bb3505959749adebe1749e7e8ef7d24e","@sp":"678678e8dcf0f63b","SourceContext":"JustCare_MB.Services.CategoryService","ActionId":"b820d8ee-71ff-4dff-a01a-0512cab9aea7","ActionName":"JustCareAPI.Controllers.CategoryController.GetAllCategorys (JustCareAPI)","RequestId":"80000089-0008-fc00-b63f-84710c7967bb","RequestPath":"/CategoryAPI/GetAllCategorys"}
{"@t":"2024-01-17T07:41:41.1244653Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["1390.0282"],"@tr":"bb3505959749adebe1749e7e8ef7d24e","@sp":"678678e8dcf0f63b","RequestMethod":"GET","RequestPath":"/CategoryAPI/GetAllCategorys","StatusCode":200,"Elapsed":1390.0282,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"80000089-0008-fc00-b63f-84710c7967bb"}
{"@t":"2024-01-17T07:41:51.5448594Z","@mt":"Create Appointment: {\"Date\":\"2024-01-20T00:00:00\",\"CategoryId\":1,\"DentistDescription\":\"string\",\"Images\":[\"\",\"\"]}","@tr":"631d8bd16176af87636d6a7a77a92175","@sp":"0e61ecdd7e1cb614","SourceContext":"JustCare_MB.Services.AppointmentService","ActionId":"4eb4e81a-12a3-4be4-99eb-4952cae8690b","ActionName":"JustCareAPI.Controllers.AppointmentController.CreateAppointment (JustCareAPI)","RequestId":"80000077-0009-ff00-b63f-84710c7967bb","RequestPath":"/AppointmentAPI/Create%20appointment"}
{"@t":"2024-01-17T07:41:51.8842720Z","@mt":"An exception occurred in the database while saving changes for context type '{contextType}'.{newline}{error}","@l":"Error","@x":"Microsoft.EntityFrameworkCore.DbUpdateException: An error occurred while saving the entity changes. See the inner exception for details.\r\n ---> Microsoft.Data.SqlClient.SqlException (0x80131904): The INSERT statement conflicted with the FOREIGN KEY constraint \"FK_Appointment_User_DentistUserId\". The conflict occurred in database \"JustCare\", table \"dbo.User\", column 'Id'.\r\n   at Microsoft.Data.SqlClient.SqlConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)\r\n   at Microsoft.Data.SqlClient.SqlInternalConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)\r\n   at Microsoft.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)\r\n   at Microsoft.Data.SqlClient.TdsParser.TryRun(RunBehavior runBehavior, SqlCommand cmdHandler, SqlDataReader dataStream, BulkCopySimpleResultSet bulkCopyHandler, TdsParserStateObject stateObj, Boolean& dataReady)\r\n   at Microsoft.Data.SqlClient.SqlDataReader.TryHasMoreRows(Boolean& moreRows)\r\n   at Microsoft.Data.SqlClient.SqlDataReader.TryReadInternal(Boolean setTimeout, Boolean& more)\r\n   at Microsoft.Data.SqlClient.SqlDataReader.Read()\r\n   at Microsoft.EntityFrameworkCore.Storage.RelationalDataReader.Read()\r\n   at Microsoft.EntityFrameworkCore.Update.AffectedCountModificationCommandBatch.ConsumeResultSet(Int32 startCommandIndex, RelationalDataReader reader)\r\n   at Microsoft.EntityFrameworkCore.Update.AffectedCountModificationCommandBatch.Consume(RelationalDataReader reader)\r\nClientConnectionId:4b085cc9-0634-4983-a264-c7b19216cf69\r\nError Number:547,State:0,Class:16\r\n   --- End of inner exception stack trace ---\r\n   at Microsoft.EntityFrameworkCore.Update.AffectedCountModificationCommandBatch.Consume(RelationalDataReader reader)\r\n   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.Execute(IRelationalConnection connection)\r\n   at Microsoft.EntityFrameworkCore.SqlServer.Update.Internal.SqlServerModificationCommandBatch.Execute(IRelationalConnection connection)\r\n   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.Execute(IEnumerable`1 commandBatches, IRelationalConnection connection)\r\n   at Microsoft.EntityFrameworkCore.Storage.RelationalDatabase.SaveChanges(IList`1 entries)\r\n   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChanges(IList`1 entriesToSave)\r\n   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChanges(StateManager stateManager, Boolean acceptAllChangesOnSuccess)\r\n   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.<>c.<SaveChanges>b__107_0(DbContext _, ValueTuple`2 t)\r\n   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.Execute[TState,TResult](TState state, Func`3 operation, Func`3 verifySucceeded)\r\n   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChanges(Boolean acceptAllChangesOnSuccess)\r\n   at Microsoft.EntityFrameworkCore.DbContext.SaveChanges(Boolean acceptAllChangesOnSuccess)","@tr":"631d8bd16176af87636d6a7a77a92175","@sp":"0e61ecdd7e1cb614","contextType":"JustCare_MB.Data.JustCareContext","newline":"\r\n","error":"Microsoft.EntityFrameworkCore.DbUpdateException: An error occurred while saving the entity changes. See the inner exception for details.\r\n ---> Microsoft.Data.SqlClient.SqlException (0x80131904): The INSERT statement conflicted with the FOREIGN KEY constraint \"FK_Appointment_User_DentistUserId\". The conflict occurred in database \"JustCare\", table \"dbo.User\", column 'Id'.\r\n   at Microsoft.Data.SqlClient.SqlConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)\r\n   at Microsoft.Data.SqlClient.SqlInternalConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)\r\n   at Microsoft.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)\r\n   at Microsoft.Data.SqlClient.TdsParser.TryRun(RunBehavior runBehavior, SqlCommand cmdHandler, SqlDataReader dataStream, BulkCopySimpleResultSet bulkCopyHandler, TdsParserStateObject stateObj, Boolean& dataReady)\r\n   at Microsoft.Data.SqlClient.SqlDataReader.TryHasMoreRows(Boolean& moreRows)\r\n   at Microsoft.Data.SqlClient.SqlDataReader.TryReadInternal(Boolean setTimeout, Boolean& more)\r\n   at Microsoft.Data.SqlClient.SqlDataReader.Read()\r\n   at Microsoft.EntityFrameworkCore.Storage.RelationalDataReader.Read()\r\n   at Microsoft.EntityFrameworkCore.Update.AffectedCountModificationCommandBatch.ConsumeResultSet(Int32 startCommandIndex, RelationalDataReader reader)\r\n   at Microsoft.EntityFrameworkCore.Update.AffectedCountModificationCommandBatch.Consume(RelationalDataReader reader)\r\nClientConnectionId:4b085cc9-0634-4983-a264-c7b19216cf69\r\nError Number:547,State:0,Class:16\r\n   --- End of inner exception stack trace ---\r\n   at Microsoft.EntityFrameworkCore.Update.AffectedCountModificationCommandBatch.Consume(RelationalDataReader reader)\r\n   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.Execute(IRelationalConnection connection)\r\n   at Microsoft.EntityFrameworkCore.SqlServer.Update.Internal.SqlServerModificationCommandBatch.Execute(IRelationalConnection connection)\r\n   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.Execute(IEnumerable`1 commandBatches, IRelationalConnection connection)\r\n   at Microsoft.EntityFrameworkCore.Storage.RelationalDatabase.SaveChanges(IList`1 entries)\r\n   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChanges(IList`1 entriesToSave)\r\n   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChanges(StateManager stateManager, Boolean acceptAllChangesOnSuccess)\r\n   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.<>c.<SaveChanges>b__107_0(DbContext _, ValueTuple`2 t)\r\n   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.Execute[TState,TResult](TState state, Func`3 operation, Func`3 verifySucceeded)\r\n   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChanges(Boolean acceptAllChangesOnSuccess)\r\n   at Microsoft.EntityFrameworkCore.DbContext.SaveChanges(Boolean acceptAllChangesOnSuccess)","EventId":{"Id":10000,"Name":"Microsoft.EntityFrameworkCore.Update.SaveChangesFailed"},"SourceContext":"Microsoft.EntityFrameworkCore.Update","ActionId":"4eb4e81a-12a3-4be4-99eb-4952cae8690b","ActionName":"JustCareAPI.Controllers.AppointmentController.CreateAppointment (JustCareAPI)","RequestId":"80000077-0009-ff00-b63f-84710c7967bb","RequestPath":"/AppointmentAPI/Create%20appointment"}
{"@t":"2024-01-17T07:41:52.0507654Z","@mt":"An error occurred while saving the entity changes. See the inner exception for details.","@l":"Error","@x":"Microsoft.EntityFrameworkCore.DbUpdateException: An error occurred while saving the entity changes. See the inner exception for details.\r\n ---> Microsoft.Data.SqlClient.SqlException (0x80131904): The INSERT statement conflicted with the FOREIGN KEY constraint \"FK_Appointment_User_DentistUserId\". The conflict occurred in database \"JustCare\", table \"dbo.User\", column 'Id'.\r\n   at Microsoft.Data.SqlClient.SqlConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)\r\n   at Microsoft.Data.SqlClient.SqlInternalConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)\r\n   at Microsoft.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)\r\n   at Microsoft.Data.SqlClient.TdsParser.TryRun(RunBehavior runBehavior, SqlCommand cmdHandler, SqlDataReader dataStream, BulkCopySimpleResultSet bulkCopyHandler, TdsParserStateObject stateObj, Boolean& dataReady)\r\n   at Microsoft.Data.SqlClient.SqlDataReader.TryHasMoreRows(Boolean& moreRows)\r\n   at Microsoft.Data.SqlClient.SqlDataReader.TryReadInternal(Boolean setTimeout, Boolean& more)\r\n   at Microsoft.Data.SqlClient.SqlDataReader.Read()\r\n   at Microsoft.EntityFrameworkCore.Storage.RelationalDataReader.Read()\r\n   at Microsoft.EntityFrameworkCore.Update.AffectedCountModificationCommandBatch.ConsumeResultSet(Int32 startCommandIndex, RelationalDataReader reader)\r\n   at Microsoft.EntityFrameworkCore.Update.AffectedCountModificationCommandBatch.Consume(RelationalDataReader reader)\r\nClientConnectionId:4b085cc9-0634-4983-a264-c7b19216cf69\r\nError Number:547,State:0,Class:16\r\n   --- End of inner exception stack trace ---\r\n   at Microsoft.EntityFrameworkCore.Update.AffectedCountModificationCommandBatch.Consume(RelationalDataReader reader)\r\n   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.Execute(IRelationalConnection connection)\r\n   at Microsoft.EntityFrameworkCore.SqlServer.Update.Internal.SqlServerModificationCommandBatch.Execute(IRelationalConnection connection)\r\n   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.Execute(IEnumerable`1 commandBatches, IRelationalConnection connection)\r\n   at Microsoft.EntityFrameworkCore.Storage.RelationalDatabase.SaveChanges(IList`1 entries)\r\n   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChanges(IList`1 entriesToSave)\r\n   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChanges(StateManager stateManager, Boolean acceptAllChangesOnSuccess)\r\n   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.<>c.<SaveChanges>b__107_0(DbContext _, ValueTuple`2 t)\r\n   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.Execute[TState,TResult](TState state, Func`3 operation, Func`3 verifySucceeded)\r\n   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChanges(Boolean acceptAllChangesOnSuccess)\r\n   at Microsoft.EntityFrameworkCore.DbContext.SaveChanges(Boolean acceptAllChangesOnSuccess)\r\n   at Microsoft.EntityFrameworkCore.DbContext.SaveChanges()\r\n   at JustCare_MB.Services.AppointmentService.CreateAppointment(CreateAppointmentDto appointmentDto) in C:\\Users\\Smail_-\\Desktop\\JustCare\\JustCare_MB\\Services\\AppointmentService.cs:line 129\r\n   at JustCareAPI.Controllers.AppointmentController.CreateAppointment(CreateAppointmentDto appointmentDto) in C:\\Users\\Smail_-\\Desktop\\JustCare\\JustCareAPI\\Controllers\\AppointmentController.cs:line 29\r\n   at lambda_method86(Closure, Object)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfActionResultExecutor.Execute(ActionContext actionContext, IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Awaited|17_0(ResourceInvoker invoker, Task task, IDisposable scope)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Awaited|17_0(ResourceInvoker invoker, Task task, IDisposable scope)\r\n   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)\r\n   at JustCare_MB.Middlewares.GlobalExceptionHandlingMiddleware.InvokeAsync(HttpContext context, RequestDelegate next) in C:\\Users\\Smail_-\\Desktop\\JustCare\\JustCare_MB\\Middlewares\\GlobalExceptionHandlingMiddleware.cs:line 31","@tr":"631d8bd16176af87636d6a7a77a92175","@sp":"0e61ecdd7e1cb614","SourceContext":"JustCare_MB.Middlewares.GlobalExceptionHandlingMiddleware","ActionId":"4eb4e81a-12a3-4be4-99eb-4952cae8690b","ActionName":"JustCareAPI.Controllers.AppointmentController.CreateAppointment (JustCareAPI)","RequestId":"80000077-0009-ff00-b63f-84710c7967bb","RequestPath":"/AppointmentAPI/Create%20appointment"}
{"@t":"2024-01-17T07:41:52.0737602Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["697.4208"],"@tr":"631d8bd16176af87636d6a7a77a92175","@sp":"0e61ecdd7e1cb614","RequestMethod":"POST","RequestPath":"/AppointmentAPI/Create appointment","StatusCode":400,"Elapsed":697.4208,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"80000077-0009-ff00-b63f-84710c7967bb"}
{"@t":"2024-01-17T07:42:30.4973778Z","@mt":"Create Appointment: {\"Date\":\"2024-01-20T00:00:00\",\"CategoryId\":1,\"DentistDescription\":\"string\",\"Images\":[\"/9j/4AAQSkZJRgABAQAAAQABAAD/2wCEAAkGBxMTEhUSEBIVFhUVFRUVFRUVFxUVFRUXFxUWFhUVFRYYHSggGBolHRUVITEhJSkrLi4uFx8zODMsNygtLisBCgoKDg0OGxAQGi0lICUtLS4tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLf/AABEIAJEBWwMBIgACEQEDEQH/xAAbAAACAwEBAQAAAAAAAAAAAAACAwABBAUGB//EAEIQAAEDAgIGBgcECQQDAAAAAAEAAhEDIQQxEkFRYXGBBSKRobHRBhMyQpLB8BRSYuEVI1NyorLC0vEHM0OCFoOj/8QAGgEAAgMBAQAAAAAAAAAAAAAAAAECAwUEBv/EADkRAAEDAQUECAQFBAMAAAAAAAEAAhEDBBIhMUFRYaGxE3GBkcHR4fAFFCKiI0JS0vEVMlNicpLC/9oADAMBAAIRAxEAPwDlEqpUK1dHdH1Kz9CkwuO7IDa45AL05IAkrwzWlxgCSkMC002r3fRXoE0AGu8vOxvVA3TmeNl3aPoxhm+zQZ/2l3e4lcL7dTGUn3vWrS+FViJcQOJ4YcV8vY1aKbV9O/QeH/Y0/hHkgd6P4Y/8I5SPAqn51p0K6P6W8ZOHFfPWNWim1e1Po1htTCOD3fMom+jVD8XxfkkbWw7ffapD4fUGzv8AReQptWhjV66n0Dhx7hPFzvNa6fR1EZU29gVbrS3QK5thfqRxK8axq0MYvZtwzPujsSK+Apn3R2Kv5gHRWixkarzbGJrGLfWwIGSW2mnfByS6ItzS2MTW001lNNp05yUS5TYyUptNMDFqbg9qL7Oq76uFJZw0bQiDRuTfVqaKV5S6MIRTV+qRBm5GKe5K8ncSfVqjTWj1f4VegNgReRcCxmmgdTXQ9U3YEupQGpMPSNNc91NLdTWqo0hLBB4qYcqixY3MSXsXRexZ3U1MOVRZK572JD2Lu0MGDnddGjQaNQSNYBMWYnMrxj6R2HsKzPavoRa3YlVKLDm0HiJTFp3JOsX+3D1Xzp7Vne1fQ6nRVE50hyEeCQ7oLD/sv4n+atFpbqCqHWB+hHHyXzt7VnqNX0n9B4f9kOZcfEq/0Jh/2TOd/FTFsaNDwVf9NefzBfLKjVnqNX1w9B0P2LPhHks2I9FcM/OiORc3wKm23M2FVu+FPjBw4+q+R1AlFe+6Y9BCAXYd5P4HRfcHiI5jmvD4vDOpuLKjS1wzBEH/ABvXZSrMqD6Ssy0WWrRP1jt07/OCkSrVIlcudOwOEdWqNpM9p5gbBtJ3ASeS+x9A9DU6FMMYLDMnN51ud9WXg/8ATjDB1ao8+4wAcXHPsaRzX1OiLLJt9Ul1zQc16H4TQa2n0mpnuy5ymAISESElZy2EtwCqyJ6UVIJJmkNir1w2JRVQhCccQNiWcQNiWQgcEJSmnEITXSSEJTSlFUekFGQhIQkmltuK3YanAWFmTefyXUZkk4psEIihIVlw2qiVFTS3IdJW5AU0kfrUPrygKohOEIziVRxO5LLUBahRlM+0KjXSSEJCESre9JKIqi1NJaAJAKza1poew7dPgswCcpAQU5j04V1mARAJJytIxCIYncswCMNSTlaRidyL16zgIoRCcp3rBsVSEsIghNMaAmAJbUwFRTVkWXnvSToGniGQ4Q4ToPGbT827R87r0SXXFlJji0gjNRexr2lrhIK+B43CupPdTeIc0wR8xu180tet/wBSMKG1qdQe+0g8WnPscByXkl6GjU6RgdtXjrTR6Gq5mz+RwXr/APTasBVqs+8xrux0f1L6fQfZfFPRnG+pxNN5MNmHfunqknhIPJfYsM9ZVuZFSdo9Fv8AwqoHULuwnjj59xW2ULiqLkBcuILTUcUKolCSmkiUQaSrTQiUZCEtRByJCSSWoSxPhVopoWYsVaC06CgYhCyuOiJOou8AUttdzrk22aloxdP9Uf3j4R4rFQIDZO0Kuo8tbICnTAJgp2mAmNq/QK4+LrdfRkjIjvnLXb/KxfpF0HbEtEgkjK2raNizHW5zSfRaQsTXAQvVNr7+1Ma+dYXlR0q4CTlE5bp7FsodLA2cDnquIyk7p8VY34i05qD/AIe4CQvQKLiOxrRMuaOevOIVU+lWEGDkDIOYjORnaVb88z2VT8k85cl3IQOjaFxv0ky06V8tewfNIq9LgEtjLI7SADHG/cUnfEGKTbA8rsvO9IdTlcM9MOJbFgbGRcGJ15WmymH6UJnStYEETlnlq19ipPxHQK7+mkCSuu6hqkJegWGR+RWOhVJfJeAI1ka9V9Vs9fDPrGCIm+dr7vrgVdZ7U57sVz17O1jZGa00vZdvA+fml6Cbhm9Q/ujuJ8k3QXeuNZwxEGJ2gr0UISg1GGo4UKSFUKIHOQF6E5TlEoPRhyEJrSmNKQCjBQmnApVd9lYcsuJekEL5z/qRWmrTZ91pd2uj+nvXkF1fSHGeur1KgyLoHAWHaBPNcpegs7LlMNXkLXUFSu541PAYDgEbAvrHon0j67DsJPWHVfxGs8RB5rxjfQ6oM3gcie+F2/RTB1MPVcx92PbIIJIBblY7QT2BcVqrUarIa7Eeytaw2O12Z81KZDTgcjGwmCfZXtw5QlJpuRkrNWwo4pTnK3FJcUIKIvVaaS5yrTTSWtj05pWJjlopuQhaQrSwUUpIRQqchLkurimNILzwGZPJGSYBJgLRWp/qyNg7xdceg3MDUVv/AEsz7j+weaw6Q0pbkcpsdiqf9TCFeGvpuBIXG6RY5r5GURoiLiRIE5aiBusubQqtIudIC8ZOmTpCxzG0bRK7vS1KW7DII2W2dy4GKu4wMr6ORyAPWGokzzWQYc8tdnpv3bMccd5nDLSDSGBzcBrGmUHbhu3YFV60hpa6SAHCctoE8Yidu3VpbXyDDE2nO8ySALkdm5c17wCGyTJnZMOnRMbeyx2X0US+pUcGmACA421gEgzMC4OoycxAmHRiTUPs4aY4YzqNMVe8kgMGGJx0u464YgiDltwwC0PaciSDBJLnGNE315DVxGrNY9EkODBps0h1wCdCGtvIHXbtA607pI7VLoLSIe7ONdyM/eMki+UroM6M0QBOsWGVrQBqGWSmL0fSMO7twk8cOrBUXmj+4ye+MdJ8M+K8/hwb6FSSAdK4cCYuIyb3ZX2q3VIguMgESIgjbOjadR1rbjehgbkAmIBIBAvbMdXXkudVpOaQJIBiWvJLS429oklovFnWOo5Ksug/icfP0GgyVzWSPwz2DDhvx12nNFi3iAcrw0ixA9W/M6wBfZZKoVzFzBOk4jUR/wAQLdXswRtk5rIKoc6lMgEE3g3DXQ7eY0voW1F0gkDOLm8tsBmed/uqYodG6Dt7AAYz24HSUPqFzQN3aSZ03HfGuM4dGhUL32sNMGTsaBkDlqP/AGEjZ6HDNAEAbL7c+3VdcjojA+8RkTE3Ig2uLZRO+Su2xl7/AFrldFl+ogDLDhquK0w0HGT57N2zbsC34RnVO+3z+ajd+qyEY6k0QXjlfwU9a03Y4EHYda1AcVnuY4CSEaiAPUlSUERKU9ytxSajkIQPel6aCo5J00IWtr0xrlja9PYUIWppRgpLSjBSTTC5ec9MOkPVYd0HrP8A1beYOkeTZ5wu7UcvHelWAqV6rQ2NFjddruMusNwaraN2+C8wFVXFR1MikCXHDDn2LwdQJK9R/wCIVT77ew+SH/wyt95v8XktYWuj+rn5Lz5+EW3/ABnvb5r3AeTfUha8TMc0VvZS3UjqXiWVntMyvewDgV0KNVaZXKp1IK6FJ8hbYIOIWQWlpIOiJyRUKa5IrJqCQ96APVOQxsk8AkXAZqbKbn/2iVqpvWlhXOpOW6mU1EggwVpa5EXJLSrcUIVuesGMqS4xwT9O6ygmJ1m65bW8tp4arrsjfqLveP8ACWxrkb3dxUcMpMcEFQzlrkc1x2SoRUjQrprtv0z7yTcUC5lrWsc9We/gvO4llwYIkskZ7nb7aXcV6HCulhGxcbpSk5p3SHN2E5EHeSdLfJ2Km1U7r+2O/wBFfZal5h95eq47rPIglzbAZXDzJM5AS0E7xnIB7/QOFAaHOuXdcnKSQIIE2sBaTYDPNcPoql6x1V5HWfUMEGxFtGZjIk/JexpMDRA2QPruU3MHSXdkdU45bpJjv1SNT6L22fDy8MgCTfiYAa3PwWdxd94zxQkxdXpWyXbUqMoQIlcNOkawvkxsTKVU5FI6QwYcDncZjMGbEb5hXTctjxIhQr0mVKd9qlRqPpVLjl4DpAmlEj2asA6pc10iDld1iN41SelTjSaL6IOW5oy4XHxFM9JsKNF0iRpDXAJADoPxOS/R1umetcNydbrSBc8I5m+yOMtvUyRmDj1HDnE/ytIvALTGBBjrGI4XgO3SF6votkMuCLk335I61TqnfblrQuqaLYScSb6P3RfjmV2Uop0i/sWc78SsAevyS3kDIBNwbwHC0au1Z3H8lA7uXLTrvDwSV2OZeaRtXYa9MDljL7960NK2ViI3FJqFE4pTyhCzVnLPpIqrlRd/iFVUrsYQHFXU7O94kI2OWukVibtC2UVaqi0tMFaWo5Smq6roCEBJr1Vk1zlPIlU+ogNTcuG21IAYF22RmBd2e+3krdUMoNI7Vb3yhWbJXcAnDbo3RNNpNlbd6shJQlIIvnM3+u5dLBZLE8RHGO1bcEFsWR16kN2Cz7U3652+GHKEbws9VasSLrK9dK5VkqmBxsroO1bEOINxyP12IqdTUVmW531ALUszYojfiqN7gXHfuWmg6Qs7yZtkm4V2fH81Ow1DixV2tguhy1tVVHIqYScSVoLgWdz/AGj+E99vmsqc7Lie4fQUdAFlm2931Bq0rGIZO08sFREgbVToAtnIVFxPNWadjdcTHXXArq61MIYeRqI/PzWf0iozScYuBI2yCCDPEJxPsu2WPyRdN05o1CPuOEi+Ygc5haNqZJDurgVxWc3CWHQwvO+irJblE1HDf1Xlond5r1rwIC876J0yAQdoI3TUqNIA40pt95ehrmABH19QqaTfxj18FdaX4Gd/fqs1TMbhPejByul1HdY9iFwOvs/JV2szVKlSbFNo3IqkytlK4+tiwl3gtOGfYdnerrIZY9iptLYuu2GO/wBlcb0ppfqqlvcneNTiOTh2FK9E2dUkmerTb8Om2Y22XU9IaM0KpINmOdG2BMDiJCx+idOGQREUqM7/ANWHO7yVWxuD56/uE+CvqVPw2f8AIz2tMcnduK6tRw0wNTRJ5JLdpGckniltfOm77x0RwzPgO1NFxAMAKy1G6xrPfvFVWcTeftPAe+CGBt7VbYzuUJOxUCuBdRC0tdZp3R2WWyk5c1h6vA+P+FuwxW+x15oKxqzbtRw3+qa5JqlaKgWLFOgFSJUA28QAswcJJPJUSNnehCPRKwqr77yVtwGiAro5rZSWOl7QWymtWyuvUgs22CKk7gtNMIMbkm4bNLxoXQuVcp4UawnUjbUgnj4KOqlY1pdeqlbFJpawN3eviqdYQhlFp228UCoVgC0CZvkgqVDMIntnI+SU5x1pKLUT5IldHCOXOBlpnUtWDfYbrLRsLsHNXLa2y0HYea2YlyyuTKjrrPiakDecvNd5IAkrga0vcANVmeQXEzlYK2vAyCWGqBYdWpfeXLaDQBdGiP1qdRs7sKzlpGY8kYdDgdXmrbK67VG9V1mXmEDZygrqUTZZsSmU3JbxK2FjrJVMFo2AntVestYQpVdLj2diqnmse1OmqVs0mXaYB2KU3XRAXuUPrCqJGxcyshSPaA4jiPooq9WaJOwPkbYpvcO9oVG0EbVh6TeW06mjk5jiOEGQN+Y5rVoHpaQGo98lxWgXH39CIO4xCd0BRgEjW1h+LSqW+NbX1JedjbnksGFxIa3RbFqdMCNsO8Glieyzd7rnhq806bQ0mocAPfv0UahNRwp7c+rP1VoyCRPJUIjPl+atrrRlvWW915xK7ygITGmAdxB7f8KnP571bDJg6xo+S6LG+7VE6qm0NL6R7+5M6RGlSf8Aia6NlwQPFcroSqRSe6b6LR3EAdhC1faIa5hzGXGcu1c/Bsgupj3ng8LuaB2Adi7GUYcWn2LzVzOrTRvD9Q77tTzXQYIawbtLt/IBaJixGecIJGllbIcrDwRh0nIWXHa33qi6qbLtNrdyr1W9LIjNN9bGYuhL7zcrlVgJRURcjaO8FasMsjXjSBy1dq1tC2LI6aQ3LOtjYeDtC01jZYMTeBtK1PcsbjJLonUPNTtFS5TJUbK2Xzs9jz7ETjsEpdQaz2KzE3PJVWbrlYi0RgUtz9ca5W5pWLRG1PwtS0ax4LSsLxBaua105aHDTkfXmuhh3JeLdr5oabrpGOqW42XccMVwsbfcG7SswbYZX7c0bWWyG5UQIE3UdnM+awXGXErZJlAKZTRTCB1QZQibUCSRlLc8ymHfGV1dQE5eajqg19iSJQioNQhRj9E3157lbQ3OEFRwKspVDTdeCTmhwukYLTUrga54LIXEkk5nuVQrG1X17UagugQFGlQbTyzU0TmqUJRgAe13LkV2SjsxwCFwG+e1HmZHeqc4bPJMGDIUQn4atIg5jvRV6uiN+pZHmVS0PnhdyxXN8m0vvabPeipoRm0EKMGcoXED81nkyV1nere6dSglLdWb95vaFTsQ0CZtzI7k7jtihebGYWlxMDKFz+l3D1L2m2lZp2OdbVulXielKYFg4kbiAN5J1LC0PquBLeqIM5awdEAgkZCxE5Los9+m+9kNZw9erDmouDTTxy0wOJ0g5deMxOC0YTCwQXkEEEwNdmCDsGfYug46ylUqWjvMAchlCanaLSagDRl74JUaDacka8tPBQhRQpkRYCVyK4lCGayhcNSvROwqwBrnemDGISBWbpGkXN0m+0NHSAsTcdYb1h6FaWvq6ftyHNG0Pb7Q3DxK61QDIi3E+K5OKwr2kOZJLLAiAdH7pBsdkaxfVbTZbA4RH1ZctezlpJHJ8swOn8sgx1Tvyg90rtUHAW70T3EZBczB9JNJh4IIMbp4GDwzWtuNaSdHnZw7bWWe5j5kjux5K8uE467cJ6phG9wJyRz1batqU+oy3WAneExjmwesDwIUS1w0Tvt0KjmSMhl3p2HrSIOYSnCRsjaqcW6xJ7FfZ7R0Ug5KNWiKjYKbiK2oZ69yRp+EKw4QYCFrr5BRr1zVM6J0qQptgK/VncjgEZ5IZvmjMGwVCmZ1QhoItPFWKcXBuqcYEIAYUmuLTIRmtTa496x+skl50zOQGU60OmdgKjmyc10vtjnNuwqWUGU3SP46kdOnF5S6jSjeBYTkjadhyXIrZWdQI6oM7kCFMJBxmrRPbTA/mVOxuotHbPhHijbQJN3nsA8ETsI6bVH/ABHzVv07R3HxVUmcj3gcggbi9V/hA8XFU7Egfe7GFW7DTm4niT8iFZwbC3LL9/8AuR9O37R6Jx/r958AUBxBORP8IP8AKq+1RnM79COeUpp6PZbqt3WHiVQwIygDk2PBEt9gDzRgRlHa4/tWY49ut/8AA8+CJvSMjqgv3tY9ajh2i4I+Gn5IDQB2fDT8kX2/p5ftHNS6MH83A+ZVDGOH/F2lw8WpP2l59yN00z2HTHeE8YRs3A5U6f8Aan06Ijhup/2ovjRo4nx8EjSETfPAeB5rnOxLh7XVG99PwAPirOJt1W1Sd1OqR3EAhdFlASYNt0DwhCGxN3fE7zR0mwR1Yeaj0bTgZPX/ACFzmF5ypz+8x4P8Q+aJzXj3GjeIBHIFbH0RrAPG/eU7RsIA7Ajpjl78uCZpszHl4yuWRWd74A2gnwbI71TejJMve4nbN+RJJHIrpvO231sREACPBRFRwyMdWHKFYS2IjmeZKz/ZKbfZY3cYnvPNMCPTtARNfAUSSc1EYaJbTdXp7h2K5BOxW5zdiSaWUQqFCiLIzKEzCmgTqVvEATmrrDLYha7bdCjjmmMAIyQhovmdSttQG0IGOjJCIKF+CYfaAO4gHx+SyVuimz1ZGwXAHAgytZVhx47s1MPcMii71dwWQ4Sq32KzgPxOfA7neKDQq7WOP4gAOR0yCt7tU28EUCIJCA8zp3Dnmh0ERHdPKY4LmPY8XLW32U5H8MpbqrhqPKnXA8QF0zh26g2eAHeoaJ/F8TvkVI1ifRIU6Y04fx4rnCvU1d/V/mlX9sqbAOBpGeekul6qB7RHMnxU9XOTnD4fJHSD9IRdGp99srnUK1R3unm4f0NKL1rpvSdzZVeFsGHJ94nf1T8kX2cTmOGjT8kX2/pHHxJSLT/kPcPABYH1WjPRH/qe2OcWRB+kf908jP8ANK2to7YG/Qp+So0GzYj4W+SL7NnL9qCHfqn/ALfuPJZ22P8Au1D/ANaX9qp9QE2qv+Fv9iZVwVOfZniG+Sn2NgHVbF948CiWbftb5p4jT7iP/JVUZz9b2tHdARetIP8AuN+Bze+/grbgQb3HAu/uTDhD+0dyJHgUfTt4Ry81Akzl3O82+Cyms7a4/uuZ/UAr9adj/wD4/IpjsM4Gz3+PjKP7Kf2h7G+ScN0I+5SvmMj9vkEylmnNzKiipQ5Z3Zox7J4+SiiFLZ1qqmrgmt18B4K1EJHJJo/LyRU8yrUQg5oW+12q8RqVqIR+YKqGfJLKiiFIZrQ7JBW1KKIUG5hLd8kIVqIVgyUVqKIQUKOnr4KKISchbmnV8laiFF2aCp7I+tSqjnyUUQjQ9qlHMqm581SiE9qupmVTdfBRRCeiutq4ICoohDckb/kFHauAUUQkEVbNCzXwUUQgZJtHJA/2uxRRCBmgq5oVFEJjJROoa1aiEnZI2KKKIUChdmEqrmVFEBSav//Z\",\"\"]}","@tr":"43eaf4e978543dada84a605c57c8a863","@sp":"2e866dd3f72b4d5d","SourceContext":"JustCare_MB.Services.AppointmentService","ActionId":"4eb4e81a-12a3-4be4-99eb-4952cae8690b","ActionName":"JustCareAPI.Controllers.AppointmentController.CreateAppointment (JustCareAPI)","RequestId":"8000000f-000e-fe00-b63f-84710c7967bb","RequestPath":"/AppointmentAPI/Create%20appointment"}
{"@t":"2024-01-17T07:43:02.0933195Z","@mt":"An exception occurred in the database while saving changes for context type '{contextType}'.{newline}{error}","@l":"Error","@x":"Microsoft.EntityFrameworkCore.DbUpdateException: An error occurred while saving the entity changes. See the inner exception for details.\r\n ---> Microsoft.Data.SqlClient.SqlException (0x80131904): The INSERT statement conflicted with the FOREIGN KEY constraint \"FK_Appointment_User_DentistUserId\". The conflict occurred in database \"JustCare\", table \"dbo.User\", column 'Id'.\r\n   at Microsoft.Data.SqlClient.SqlConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)\r\n   at Microsoft.Data.SqlClient.SqlInternalConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)\r\n   at Microsoft.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)\r\n   at Microsoft.Data.SqlClient.TdsParser.TryRun(RunBehavior runBehavior, SqlCommand cmdHandler, SqlDataReader dataStream, BulkCopySimpleResultSet bulkCopyHandler, TdsParserStateObject stateObj, Boolean& dataReady)\r\n   at Microsoft.Data.SqlClient.SqlDataReader.TryHasMoreRows(Boolean& moreRows)\r\n   at Microsoft.Data.SqlClient.SqlDataReader.TryReadInternal(Boolean setTimeout, Boolean& more)\r\n   at Microsoft.Data.SqlClient.SqlDataReader.Read()\r\n   at Microsoft.EntityFrameworkCore.Storage.RelationalDataReader.Read()\r\n   at Microsoft.EntityFrameworkCore.Update.AffectedCountModificationCommandBatch.ConsumeResultSet(Int32 startCommandIndex, RelationalDataReader reader)\r\n   at Microsoft.EntityFrameworkCore.Update.AffectedCountModificationCommandBatch.Consume(RelationalDataReader reader)\r\nClientConnectionId:4b085cc9-0634-4983-a264-c7b19216cf69\r\nError Number:547,State:0,Class:16\r\n   --- End of inner exception stack trace ---\r\n   at Microsoft.EntityFrameworkCore.Update.AffectedCountModificationCommandBatch.Consume(RelationalDataReader reader)\r\n   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.Execute(IRelationalConnection connection)\r\n   at Microsoft.EntityFrameworkCore.SqlServer.Update.Internal.SqlServerModificationCommandBatch.Execute(IRelationalConnection connection)\r\n   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.Execute(IEnumerable`1 commandBatches, IRelationalConnection connection)\r\n   at Microsoft.EntityFrameworkCore.Storage.RelationalDatabase.SaveChanges(IList`1 entries)\r\n   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChanges(IList`1 entriesToSave)\r\n   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChanges(StateManager stateManager, Boolean acceptAllChangesOnSuccess)\r\n   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.<>c.<SaveChanges>b__107_0(DbContext _, ValueTuple`2 t)\r\n   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.Execute[TState,TResult](TState state, Func`3 operation, Func`3 verifySucceeded)\r\n   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChanges(Boolean acceptAllChangesOnSuccess)\r\n   at Microsoft.EntityFrameworkCore.DbContext.SaveChanges(Boolean acceptAllChangesOnSuccess)","@tr":"43eaf4e978543dada84a605c57c8a863","@sp":"2e866dd3f72b4d5d","contextType":"JustCare_MB.Data.JustCareContext","newline":"\r\n","error":"Microsoft.EntityFrameworkCore.DbUpdateException: An error occurred while saving the entity changes. See the inner exception for details.\r\n ---> Microsoft.Data.SqlClient.SqlException (0x80131904): The INSERT statement conflicted with the FOREIGN KEY constraint \"FK_Appointment_User_DentistUserId\". The conflict occurred in database \"JustCare\", table \"dbo.User\", column 'Id'.\r\n   at Microsoft.Data.SqlClient.SqlConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)\r\n   at Microsoft.Data.SqlClient.SqlInternalConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)\r\n   at Microsoft.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)\r\n   at Microsoft.Data.SqlClient.TdsParser.TryRun(RunBehavior runBehavior, SqlCommand cmdHandler, SqlDataReader dataStream, BulkCopySimpleResultSet bulkCopyHandler, TdsParserStateObject stateObj, Boolean& dataReady)\r\n   at Microsoft.Data.SqlClient.SqlDataReader.TryHasMoreRows(Boolean& moreRows)\r\n   at Microsoft.Data.SqlClient.SqlDataReader.TryReadInternal(Boolean setTimeout, Boolean& more)\r\n   at Microsoft.Data.SqlClient.SqlDataReader.Read()\r\n   at Microsoft.EntityFrameworkCore.Storage.RelationalDataReader.Read()\r\n   at Microsoft.EntityFrameworkCore.Update.AffectedCountModificationCommandBatch.ConsumeResultSet(Int32 startCommandIndex, RelationalDataReader reader)\r\n   at Microsoft.EntityFrameworkCore.Update.AffectedCountModificationCommandBatch.Consume(RelationalDataReader reader)\r\nClientConnectionId:4b085cc9-0634-4983-a264-c7b19216cf69\r\nError Number:547,State:0,Class:16\r\n   --- End of inner exception stack trace ---\r\n   at Microsoft.EntityFrameworkCore.Update.AffectedCountModificationCommandBatch.Consume(RelationalDataReader reader)\r\n   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.Execute(IRelationalConnection connection)\r\n   at Microsoft.EntityFrameworkCore.SqlServer.Update.Internal.SqlServerModificationCommandBatch.Execute(IRelationalConnection connection)\r\n   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.Execute(IEnumerable`1 commandBatches, IRelationalConnection connection)\r\n   at Microsoft.EntityFrameworkCore.Storage.RelationalDatabase.SaveChanges(IList`1 entries)\r\n   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChanges(IList`1 entriesToSave)\r\n   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChanges(StateManager stateManager, Boolean acceptAllChangesOnSuccess)\r\n   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.<>c.<SaveChanges>b__107_0(DbContext _, ValueTuple`2 t)\r\n   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.Execute[TState,TResult](TState state, Func`3 operation, Func`3 verifySucceeded)\r\n   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChanges(Boolean acceptAllChangesOnSuccess)\r\n   at Microsoft.EntityFrameworkCore.DbContext.SaveChanges(Boolean acceptAllChangesOnSuccess)","EventId":{"Id":10000,"Name":"Microsoft.EntityFrameworkCore.Update.SaveChangesFailed"},"SourceContext":"Microsoft.EntityFrameworkCore.Update","ActionId":"4eb4e81a-12a3-4be4-99eb-4952cae8690b","ActionName":"JustCareAPI.Controllers.AppointmentController.CreateAppointment (JustCareAPI)","RequestId":"8000000f-000e-fe00-b63f-84710c7967bb","RequestPath":"/AppointmentAPI/Create%20appointment"}
{"@t":"2024-01-17T07:43:02.1836479Z","@mt":"An error occurred while saving the entity changes. See the inner exception for details.","@l":"Error","@x":"Microsoft.EntityFrameworkCore.DbUpdateException: An error occurred while saving the entity changes. See the inner exception for details.\r\n ---> Microsoft.Data.SqlClient.SqlException (0x80131904): The INSERT statement conflicted with the FOREIGN KEY constraint \"FK_Appointment_User_DentistUserId\". The conflict occurred in database \"JustCare\", table \"dbo.User\", column 'Id'.\r\n   at Microsoft.Data.SqlClient.SqlConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)\r\n   at Microsoft.Data.SqlClient.SqlInternalConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)\r\n   at Microsoft.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)\r\n   at Microsoft.Data.SqlClient.TdsParser.TryRun(RunBehavior runBehavior, SqlCommand cmdHandler, SqlDataReader dataStream, BulkCopySimpleResultSet bulkCopyHandler, TdsParserStateObject stateObj, Boolean& dataReady)\r\n   at Microsoft.Data.SqlClient.SqlDataReader.TryHasMoreRows(Boolean& moreRows)\r\n   at Microsoft.Data.SqlClient.SqlDataReader.TryReadInternal(Boolean setTimeout, Boolean& more)\r\n   at Microsoft.Data.SqlClient.SqlDataReader.Read()\r\n   at Microsoft.EntityFrameworkCore.Storage.RelationalDataReader.Read()\r\n   at Microsoft.EntityFrameworkCore.Update.AffectedCountModificationCommandBatch.ConsumeResultSet(Int32 startCommandIndex, RelationalDataReader reader)\r\n   at Microsoft.EntityFrameworkCore.Update.AffectedCountModificationCommandBatch.Consume(RelationalDataReader reader)\r\nClientConnectionId:4b085cc9-0634-4983-a264-c7b19216cf69\r\nError Number:547,State:0,Class:16\r\n   --- End of inner exception stack trace ---\r\n   at Microsoft.EntityFrameworkCore.Update.AffectedCountModificationCommandBatch.Consume(RelationalDataReader reader)\r\n   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.Execute(IRelationalConnection connection)\r\n   at Microsoft.EntityFrameworkCore.SqlServer.Update.Internal.SqlServerModificationCommandBatch.Execute(IRelationalConnection connection)\r\n   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.Execute(IEnumerable`1 commandBatches, IRelationalConnection connection)\r\n   at Microsoft.EntityFrameworkCore.Storage.RelationalDatabase.SaveChanges(IList`1 entries)\r\n   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChanges(IList`1 entriesToSave)\r\n   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChanges(StateManager stateManager, Boolean acceptAllChangesOnSuccess)\r\n   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.<>c.<SaveChanges>b__107_0(DbContext _, ValueTuple`2 t)\r\n   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.Execute[TState,TResult](TState state, Func`3 operation, Func`3 verifySucceeded)\r\n   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChanges(Boolean acceptAllChangesOnSuccess)\r\n   at Microsoft.EntityFrameworkCore.DbContext.SaveChanges(Boolean acceptAllChangesOnSuccess)\r\n   at Microsoft.EntityFrameworkCore.DbContext.SaveChanges()\r\n   at JustCare_MB.Services.AppointmentService.CreateAppointment(CreateAppointmentDto appointmentDto) in C:\\Users\\Smail_-\\Desktop\\JustCare\\JustCare_MB\\Services\\AppointmentService.cs:line 129\r\n   at JustCareAPI.Controllers.AppointmentController.CreateAppointment(CreateAppointmentDto appointmentDto) in C:\\Users\\Smail_-\\Desktop\\JustCare\\JustCareAPI\\Controllers\\AppointmentController.cs:line 29\r\n   at lambda_method86(Closure, Object)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfActionResultExecutor.Execute(ActionContext actionContext, IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Awaited|17_0(ResourceInvoker invoker, Task task, IDisposable scope)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Awaited|17_0(ResourceInvoker invoker, Task task, IDisposable scope)\r\n   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)\r\n   at JustCare_MB.Middlewares.GlobalExceptionHandlingMiddleware.InvokeAsync(HttpContext context, RequestDelegate next) in C:\\Users\\Smail_-\\Desktop\\JustCare\\JustCare_MB\\Middlewares\\GlobalExceptionHandlingMiddleware.cs:line 31","@tr":"43eaf4e978543dada84a605c57c8a863","@sp":"2e866dd3f72b4d5d","SourceContext":"JustCare_MB.Middlewares.GlobalExceptionHandlingMiddleware","ActionId":"4eb4e81a-12a3-4be4-99eb-4952cae8690b","ActionName":"JustCareAPI.Controllers.AppointmentController.CreateAppointment (JustCareAPI)","RequestId":"8000000f-000e-fe00-b63f-84710c7967bb","RequestPath":"/AppointmentAPI/Create%20appointment"}
{"@t":"2024-01-17T07:43:02.1858146Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["34571.6528"],"@tr":"43eaf4e978543dada84a605c57c8a863","@sp":"2e866dd3f72b4d5d","RequestMethod":"POST","RequestPath":"/AppointmentAPI/Create appointment","StatusCode":400,"Elapsed":34571.6528,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"8000000f-000e-fe00-b63f-84710c7967bb"}
{"@t":"2024-01-17T07:43:16.6415748Z","@mt":"Create Appointment: {\"Date\":\"2024-01-20T00:00:00\",\"CategoryId\":1,\"DentistDescription\":\"string\",\"Images\":[\"\",\"\"]}","@tr":"de3e2f55712cdd0e46471a19a8134298","@sp":"a0d633b4d3d80fa4","SourceContext":"JustCare_MB.Services.AppointmentService","ActionId":"4eb4e81a-12a3-4be4-99eb-4952cae8690b","ActionName":"JustCareAPI.Controllers.AppointmentController.CreateAppointment (JustCareAPI)","RequestId":"80000066-0000-fd00-b63f-84710c7967bb","RequestPath":"/AppointmentAPI/Create%20appointment"}
{"@t":"2024-01-17T07:43:31.8567442Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["277.1158"],"@tr":"7423739f70d40962eee52e66dfa4d685","@sp":"41b69466ac01b0d6","RequestMethod":"GET","RequestPath":"/swagger/index.html","StatusCode":200,"Elapsed":277.1158,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"80000079-0009-ff00-b63f-84710c7967bb"}
{"@t":"2024-01-17T07:43:35.6667959Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["3731.7584"],"@tr":"55397c61659021d92b9c258c741bd7af","@sp":"92987aec79e5f9d6","RequestMethod":"GET","RequestPath":"/swagger/v1/swagger.json","StatusCode":200,"Elapsed":3731.7584,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"8000005b-000e-ff00-b63f-84710c7967bb"}
{"@t":"2024-01-17T07:43:35.7183240Z","@mt":"Create Appointment: {\"Date\":\"2024-01-20T00:00:00\",\"CategoryId\":1,\"DentistDescription\":\"string\",\"Images\":[\"\",\"\"]}","@tr":"14171d4bade015612d58b9dbc60f6a83","@sp":"b7a32c59d6899b0d","SourceContext":"JustCare_MB.Services.AppointmentService","ActionId":"f08c1599-6d1e-4f91-aefe-6b2d84852a1e","ActionName":"JustCareAPI.Controllers.AppointmentController.CreateAppointment (JustCareAPI)","RequestId":"80000011-000e-fe00-b63f-84710c7967bb","RequestPath":"/AppointmentAPI/Create%20appointment"}
{"@t":"2024-01-17T07:43:36.5926470Z","@mt":"An exception occurred in the database while saving changes for context type '{contextType}'.{newline}{error}","@l":"Error","@x":"Microsoft.EntityFrameworkCore.DbUpdateException: An error occurred while saving the entity changes. See the inner exception for details.\r\n ---> Microsoft.Data.SqlClient.SqlException (0x80131904): The INSERT statement conflicted with the FOREIGN KEY constraint \"FK_Appointment_User_DentistUserId\". The conflict occurred in database \"JustCare\", table \"dbo.User\", column 'Id'.\r\n   at Microsoft.Data.SqlClient.SqlConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)\r\n   at Microsoft.Data.SqlClient.SqlInternalConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)\r\n   at Microsoft.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)\r\n   at Microsoft.Data.SqlClient.TdsParser.TryRun(RunBehavior runBehavior, SqlCommand cmdHandler, SqlDataReader dataStream, BulkCopySimpleResultSet bulkCopyHandler, TdsParserStateObject stateObj, Boolean& dataReady)\r\n   at Microsoft.Data.SqlClient.SqlDataReader.TryHasMoreRows(Boolean& moreRows)\r\n   at Microsoft.Data.SqlClient.SqlDataReader.TryReadInternal(Boolean setTimeout, Boolean& more)\r\n   at Microsoft.Data.SqlClient.SqlDataReader.Read()\r\n   at Microsoft.EntityFrameworkCore.Storage.RelationalDataReader.Read()\r\n   at Microsoft.EntityFrameworkCore.Update.AffectedCountModificationCommandBatch.ConsumeResultSet(Int32 startCommandIndex, RelationalDataReader reader)\r\n   at Microsoft.EntityFrameworkCore.Update.AffectedCountModificationCommandBatch.Consume(RelationalDataReader reader)\r\nClientConnectionId:2d658957-6baf-40c0-a805-b1966554c0a9\r\nError Number:547,State:0,Class:16\r\n   --- End of inner exception stack trace ---\r\n   at Microsoft.EntityFrameworkCore.Update.AffectedCountModificationCommandBatch.Consume(RelationalDataReader reader)\r\n   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.Execute(IRelationalConnection connection)\r\n   at Microsoft.EntityFrameworkCore.SqlServer.Update.Internal.SqlServerModificationCommandBatch.Execute(IRelationalConnection connection)\r\n   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.Execute(IEnumerable`1 commandBatches, IRelationalConnection connection)\r\n   at Microsoft.EntityFrameworkCore.Storage.RelationalDatabase.SaveChanges(IList`1 entries)\r\n   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChanges(IList`1 entriesToSave)\r\n   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChanges(StateManager stateManager, Boolean acceptAllChangesOnSuccess)\r\n   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.<>c.<SaveChanges>b__107_0(DbContext _, ValueTuple`2 t)\r\n   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.Execute[TState,TResult](TState state, Func`3 operation, Func`3 verifySucceeded)\r\n   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChanges(Boolean acceptAllChangesOnSuccess)\r\n   at Microsoft.EntityFrameworkCore.DbContext.SaveChanges(Boolean acceptAllChangesOnSuccess)","@tr":"14171d4bade015612d58b9dbc60f6a83","@sp":"b7a32c59d6899b0d","contextType":"JustCare_MB.Data.JustCareContext","newline":"\r\n","error":"Microsoft.EntityFrameworkCore.DbUpdateException: An error occurred while saving the entity changes. See the inner exception for details.\r\n ---> Microsoft.Data.SqlClient.SqlException (0x80131904): The INSERT statement conflicted with the FOREIGN KEY constraint \"FK_Appointment_User_DentistUserId\". The conflict occurred in database \"JustCare\", table \"dbo.User\", column 'Id'.\r\n   at Microsoft.Data.SqlClient.SqlConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)\r\n   at Microsoft.Data.SqlClient.SqlInternalConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)\r\n   at Microsoft.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)\r\n   at Microsoft.Data.SqlClient.TdsParser.TryRun(RunBehavior runBehavior, SqlCommand cmdHandler, SqlDataReader dataStream, BulkCopySimpleResultSet bulkCopyHandler, TdsParserStateObject stateObj, Boolean& dataReady)\r\n   at Microsoft.Data.SqlClient.SqlDataReader.TryHasMoreRows(Boolean& moreRows)\r\n   at Microsoft.Data.SqlClient.SqlDataReader.TryReadInternal(Boolean setTimeout, Boolean& more)\r\n   at Microsoft.Data.SqlClient.SqlDataReader.Read()\r\n   at Microsoft.EntityFrameworkCore.Storage.RelationalDataReader.Read()\r\n   at Microsoft.EntityFrameworkCore.Update.AffectedCountModificationCommandBatch.ConsumeResultSet(Int32 startCommandIndex, RelationalDataReader reader)\r\n   at Microsoft.EntityFrameworkCore.Update.AffectedCountModificationCommandBatch.Consume(RelationalDataReader reader)\r\nClientConnectionId:2d658957-6baf-40c0-a805-b1966554c0a9\r\nError Number:547,State:0,Class:16\r\n   --- End of inner exception stack trace ---\r\n   at Microsoft.EntityFrameworkCore.Update.AffectedCountModificationCommandBatch.Consume(RelationalDataReader reader)\r\n   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.Execute(IRelationalConnection connection)\r\n   at Microsoft.EntityFrameworkCore.SqlServer.Update.Internal.SqlServerModificationCommandBatch.Execute(IRelationalConnection connection)\r\n   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.Execute(IEnumerable`1 commandBatches, IRelationalConnection connection)\r\n   at Microsoft.EntityFrameworkCore.Storage.RelationalDatabase.SaveChanges(IList`1 entries)\r\n   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChanges(IList`1 entriesToSave)\r\n   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChanges(StateManager stateManager, Boolean acceptAllChangesOnSuccess)\r\n   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.<>c.<SaveChanges>b__107_0(DbContext _, ValueTuple`2 t)\r\n   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.Execute[TState,TResult](TState state, Func`3 operation, Func`3 verifySucceeded)\r\n   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChanges(Boolean acceptAllChangesOnSuccess)\r\n   at Microsoft.EntityFrameworkCore.DbContext.SaveChanges(Boolean acceptAllChangesOnSuccess)","EventId":{"Id":10000,"Name":"Microsoft.EntityFrameworkCore.Update.SaveChangesFailed"},"SourceContext":"Microsoft.EntityFrameworkCore.Update","ActionId":"f08c1599-6d1e-4f91-aefe-6b2d84852a1e","ActionName":"JustCareAPI.Controllers.AppointmentController.CreateAppointment (JustCareAPI)","RequestId":"80000011-000e-fe00-b63f-84710c7967bb","RequestPath":"/AppointmentAPI/Create%20appointment"}
{"@t":"2024-01-17T07:43:36.6634153Z","@mt":"An error occurred while saving the entity changes. See the inner exception for details.","@l":"Error","@x":"Microsoft.EntityFrameworkCore.DbUpdateException: An error occurred while saving the entity changes. See the inner exception for details.\r\n ---> Microsoft.Data.SqlClient.SqlException (0x80131904): The INSERT statement conflicted with the FOREIGN KEY constraint \"FK_Appointment_User_DentistUserId\". The conflict occurred in database \"JustCare\", table \"dbo.User\", column 'Id'.\r\n   at Microsoft.Data.SqlClient.SqlConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)\r\n   at Microsoft.Data.SqlClient.SqlInternalConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)\r\n   at Microsoft.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)\r\n   at Microsoft.Data.SqlClient.TdsParser.TryRun(RunBehavior runBehavior, SqlCommand cmdHandler, SqlDataReader dataStream, BulkCopySimpleResultSet bulkCopyHandler, TdsParserStateObject stateObj, Boolean& dataReady)\r\n   at Microsoft.Data.SqlClient.SqlDataReader.TryHasMoreRows(Boolean& moreRows)\r\n   at Microsoft.Data.SqlClient.SqlDataReader.TryReadInternal(Boolean setTimeout, Boolean& more)\r\n   at Microsoft.Data.SqlClient.SqlDataReader.Read()\r\n   at Microsoft.EntityFrameworkCore.Storage.RelationalDataReader.Read()\r\n   at Microsoft.EntityFrameworkCore.Update.AffectedCountModificationCommandBatch.ConsumeResultSet(Int32 startCommandIndex, RelationalDataReader reader)\r\n   at Microsoft.EntityFrameworkCore.Update.AffectedCountModificationCommandBatch.Consume(RelationalDataReader reader)\r\nClientConnectionId:2d658957-6baf-40c0-a805-b1966554c0a9\r\nError Number:547,State:0,Class:16\r\n   --- End of inner exception stack trace ---\r\n   at Microsoft.EntityFrameworkCore.Update.AffectedCountModificationCommandBatch.Consume(RelationalDataReader reader)\r\n   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.Execute(IRelationalConnection connection)\r\n   at Microsoft.EntityFrameworkCore.SqlServer.Update.Internal.SqlServerModificationCommandBatch.Execute(IRelationalConnection connection)\r\n   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.Execute(IEnumerable`1 commandBatches, IRelationalConnection connection)\r\n   at Microsoft.EntityFrameworkCore.Storage.RelationalDatabase.SaveChanges(IList`1 entries)\r\n   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChanges(IList`1 entriesToSave)\r\n   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChanges(StateManager stateManager, Boolean acceptAllChangesOnSuccess)\r\n   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.<>c.<SaveChanges>b__107_0(DbContext _, ValueTuple`2 t)\r\n   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.Execute[TState,TResult](TState state, Func`3 operation, Func`3 verifySucceeded)\r\n   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChanges(Boolean acceptAllChangesOnSuccess)\r\n   at Microsoft.EntityFrameworkCore.DbContext.SaveChanges(Boolean acceptAllChangesOnSuccess)\r\n   at Microsoft.EntityFrameworkCore.DbContext.SaveChanges()\r\n   at JustCare_MB.Services.AppointmentService.CreateAppointment(CreateAppointmentDto appointmentDto) in C:\\Users\\Smail_-\\Desktop\\JustCare\\JustCare_MB\\Services\\AppointmentService.cs:line 129\r\n   at JustCareAPI.Controllers.AppointmentController.CreateAppointment(CreateAppointmentDto appointmentDto) in C:\\Users\\Smail_-\\Desktop\\JustCare\\JustCareAPI\\Controllers\\AppointmentController.cs:line 29\r\n   at lambda_method6(Closure, Object)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfActionResultExecutor.Execute(ActionContext actionContext, IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Awaited|17_0(ResourceInvoker invoker, Task task, IDisposable scope)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Awaited|17_0(ResourceInvoker invoker, Task task, IDisposable scope)\r\n   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)\r\n   at JustCare_MB.Middlewares.GlobalExceptionHandlingMiddleware.InvokeAsync(HttpContext context, RequestDelegate next) in C:\\Users\\Smail_-\\Desktop\\JustCare\\JustCare_MB\\Middlewares\\GlobalExceptionHandlingMiddleware.cs:line 31","@tr":"14171d4bade015612d58b9dbc60f6a83","@sp":"b7a32c59d6899b0d","SourceContext":"JustCare_MB.Middlewares.GlobalExceptionHandlingMiddleware","ActionId":"f08c1599-6d1e-4f91-aefe-6b2d84852a1e","ActionName":"JustCareAPI.Controllers.AppointmentController.CreateAppointment (JustCareAPI)","RequestId":"80000011-000e-fe00-b63f-84710c7967bb","RequestPath":"/AppointmentAPI/Create%20appointment"}
{"@t":"2024-01-17T07:43:36.6739776Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["5099.4966"],"@tr":"14171d4bade015612d58b9dbc60f6a83","@sp":"b7a32c59d6899b0d","RequestMethod":"POST","RequestPath":"/AppointmentAPI/Create appointment","StatusCode":400,"Elapsed":5099.4966,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"80000011-000e-fe00-b63f-84710c7967bb"}
{"@t":"2024-01-17T07:44:16.7966165Z","@mt":"User not exist or Invalid Password","@l":"Error","@x":"JustCare_MB.Helpers.InvalidUserPasswordOrUserNotExistException: User not exist or Invalid Password\r\n   at JustCare_MB.Services.UsersService.Authenticate(UserLoginRequestDto userLogin) in C:\\Users\\Smail_-\\Desktop\\JustCare\\JustCare_MB\\Services\\UsersService.cs:line 47\r\n   at JustCare_MB.Services.UsersService.Login(UserLoginRequestDto userLogin) in C:\\Users\\Smail_-\\Desktop\\JustCare\\JustCare_MB\\Services\\UsersService.cs:line 123\r\n   at JustCareAPI.Controllers.UserController.Login(UserLoginRequestDto userLogin) in C:\\Users\\Smail_-\\Desktop\\JustCare\\JustCareAPI\\Controllers\\UserController.cs:line 36\r\n   at lambda_method172(Closure, Object)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfActionResultExecutor.Execute(ActionContext actionContext, IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeInnerFilterAsync()\r\n--- End of stack trace from previous location ---\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Awaited|17_0(ResourceInvoker invoker, Task task, IDisposable scope)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Awaited|17_0(ResourceInvoker invoker, Task task, IDisposable scope)\r\n   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)\r\n   at JustCare_MB.Middlewares.GlobalExceptionHandlingMiddleware.InvokeAsync(HttpContext context, RequestDelegate next) in C:\\Users\\Smail_-\\Desktop\\JustCare\\JustCare_MB\\Middlewares\\GlobalExceptionHandlingMiddleware.cs:line 31","@tr":"6500a53957fb0bb1589575779e25bdfe","@sp":"ffd8f69bd023fc05","SourceContext":"JustCare_MB.Middlewares.GlobalExceptionHandlingMiddleware","ActionId":"483135e7-3c0d-4bec-9af3-6d3b0fa9de50","ActionName":"JustCareAPI.Controllers.UserController.Login (JustCareAPI)","RequestId":"80000056-0002-f800-b63f-84710c7967bb","RequestPath":"/UserAPI/Login"}
{"@t":"2024-01-17T07:44:16.7987266Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["183.1332"],"@tr":"6500a53957fb0bb1589575779e25bdfe","@sp":"ffd8f69bd023fc05","RequestMethod":"POST","RequestPath":"/UserAPI/Login","StatusCode":400,"Elapsed":183.1332,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"80000056-0002-f800-b63f-84710c7967bb"}
{"@t":"2024-01-17T07:45:06.8051097Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["31.5296"],"@tr":"ea4b5a478da9acd9569915e5c52773dc","@sp":"db9249ad0945ba98","RequestMethod":"POST","RequestPath":"/UserAPI/Register","StatusCode":400,"Elapsed":31.5296,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"8000007b-0009-ff00-b63f-84710c7967bb"}
{"@t":"2024-01-17T07:47:00.9667814Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["4.8076"],"@tr":"f2dc6fe1e2ddc3ebfcd67f07f6b4d863","@sp":"f0827dc19208ee47","RequestMethod":"POST","RequestPath":"/UserAPI/Register","StatusCode":400,"Elapsed":4.8076,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"8000000a-0005-fe00-b63f-84710c7967bb"}
{"@t":"2024-01-17T07:47:09.5567807Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["2.6713"],"@tr":"5e6117c319f37407bb9ba10c61811cab","@sp":"47c9f085cd232a27","RequestMethod":"POST","RequestPath":"/UserAPI/Register","StatusCode":400,"Elapsed":2.6713,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"8000008b-0008-fc00-b63f-84710c7967bb"}
{"@t":"2024-01-17T07:47:23.6853283Z","@mt":"An exception occurred in the database while saving changes for context type '{contextType}'.{newline}{error}","@l":"Error","@x":"Microsoft.EntityFrameworkCore.DbUpdateException: An error occurred while saving the entity changes. See the inner exception for details.\r\n ---> Microsoft.Data.SqlClient.SqlException (0x80131904): The INSERT statement conflicted with the FOREIGN KEY constraint \"FK_User_Gender_GenderId\". The conflict occurred in database \"JustCare\", table \"dbo.Gender\", column 'Id'.\r\n   at Microsoft.Data.SqlClient.SqlConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)\r\n   at Microsoft.Data.SqlClient.SqlInternalConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)\r\n   at Microsoft.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)\r\n   at Microsoft.Data.SqlClient.TdsParser.TryRun(RunBehavior runBehavior, SqlCommand cmdHandler, SqlDataReader dataStream, BulkCopySimpleResultSet bulkCopyHandler, TdsParserStateObject stateObj, Boolean& dataReady)\r\n   at Microsoft.Data.SqlClient.SqlDataReader.TryHasMoreRows(Boolean& moreRows)\r\n   at Microsoft.Data.SqlClient.SqlDataReader.TryReadInternal(Boolean setTimeout, Boolean& more)\r\n   at Microsoft.Data.SqlClient.SqlDataReader.ReadAsyncExecute(Task task, Object state)\r\n   at Microsoft.Data.SqlClient.SqlDataReader.InvokeAsyncCall[T](SqlDataReaderBaseAsyncCallContext`1 context)\r\n--- End of stack trace from previous location ---\r\n   at Microsoft.EntityFrameworkCore.Update.AffectedCountModificationCommandBatch.ConsumeResultSetAsync(Int32 startCommandIndex, RelationalDataReader reader, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.Update.AffectedCountModificationCommandBatch.ConsumeAsync(RelationalDataReader reader, CancellationToken cancellationToken)\r\nClientConnectionId:2d658957-6baf-40c0-a805-b1966554c0a9\r\nError Number:547,State:0,Class:16\r\n   --- End of inner exception stack trace ---\r\n   at Microsoft.EntityFrameworkCore.Update.AffectedCountModificationCommandBatch.ConsumeAsync(RelationalDataReader reader, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.SqlServer.Update.Internal.SqlServerModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(IList`1 entriesToSave, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(StateManager stateManager, Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.DbContext.SaveChangesAsync(Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)","@tr":"709a6ac8a9b1e7b034d6b4cbcb717b01","@sp":"1277fac461a314f5","contextType":"JustCare_MB.Data.JustCareContext","newline":"\r\n","error":"Microsoft.EntityFrameworkCore.DbUpdateException: An error occurred while saving the entity changes. See the inner exception for details.\r\n ---> Microsoft.Data.SqlClient.SqlException (0x80131904): The INSERT statement conflicted with the FOREIGN KEY constraint \"FK_User_Gender_GenderId\". The conflict occurred in database \"JustCare\", table \"dbo.Gender\", column 'Id'.\r\n   at Microsoft.Data.SqlClient.SqlConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)\r\n   at Microsoft.Data.SqlClient.SqlInternalConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)\r\n   at Microsoft.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)\r\n   at Microsoft.Data.SqlClient.TdsParser.TryRun(RunBehavior runBehavior, SqlCommand cmdHandler, SqlDataReader dataStream, BulkCopySimpleResultSet bulkCopyHandler, TdsParserStateObject stateObj, Boolean& dataReady)\r\n   at Microsoft.Data.SqlClient.SqlDataReader.TryHasMoreRows(Boolean& moreRows)\r\n   at Microsoft.Data.SqlClient.SqlDataReader.TryReadInternal(Boolean setTimeout, Boolean& more)\r\n   at Microsoft.Data.SqlClient.SqlDataReader.ReadAsyncExecute(Task task, Object state)\r\n   at Microsoft.Data.SqlClient.SqlDataReader.InvokeAsyncCall[T](SqlDataReaderBaseAsyncCallContext`1 context)\r\n--- End of stack trace from previous location ---\r\n   at Microsoft.EntityFrameworkCore.Update.AffectedCountModificationCommandBatch.ConsumeResultSetAsync(Int32 startCommandIndex, RelationalDataReader reader, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.Update.AffectedCountModificationCommandBatch.ConsumeAsync(RelationalDataReader reader, CancellationToken cancellationToken)\r\nClientConnectionId:2d658957-6baf-40c0-a805-b1966554c0a9\r\nError Number:547,State:0,Class:16\r\n   --- End of inner exception stack trace ---\r\n   at Microsoft.EntityFrameworkCore.Update.AffectedCountModificationCommandBatch.ConsumeAsync(RelationalDataReader reader, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.SqlServer.Update.Internal.SqlServerModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(IList`1 entriesToSave, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(StateManager stateManager, Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.DbContext.SaveChangesAsync(Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)","EventId":{"Id":10000,"Name":"Microsoft.EntityFrameworkCore.Update.SaveChangesFailed"},"SourceContext":"Microsoft.EntityFrameworkCore.Update","ActionId":"025e1777-a0a2-40a3-a2df-637264fe48dd","ActionName":"JustCareAPI.Controllers.UserController.Register (JustCareAPI)","RequestId":"80000006-000e-fd00-b63f-84710c7967bb","RequestPath":"/UserAPI/Register"}
{"@t":"2024-01-17T07:47:23.7700432Z","@mt":"An error occurred while saving the entity changes. See the inner exception for details.","@l":"Error","@x":"Microsoft.EntityFrameworkCore.DbUpdateException: An error occurred while saving the entity changes. See the inner exception for details.\r\n ---> Microsoft.Data.SqlClient.SqlException (0x80131904): The INSERT statement conflicted with the FOREIGN KEY constraint \"FK_User_Gender_GenderId\". The conflict occurred in database \"JustCare\", table \"dbo.Gender\", column 'Id'.\r\n   at Microsoft.Data.SqlClient.SqlConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)\r\n   at Microsoft.Data.SqlClient.SqlInternalConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)\r\n   at Microsoft.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)\r\n   at Microsoft.Data.SqlClient.TdsParser.TryRun(RunBehavior runBehavior, SqlCommand cmdHandler, SqlDataReader dataStream, BulkCopySimpleResultSet bulkCopyHandler, TdsParserStateObject stateObj, Boolean& dataReady)\r\n   at Microsoft.Data.SqlClient.SqlDataReader.TryHasMoreRows(Boolean& moreRows)\r\n   at Microsoft.Data.SqlClient.SqlDataReader.TryReadInternal(Boolean setTimeout, Boolean& more)\r\n   at Microsoft.Data.SqlClient.SqlDataReader.ReadAsyncExecute(Task task, Object state)\r\n   at Microsoft.Data.SqlClient.SqlDataReader.InvokeAsyncCall[T](SqlDataReaderBaseAsyncCallContext`1 context)\r\n--- End of stack trace from previous location ---\r\n   at Microsoft.EntityFrameworkCore.Update.AffectedCountModificationCommandBatch.ConsumeResultSetAsync(Int32 startCommandIndex, RelationalDataReader reader, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.Update.AffectedCountModificationCommandBatch.ConsumeAsync(RelationalDataReader reader, CancellationToken cancellationToken)\r\nClientConnectionId:2d658957-6baf-40c0-a805-b1966554c0a9\r\nError Number:547,State:0,Class:16\r\n   --- End of inner exception stack trace ---\r\n   at Microsoft.EntityFrameworkCore.Update.AffectedCountModificationCommandBatch.ConsumeAsync(RelationalDataReader reader, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.SqlServer.Update.Internal.SqlServerModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(IList`1 entriesToSave, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(StateManager stateManager, Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.DbContext.SaveChangesAsync(Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.DbContext.SaveChangesAsync(Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)\r\n   at JustCare_MB.Services.UsersService.Register(UserRegisterDto userRegisterDto) in C:\\Users\\Smail_-\\Desktop\\JustCare\\JustCare_MB\\Services\\UsersService.cs:line 154\r\n   at JustCareAPI.Controllers.UserController.Register(UserRegisterDto userRegisterDto) in C:\\Users\\Smail_-\\Desktop\\JustCare\\JustCareAPI\\Controllers\\UserController.cs:line 47\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(ActionContext actionContext, IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Awaited|17_0(ResourceInvoker invoker, Task task, IDisposable scope)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Awaited|17_0(ResourceInvoker invoker, Task task, IDisposable scope)\r\n   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)\r\n   at JustCare_MB.Middlewares.GlobalExceptionHandlingMiddleware.InvokeAsync(HttpContext context, RequestDelegate next) in C:\\Users\\Smail_-\\Desktop\\JustCare\\JustCare_MB\\Middlewares\\GlobalExceptionHandlingMiddleware.cs:line 31","@tr":"709a6ac8a9b1e7b034d6b4cbcb717b01","@sp":"1277fac461a314f5","SourceContext":"JustCare_MB.Middlewares.GlobalExceptionHandlingMiddleware","ActionId":"025e1777-a0a2-40a3-a2df-637264fe48dd","ActionName":"JustCareAPI.Controllers.UserController.Register (JustCareAPI)","RequestId":"80000006-000e-fd00-b63f-84710c7967bb","RequestPath":"/UserAPI/Register"}
{"@t":"2024-01-17T07:47:23.7724289Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["3708.5869"],"@tr":"709a6ac8a9b1e7b034d6b4cbcb717b01","@sp":"1277fac461a314f5","RequestMethod":"POST","RequestPath":"/UserAPI/Register","StatusCode":400,"Elapsed":3708.5869,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"80000006-000e-fd00-b63f-84710c7967bb"}
{"@t":"2024-01-17T07:47:34.6707454Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["4288.9550"],"@tr":"a05b3f3e3d571e915fb9a01405632cc0","@sp":"1f9c0bfe7f82977e","RequestMethod":"POST","RequestPath":"/UserAPI/Register","StatusCode":200,"Elapsed":4288.955,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"8000008d-0008-fc00-b63f-84710c7967bb"}
{"@t":"2024-01-17T07:47:57.1819217Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["1502.7424"],"@tr":"87ac58a2aa87f43ef1711f567fc1e578","@sp":"1361afb9584f1ca8","RequestMethod":"POST","RequestPath":"/UserAPI/Register","StatusCode":200,"Elapsed":1502.7424,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"8000002f-0001-fd00-b63f-84710c7967bb"}
{"@t":"2024-01-17T07:48:18.8907052Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["2.3148"],"@tr":"50ea933e655b8667a66924c12983224e","@sp":"c8d58ebf37675e10","RequestMethod":"POST","RequestPath":"/UserAPI/Register","StatusCode":400,"Elapsed":2.3148,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"8000003c-0004-ff00-b63f-84710c7967bb"}
{"@t":"2024-01-17T07:57:32.0960141Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["173.7766"],"@tr":"690ba47038004ffb30f64e89542bbb0e","@sp":"6c087f6fb35ec669","RequestMethod":"GET","RequestPath":"/swagger/index.html","StatusCode":200,"Elapsed":173.7766,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"80000016-0007-ff00-b63f-84710c7967bb"}
{"@t":"2024-01-17T07:57:32.2634710Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["76.4366"],"@tr":"2d1dc4cfd7bd22847d99cda6589d4194","@sp":"e853e2c41dcc69f5","RequestMethod":"GET","RequestPath":"/swagger/v1/swagger.json","StatusCode":200,"Elapsed":76.4366,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"80000004-0000-fc00-b63f-84710c7967bb"}
{"@t":"2024-01-17T07:58:25.8502332Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["3153.6797"],"@tr":"a434f0c206a50013edd3c6c624e70286","@sp":"9867e0678ab894bf","RequestMethod":"POST","RequestPath":"/UserAPI/Register","StatusCode":200,"Elapsed":3153.6797,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"800000b5-000a-ff00-b63f-84710c7967bb"}
{"@t":"2024-01-17T08:05:03.5324481Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["174.4985"],"@tr":"76ca3ebbee87deced1ab2085f1f862f3","@sp":"15a2f4c377711c68","RequestMethod":"GET","RequestPath":"/swagger/index.html","StatusCode":200,"Elapsed":174.4985,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"80000099-0008-fc00-b63f-84710c7967bb"}
{"@t":"2024-01-17T08:05:03.7111093Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["83.8491"],"@tr":"cdbbeed059863d765241dfd6d04a095d","@sp":"f10af2553e487b5a","RequestMethod":"GET","RequestPath":"/swagger/v1/swagger.json","StatusCode":200,"Elapsed":83.8491,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"80000015-000e-fe00-b63f-84710c7967bb"}
{"@t":"2024-01-17T08:06:21.9485327Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["387.2858"],"@tr":"69286cbc18131f1a6bf50135af1b7cac","@sp":"22fc37b66bca0c82","RequestMethod":"POST","RequestPath":"/UserAPI/Register","StatusCode":400,"Elapsed":387.2858,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"80000017-000e-fe00-b63f-84710c7967bb"}
{"@t":"2024-01-17T08:06:29.9733303Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["27.1263"],"@tr":"bb71dcc5a46c68092b57937e2ec11abd","@sp":"7238c5ed50a1bdcf","RequestMethod":"POST","RequestPath":"/UserAPI/Register","StatusCode":400,"Elapsed":27.1263,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"80000058-0002-f800-b63f-84710c7967bb"}
{"@t":"2024-01-17T08:06:49.1965790Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["9.9929"],"@tr":"1b2d20936f046ecf9acf1da790d90afd","@sp":"0bc0eb5fab52f76b","RequestMethod":"POST","RequestPath":"/UserAPI/Register","StatusCode":400,"Elapsed":9.9929,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"8000000b-0009-fe00-b63f-84710c7967bb"}
{"@t":"2024-01-17T08:07:06.1649571Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["3850.4128"],"@tr":"599569f24c53f0cd150d07e13dee5c7b","@sp":"2c63f4152769a396","RequestMethod":"POST","RequestPath":"/UserAPI/Register","StatusCode":200,"Elapsed":3850.4128,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"80000031-0001-fd00-b63f-84710c7967bb"}
{"@t":"2024-01-17T08:07:27.1437178Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["17.3873"],"@tr":"549d20adcc75cc2e8bff75d27b36e8fd","@sp":"3b1e6ce5e6c3daca","RequestMethod":"GET","RequestPath":"/CategoryAPI/GetAllCategorys","StatusCode":401,"Elapsed":17.3873,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"80000066-000d-fd00-b63f-84710c7967bb"}
{"@t":"2024-01-17T08:07:42.4189899Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["113.5920"],"@tr":"c7f9c42250f760d6b688889f31c7eba9","@sp":"cd84df5a0337c4b2","RequestMethod":"POST","RequestPath":"/UserAPI/Login","StatusCode":200,"Elapsed":113.592,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"80000040-0004-ff00-b63f-84710c7967bb"}
{"@t":"2024-01-17T08:07:55.9398890Z","@mt":"Get all Categories","@tr":"418c4993a0933f31c970751f307ebdfa","@sp":"5e023114d4545000","SourceContext":"JustCare_MB.Services.CategoryService","ActionId":"40e5e67e-17e3-48db-adb6-1220680dd028","ActionName":"JustCareAPI.Controllers.CategoryController.GetAllCategorys (JustCareAPI)","RequestId":"80000042-0004-ff00-b63f-84710c7967bb","RequestPath":"/CategoryAPI/GetAllCategorys"}
{"@t":"2024-01-17T08:07:56.0072823Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["100.5678"],"@tr":"418c4993a0933f31c970751f307ebdfa","@sp":"5e023114d4545000","RequestMethod":"GET","RequestPath":"/CategoryAPI/GetAllCategorys","StatusCode":200,"Elapsed":100.5678,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"80000042-0004-ff00-b63f-84710c7967bb"}
{"@t":"2024-01-17T08:08:24.0466592Z","@mt":"Create Appointment: {\"Date\":\"2024-01-18T00:00:00\",\"CategoryId\":1,\"DentistDescription\":\"string\",\"Images\":[\"\",\"\"]}","@tr":"c83b87a05b6ec0c1fb930470120fa340","@sp":"c1dbcae3af8ead39","SourceContext":"JustCare_MB.Services.AppointmentService","ActionId":"bb512cb3-1bf8-429c-83be-958b27803d2c","ActionName":"JustCareAPI.Controllers.AppointmentController.CreateAppointment (JustCareAPI)","RequestId":"80000083-0009-ff00-b63f-84710c7967bb","RequestPath":"/AppointmentAPI/Create%20appointment"}
{"@t":"2024-01-17T08:08:24.1210498Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["1717.3556"],"@tr":"c83b87a05b6ec0c1fb930470120fa340","@sp":"c1dbcae3af8ead39","RequestMethod":"POST","RequestPath":"/AppointmentAPI/Create appointment","StatusCode":200,"Elapsed":1717.3556,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"80000083-0009-ff00-b63f-84710c7967bb"}
{"@t":"2024-01-17T08:09:00.1095176Z","@mt":"Get All Appoitnment Dates By Category Id(4.1): 1","@tr":"5e9d4f34ad3af33a28dcd73696375826","@sp":"5775328937c5d10e","SourceContext":"JustCare_MB.Services.AppointmentService","ActionId":"c484607c-e66b-4efd-930a-50716cfe5b21","ActionName":"JustCareAPI.Controllers.AppointmentController.GetAllDatesDtoByCategoryId (JustCareAPI)","RequestId":"80000026-0006-ff00-b63f-84710c7967bb","RequestPath":"/AppointmentAPI/1"}
{"@t":"2024-01-17T08:09:01.1495665Z","@mt":"Get All Appoitnment Dates By Category Id(4.2): 1","@tr":"5e9d4f34ad3af33a28dcd73696375826","@sp":"5775328937c5d10e","SourceContext":"JustCare_MB.Services.AppointmentService","ActionId":"c484607c-e66b-4efd-930a-50716cfe5b21","ActionName":"JustCareAPI.Controllers.AppointmentController.GetAllDatesDtoByCategoryId (JustCareAPI)","RequestId":"80000026-0006-ff00-b63f-84710c7967bb","RequestPath":"/AppointmentAPI/1"}
{"@t":"2024-01-17T08:09:01.1982722Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["2509.5247"],"@tr":"5e9d4f34ad3af33a28dcd73696375826","@sp":"5775328937c5d10e","RequestMethod":"GET","RequestPath":"/AppointmentAPI/1","StatusCode":200,"Elapsed":2509.5247,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"80000026-0006-ff00-b63f-84710c7967bb"}
