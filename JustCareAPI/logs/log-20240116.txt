{"@t":"2024-01-16T05:57:08.9883137Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["223.7330"],"@tr":"041905115153ef1bbc913216eb566dcd","@sp":"2cc3d8bd5f07d0b2","RequestMethod":"GET","RequestPath":"/swagger/index.html","StatusCode":200,"Elapsed":223.733,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"80000026-0004-fe00-b63f-84710c7967bb"}
{"@t":"2024-01-16T05:57:09.2222110Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["108.9258"],"@tr":"9ebdd0ecd14f684984c72ba1a75b65e2","@sp":"75cc8534b9b557f0","RequestMethod":"GET","RequestPath":"/swagger/v1/swagger.json","StatusCode":200,"Elapsed":108.9258,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"80000007-0006-ff00-b63f-84710c7967bb"}
{"@t":"2024-01-16T05:58:05.9875523Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["842.7774"],"@tr":"0fbf89a422b2b1676a6263f9578d1d5f","@sp":"305d59830673cd46","RequestMethod":"POST","RequestPath":"/UserAPI/Register","StatusCode":400,"Elapsed":842.7774,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"8000006d-000c-ff00-b63f-84710c7967bb"}
{"@t":"2024-01-16T05:58:23.5621560Z","@mt":"An exception occurred in the database while saving changes for context type '{contextType}'.{newline}{error}","@l":"Error","@x":"Microsoft.EntityFrameworkCore.DbUpdateException: An error occurred while saving the entity changes. See the inner exception for details.\r\n ---> Microsoft.Data.SqlClient.SqlException (0x80131904): The INSERT statement conflicted with the FOREIGN KEY constraint \"FK_User_Gender_GenderId\". The conflict occurred in database \"JustCare10\", table \"dbo.Gender\", column 'Id'.\r\n   at Microsoft.Data.SqlClient.SqlConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)\r\n   at Microsoft.Data.SqlClient.SqlInternalConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)\r\n   at Microsoft.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)\r\n   at Microsoft.Data.SqlClient.TdsParser.TryRun(RunBehavior runBehavior, SqlCommand cmdHandler, SqlDataReader dataStream, BulkCopySimpleResultSet bulkCopyHandler, TdsParserStateObject stateObj, Boolean& dataReady)\r\n   at Microsoft.Data.SqlClient.SqlDataReader.TryHasMoreRows(Boolean& moreRows)\r\n   at Microsoft.Data.SqlClient.SqlDataReader.TryReadInternal(Boolean setTimeout, Boolean& more)\r\n   at Microsoft.Data.SqlClient.SqlDataReader.ReadAsyncExecute(Task task, Object state)\r\n   at Microsoft.Data.SqlClient.SqlDataReader.InvokeAsyncCall[T](SqlDataReaderBaseAsyncCallContext`1 context)\r\n--- End of stack trace from previous location ---\r\n   at Microsoft.EntityFrameworkCore.Update.AffectedCountModificationCommandBatch.ConsumeResultSetAsync(Int32 startCommandIndex, RelationalDataReader reader, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.Update.AffectedCountModificationCommandBatch.ConsumeAsync(RelationalDataReader reader, CancellationToken cancellationToken)\r\nClientConnectionId:19e89848-b104-4de2-8e1b-62c6f626d5b8\r\nError Number:547,State:0,Class:16\r\n   --- End of inner exception stack trace ---\r\n   at Microsoft.EntityFrameworkCore.Update.AffectedCountModificationCommandBatch.ConsumeAsync(RelationalDataReader reader, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.SqlServer.Update.Internal.SqlServerModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(IList`1 entriesToSave, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(StateManager stateManager, Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.DbContext.SaveChangesAsync(Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)","@tr":"4f77fb5f98c9b7116ee2588630a59d1c","@sp":"cdf716d869689c36","contextType":"JustCare_MB.Data.JustCareContext","newline":"\r\n","error":"Microsoft.EntityFrameworkCore.DbUpdateException: An error occurred while saving the entity changes. See the inner exception for details.\r\n ---> Microsoft.Data.SqlClient.SqlException (0x80131904): The INSERT statement conflicted with the FOREIGN KEY constraint \"FK_User_Gender_GenderId\". The conflict occurred in database \"JustCare10\", table \"dbo.Gender\", column 'Id'.\r\n   at Microsoft.Data.SqlClient.SqlConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)\r\n   at Microsoft.Data.SqlClient.SqlInternalConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)\r\n   at Microsoft.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)\r\n   at Microsoft.Data.SqlClient.TdsParser.TryRun(RunBehavior runBehavior, SqlCommand cmdHandler, SqlDataReader dataStream, BulkCopySimpleResultSet bulkCopyHandler, TdsParserStateObject stateObj, Boolean& dataReady)\r\n   at Microsoft.Data.SqlClient.SqlDataReader.TryHasMoreRows(Boolean& moreRows)\r\n   at Microsoft.Data.SqlClient.SqlDataReader.TryReadInternal(Boolean setTimeout, Boolean& more)\r\n   at Microsoft.Data.SqlClient.SqlDataReader.ReadAsyncExecute(Task task, Object state)\r\n   at Microsoft.Data.SqlClient.SqlDataReader.InvokeAsyncCall[T](SqlDataReaderBaseAsyncCallContext`1 context)\r\n--- End of stack trace from previous location ---\r\n   at Microsoft.EntityFrameworkCore.Update.AffectedCountModificationCommandBatch.ConsumeResultSetAsync(Int32 startCommandIndex, RelationalDataReader reader, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.Update.AffectedCountModificationCommandBatch.ConsumeAsync(RelationalDataReader reader, CancellationToken cancellationToken)\r\nClientConnectionId:19e89848-b104-4de2-8e1b-62c6f626d5b8\r\nError Number:547,State:0,Class:16\r\n   --- End of inner exception stack trace ---\r\n   at Microsoft.EntityFrameworkCore.Update.AffectedCountModificationCommandBatch.ConsumeAsync(RelationalDataReader reader, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.SqlServer.Update.Internal.SqlServerModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(IList`1 entriesToSave, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(StateManager stateManager, Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.DbContext.SaveChangesAsync(Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)","EventId":{"Id":10000,"Name":"Microsoft.EntityFrameworkCore.Update.SaveChangesFailed"},"SourceContext":"Microsoft.EntityFrameworkCore.Update","ActionId":"80d1c0e9-f232-4292-b917-0d0725048614","ActionName":"JustCareAPI.Controllers.UserController.Register (JustCareAPI)","RequestId":"80000004-0009-fe00-b63f-84710c7967bb","RequestPath":"/UserAPI/Register"}
{"@t":"2024-01-16T05:58:23.9902811Z","@mt":"An error occurred while saving the entity changes. See the inner exception for details.","@l":"Error","@x":"Microsoft.EntityFrameworkCore.DbUpdateException: An error occurred while saving the entity changes. See the inner exception for details.\r\n ---> Microsoft.Data.SqlClient.SqlException (0x80131904): The INSERT statement conflicted with the FOREIGN KEY constraint \"FK_User_Gender_GenderId\". The conflict occurred in database \"JustCare10\", table \"dbo.Gender\", column 'Id'.\r\n   at Microsoft.Data.SqlClient.SqlConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)\r\n   at Microsoft.Data.SqlClient.SqlInternalConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)\r\n   at Microsoft.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)\r\n   at Microsoft.Data.SqlClient.TdsParser.TryRun(RunBehavior runBehavior, SqlCommand cmdHandler, SqlDataReader dataStream, BulkCopySimpleResultSet bulkCopyHandler, TdsParserStateObject stateObj, Boolean& dataReady)\r\n   at Microsoft.Data.SqlClient.SqlDataReader.TryHasMoreRows(Boolean& moreRows)\r\n   at Microsoft.Data.SqlClient.SqlDataReader.TryReadInternal(Boolean setTimeout, Boolean& more)\r\n   at Microsoft.Data.SqlClient.SqlDataReader.ReadAsyncExecute(Task task, Object state)\r\n   at Microsoft.Data.SqlClient.SqlDataReader.InvokeAsyncCall[T](SqlDataReaderBaseAsyncCallContext`1 context)\r\n--- End of stack trace from previous location ---\r\n   at Microsoft.EntityFrameworkCore.Update.AffectedCountModificationCommandBatch.ConsumeResultSetAsync(Int32 startCommandIndex, RelationalDataReader reader, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.Update.AffectedCountModificationCommandBatch.ConsumeAsync(RelationalDataReader reader, CancellationToken cancellationToken)\r\nClientConnectionId:19e89848-b104-4de2-8e1b-62c6f626d5b8\r\nError Number:547,State:0,Class:16\r\n   --- End of inner exception stack trace ---\r\n   at Microsoft.EntityFrameworkCore.Update.AffectedCountModificationCommandBatch.ConsumeAsync(RelationalDataReader reader, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.SqlServer.Update.Internal.SqlServerModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(IList`1 entriesToSave, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(StateManager stateManager, Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.DbContext.SaveChangesAsync(Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.DbContext.SaveChangesAsync(Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)\r\n   at JustCare_MB.Services.UsersService.Register(UserRegisterDto userRegisterDto) in C:\\Users\\Smail_-\\Desktop\\JustCare\\JustCare_MB\\Services\\UsersService.cs:line 149\r\n   at JustCareAPI.Controllers.UserController.Register(UserRegisterDto userRegisterDto) in C:\\Users\\Smail_-\\Desktop\\JustCare\\JustCareAPI\\Controllers\\UserController.cs:line 47\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(ActionContext actionContext, IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Awaited|17_0(ResourceInvoker invoker, Task task, IDisposable scope)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Awaited|17_0(ResourceInvoker invoker, Task task, IDisposable scope)\r\n   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)\r\n   at JustCare_MB.Middlewares.GlobalExceptionHandlingMiddleware.InvokeAsync(HttpContext context, RequestDelegate next) in C:\\Users\\Smail_-\\Desktop\\JustCare\\JustCare_MB\\Middlewares\\GlobalExceptionHandlingMiddleware.cs:line 31","@tr":"4f77fb5f98c9b7116ee2588630a59d1c","@sp":"cdf716d869689c36","SourceContext":"JustCare_MB.Middlewares.GlobalExceptionHandlingMiddleware","ActionId":"80d1c0e9-f232-4292-b917-0d0725048614","ActionName":"JustCareAPI.Controllers.UserController.Register (JustCareAPI)","RequestId":"80000004-0009-fe00-b63f-84710c7967bb","RequestPath":"/UserAPI/Register"}
{"@t":"2024-01-16T05:58:24.0461319Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["3351.6625"],"@tr":"4f77fb5f98c9b7116ee2588630a59d1c","@sp":"cdf716d869689c36","RequestMethod":"POST","RequestPath":"/UserAPI/Register","StatusCode":400,"Elapsed":3351.6625,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"80000004-0009-fe00-b63f-84710c7967bb"}
{"@t":"2024-01-16T06:04:37.2178457Z","@mt":"Failed executing DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","@l":"Error","@tr":"2add666b599ab4b7470c6abb621d1d0f","@sp":"b0328e3a69f77351","elapsed":"23","parameters":"@p0='?' (DbType = Int32), @p1='?' (DbType = DateTime2), @p2='?' (Size = 100), @p3='?' (Size = 50), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32), @p6='?' (Size = 100), @p7='?' (Size = 4000), @p8='?' (DbType = Int32)","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"SET IMPLICIT_TRANSACTIONS OFF;\r\nSET NOCOUNT ON;\r\nINSERT INTO [User] ([Id], [BirthDay], [Email], [FullName], [GenderId], [NationalId], [Password], [PhoneNumber], [UserTypeId])\r\nVALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8);","EventId":{"Id":20102,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandError"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command","ActionId":"80d1c0e9-f232-4292-b917-0d0725048614","ActionName":"JustCareAPI.Controllers.UserController.Register (JustCareAPI)","RequestId":"80000022-0004-ff00-b63f-84710c7967bb","RequestPath":"/UserAPI/Register"}
{"@t":"2024-01-16T06:04:37.2218712Z","@mt":"An exception occurred in the database while saving changes for context type '{contextType}'.{newline}{error}","@l":"Error","@x":"Microsoft.EntityFrameworkCore.DbUpdateException: An error occurred while saving the entity changes. See the inner exception for details.\r\n ---> Microsoft.Data.SqlClient.SqlException (0x80131904): Cannot insert explicit value for identity column in table 'User' when IDENTITY_INSERT is set to OFF.\r\n   at Microsoft.Data.SqlClient.SqlCommand.<>c.<ExecuteDbDataReaderAsync>b__209_0(Task`1 result)\r\n   at System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()\r\n   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)\r\n--- End of stack trace from previous location ---\r\n   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)\r\n   at System.Threading.Tasks.Task.ExecuteWithThreadLocal(Task& currentTaskSlot, Thread threadPoolThread)\r\n--- End of stack trace from previous location ---\r\n   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)\r\nClientConnectionId:19e89848-b104-4de2-8e1b-62c6f626d5b8\r\nError Number:544,State:1,Class:16\r\n   --- End of inner exception stack trace ---\r\n   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.SqlServer.Update.Internal.SqlServerModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(IList`1 entriesToSave, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(StateManager stateManager, Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.DbContext.SaveChangesAsync(Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)","@tr":"2add666b599ab4b7470c6abb621d1d0f","@sp":"b0328e3a69f77351","contextType":"JustCare_MB.Data.JustCareContext","newline":"\r\n","error":"Microsoft.EntityFrameworkCore.DbUpdateException: An error occurred while saving the entity changes. See the inner exception for details.\r\n ---> Microsoft.Data.SqlClient.SqlException (0x80131904): Cannot insert explicit value for identity column in table 'User' when IDENTITY_INSERT is set to OFF.\r\n   at Microsoft.Data.SqlClient.SqlCommand.<>c.<ExecuteDbDataReaderAsync>b__209_0(Task`1 result)\r\n   at System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()\r\n   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)\r\n--- End of stack trace from previous location ---\r\n   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)\r\n   at System.Threading.Tasks.Task.ExecuteWithThreadLocal(Task& currentTaskSlot, Thread threadPoolThread)\r\n--- End of stack trace from previous location ---\r\n   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)\r\nClientConnectionId:19e89848-b104-4de2-8e1b-62c6f626d5b8\r\nError Number:544,State:1,Class:16\r\n   --- End of inner exception stack trace ---\r\n   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.SqlServer.Update.Internal.SqlServerModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(IList`1 entriesToSave, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(StateManager stateManager, Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.DbContext.SaveChangesAsync(Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)","EventId":{"Id":10000,"Name":"Microsoft.EntityFrameworkCore.Update.SaveChangesFailed"},"SourceContext":"Microsoft.EntityFrameworkCore.Update","ActionId":"80d1c0e9-f232-4292-b917-0d0725048614","ActionName":"JustCareAPI.Controllers.UserController.Register (JustCareAPI)","RequestId":"80000022-0004-ff00-b63f-84710c7967bb","RequestPath":"/UserAPI/Register"}
{"@t":"2024-01-16T06:04:37.3666401Z","@mt":"An error occurred while saving the entity changes. See the inner exception for details.","@l":"Error","@x":"Microsoft.EntityFrameworkCore.DbUpdateException: An error occurred while saving the entity changes. See the inner exception for details.\r\n ---> Microsoft.Data.SqlClient.SqlException (0x80131904): Cannot insert explicit value for identity column in table 'User' when IDENTITY_INSERT is set to OFF.\r\n   at Microsoft.Data.SqlClient.SqlCommand.<>c.<ExecuteDbDataReaderAsync>b__209_0(Task`1 result)\r\n   at System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()\r\n   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)\r\n--- End of stack trace from previous location ---\r\n   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)\r\n   at System.Threading.Tasks.Task.ExecuteWithThreadLocal(Task& currentTaskSlot, Thread threadPoolThread)\r\n--- End of stack trace from previous location ---\r\n   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)\r\nClientConnectionId:19e89848-b104-4de2-8e1b-62c6f626d5b8\r\nError Number:544,State:1,Class:16\r\n   --- End of inner exception stack trace ---\r\n   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.SqlServer.Update.Internal.SqlServerModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(IList`1 entriesToSave, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(StateManager stateManager, Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.DbContext.SaveChangesAsync(Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.DbContext.SaveChangesAsync(Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)\r\n   at JustCare_MB.Services.UsersService.Register(UserRegisterDto userRegisterDto) in C:\\Users\\Smail_-\\Desktop\\JustCare\\JustCare_MB\\Services\\UsersService.cs:line 149\r\n   at JustCareAPI.Controllers.UserController.Register(UserRegisterDto userRegisterDto) in C:\\Users\\Smail_-\\Desktop\\JustCare\\JustCareAPI\\Controllers\\UserController.cs:line 47\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(ActionContext actionContext, IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Awaited|17_0(ResourceInvoker invoker, Task task, IDisposable scope)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Awaited|17_0(ResourceInvoker invoker, Task task, IDisposable scope)\r\n   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)\r\n   at JustCare_MB.Middlewares.GlobalExceptionHandlingMiddleware.InvokeAsync(HttpContext context, RequestDelegate next) in C:\\Users\\Smail_-\\Desktop\\JustCare\\JustCare_MB\\Middlewares\\GlobalExceptionHandlingMiddleware.cs:line 31","@tr":"2add666b599ab4b7470c6abb621d1d0f","@sp":"b0328e3a69f77351","SourceContext":"JustCare_MB.Middlewares.GlobalExceptionHandlingMiddleware","ActionId":"80d1c0e9-f232-4292-b917-0d0725048614","ActionName":"JustCareAPI.Controllers.UserController.Register (JustCareAPI)","RequestId":"80000022-0004-ff00-b63f-84710c7967bb","RequestPath":"/UserAPI/Register"}
{"@t":"2024-01-16T06:04:37.3696854Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["146734.7533"],"@tr":"2add666b599ab4b7470c6abb621d1d0f","@sp":"b0328e3a69f77351","RequestMethod":"POST","RequestPath":"/UserAPI/Register","StatusCode":400,"Elapsed":146734.7533,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"80000022-0004-ff00-b63f-84710c7967bb"}
{"@t":"2024-01-16T06:05:19.0436327Z","@mt":"An exception occurred in the database while saving changes for context type '{contextType}'.{newline}{error}","@l":"Error","@x":"Microsoft.EntityFrameworkCore.DbUpdateException: An error occurred while saving the entity changes. See the inner exception for details.\r\n ---> Microsoft.Data.SqlClient.SqlException (0x80131904): The INSERT statement conflicted with the FOREIGN KEY constraint \"FK_User_Gender_GenderId\". The conflict occurred in database \"JustCare10\", table \"dbo.Gender\", column 'Id'.\r\n   at Microsoft.Data.SqlClient.SqlConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)\r\n   at Microsoft.Data.SqlClient.SqlInternalConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)\r\n   at Microsoft.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)\r\n   at Microsoft.Data.SqlClient.TdsParser.TryRun(RunBehavior runBehavior, SqlCommand cmdHandler, SqlDataReader dataStream, BulkCopySimpleResultSet bulkCopyHandler, TdsParserStateObject stateObj, Boolean& dataReady)\r\n   at Microsoft.Data.SqlClient.SqlDataReader.TryHasMoreRows(Boolean& moreRows)\r\n   at Microsoft.Data.SqlClient.SqlDataReader.TryReadInternal(Boolean setTimeout, Boolean& more)\r\n   at Microsoft.Data.SqlClient.SqlDataReader.ReadAsyncExecute(Task task, Object state)\r\n   at Microsoft.Data.SqlClient.SqlDataReader.InvokeAsyncCall[T](SqlDataReaderBaseAsyncCallContext`1 context)\r\n--- End of stack trace from previous location ---\r\n   at Microsoft.EntityFrameworkCore.Update.AffectedCountModificationCommandBatch.ConsumeResultSetAsync(Int32 startCommandIndex, RelationalDataReader reader, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.Update.AffectedCountModificationCommandBatch.ConsumeAsync(RelationalDataReader reader, CancellationToken cancellationToken)\r\nClientConnectionId:19e89848-b104-4de2-8e1b-62c6f626d5b8\r\nError Number:547,State:0,Class:16\r\n   --- End of inner exception stack trace ---\r\n   at Microsoft.EntityFrameworkCore.Update.AffectedCountModificationCommandBatch.ConsumeAsync(RelationalDataReader reader, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.SqlServer.Update.Internal.SqlServerModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(IList`1 entriesToSave, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(StateManager stateManager, Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.DbContext.SaveChangesAsync(Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)","@tr":"f5dee534eb662f212727fd359c741657","@sp":"7d41153311c845fb","contextType":"JustCare_MB.Data.JustCareContext","newline":"\r\n","error":"Microsoft.EntityFrameworkCore.DbUpdateException: An error occurred while saving the entity changes. See the inner exception for details.\r\n ---> Microsoft.Data.SqlClient.SqlException (0x80131904): The INSERT statement conflicted with the FOREIGN KEY constraint \"FK_User_Gender_GenderId\". The conflict occurred in database \"JustCare10\", table \"dbo.Gender\", column 'Id'.\r\n   at Microsoft.Data.SqlClient.SqlConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)\r\n   at Microsoft.Data.SqlClient.SqlInternalConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)\r\n   at Microsoft.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)\r\n   at Microsoft.Data.SqlClient.TdsParser.TryRun(RunBehavior runBehavior, SqlCommand cmdHandler, SqlDataReader dataStream, BulkCopySimpleResultSet bulkCopyHandler, TdsParserStateObject stateObj, Boolean& dataReady)\r\n   at Microsoft.Data.SqlClient.SqlDataReader.TryHasMoreRows(Boolean& moreRows)\r\n   at Microsoft.Data.SqlClient.SqlDataReader.TryReadInternal(Boolean setTimeout, Boolean& more)\r\n   at Microsoft.Data.SqlClient.SqlDataReader.ReadAsyncExecute(Task task, Object state)\r\n   at Microsoft.Data.SqlClient.SqlDataReader.InvokeAsyncCall[T](SqlDataReaderBaseAsyncCallContext`1 context)\r\n--- End of stack trace from previous location ---\r\n   at Microsoft.EntityFrameworkCore.Update.AffectedCountModificationCommandBatch.ConsumeResultSetAsync(Int32 startCommandIndex, RelationalDataReader reader, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.Update.AffectedCountModificationCommandBatch.ConsumeAsync(RelationalDataReader reader, CancellationToken cancellationToken)\r\nClientConnectionId:19e89848-b104-4de2-8e1b-62c6f626d5b8\r\nError Number:547,State:0,Class:16\r\n   --- End of inner exception stack trace ---\r\n   at Microsoft.EntityFrameworkCore.Update.AffectedCountModificationCommandBatch.ConsumeAsync(RelationalDataReader reader, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.SqlServer.Update.Internal.SqlServerModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(IList`1 entriesToSave, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(StateManager stateManager, Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.DbContext.SaveChangesAsync(Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)","EventId":{"Id":10000,"Name":"Microsoft.EntityFrameworkCore.Update.SaveChangesFailed"},"SourceContext":"Microsoft.EntityFrameworkCore.Update","ActionId":"80d1c0e9-f232-4292-b917-0d0725048614","ActionName":"JustCareAPI.Controllers.UserController.Register (JustCareAPI)","RequestId":"80000064-000f-fd00-b63f-84710c7967bb","RequestPath":"/UserAPI/Register"}
{"@t":"2024-01-16T06:05:19.1765049Z","@mt":"An error occurred while saving the entity changes. See the inner exception for details.","@l":"Error","@x":"Microsoft.EntityFrameworkCore.DbUpdateException: An error occurred while saving the entity changes. See the inner exception for details.\r\n ---> Microsoft.Data.SqlClient.SqlException (0x80131904): The INSERT statement conflicted with the FOREIGN KEY constraint \"FK_User_Gender_GenderId\". The conflict occurred in database \"JustCare10\", table \"dbo.Gender\", column 'Id'.\r\n   at Microsoft.Data.SqlClient.SqlConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)\r\n   at Microsoft.Data.SqlClient.SqlInternalConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)\r\n   at Microsoft.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)\r\n   at Microsoft.Data.SqlClient.TdsParser.TryRun(RunBehavior runBehavior, SqlCommand cmdHandler, SqlDataReader dataStream, BulkCopySimpleResultSet bulkCopyHandler, TdsParserStateObject stateObj, Boolean& dataReady)\r\n   at Microsoft.Data.SqlClient.SqlDataReader.TryHasMoreRows(Boolean& moreRows)\r\n   at Microsoft.Data.SqlClient.SqlDataReader.TryReadInternal(Boolean setTimeout, Boolean& more)\r\n   at Microsoft.Data.SqlClient.SqlDataReader.ReadAsyncExecute(Task task, Object state)\r\n   at Microsoft.Data.SqlClient.SqlDataReader.InvokeAsyncCall[T](SqlDataReaderBaseAsyncCallContext`1 context)\r\n--- End of stack trace from previous location ---\r\n   at Microsoft.EntityFrameworkCore.Update.AffectedCountModificationCommandBatch.ConsumeResultSetAsync(Int32 startCommandIndex, RelationalDataReader reader, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.Update.AffectedCountModificationCommandBatch.ConsumeAsync(RelationalDataReader reader, CancellationToken cancellationToken)\r\nClientConnectionId:19e89848-b104-4de2-8e1b-62c6f626d5b8\r\nError Number:547,State:0,Class:16\r\n   --- End of inner exception stack trace ---\r\n   at Microsoft.EntityFrameworkCore.Update.AffectedCountModificationCommandBatch.ConsumeAsync(RelationalDataReader reader, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.SqlServer.Update.Internal.SqlServerModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(IList`1 entriesToSave, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(StateManager stateManager, Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.DbContext.SaveChangesAsync(Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.DbContext.SaveChangesAsync(Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)\r\n   at JustCare_MB.Services.UsersService.Register(UserRegisterDto userRegisterDto) in C:\\Users\\Smail_-\\Desktop\\JustCare\\JustCare_MB\\Services\\UsersService.cs:line 149\r\n   at JustCareAPI.Controllers.UserController.Register(UserRegisterDto userRegisterDto) in C:\\Users\\Smail_-\\Desktop\\JustCare\\JustCareAPI\\Controllers\\UserController.cs:line 47\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(ActionContext actionContext, IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Awaited|17_0(ResourceInvoker invoker, Task task, IDisposable scope)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Awaited|17_0(ResourceInvoker invoker, Task task, IDisposable scope)\r\n   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)\r\n   at JustCare_MB.Middlewares.GlobalExceptionHandlingMiddleware.InvokeAsync(HttpContext context, RequestDelegate next) in C:\\Users\\Smail_-\\Desktop\\JustCare\\JustCare_MB\\Middlewares\\GlobalExceptionHandlingMiddleware.cs:line 31","@tr":"f5dee534eb662f212727fd359c741657","@sp":"7d41153311c845fb","SourceContext":"JustCare_MB.Middlewares.GlobalExceptionHandlingMiddleware","ActionId":"80d1c0e9-f232-4292-b917-0d0725048614","ActionName":"JustCareAPI.Controllers.UserController.Register (JustCareAPI)","RequestId":"80000064-000f-fd00-b63f-84710c7967bb","RequestPath":"/UserAPI/Register"}
{"@t":"2024-01-16T06:05:19.1790282Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["10609.9002"],"@tr":"f5dee534eb662f212727fd359c741657","@sp":"7d41153311c845fb","RequestMethod":"POST","RequestPath":"/UserAPI/Register","StatusCode":400,"Elapsed":10609.9002,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"80000064-000f-fd00-b63f-84710c7967bb"}
{"@t":"2024-01-16T06:05:50.1978875Z","@mt":"An exception occurred in the database while saving changes for context type '{contextType}'.{newline}{error}","@l":"Error","@x":"Microsoft.EntityFrameworkCore.DbUpdateException: An error occurred while saving the entity changes. See the inner exception for details.\r\n ---> Microsoft.Data.SqlClient.SqlException (0x80131904): The INSERT statement conflicted with the FOREIGN KEY constraint \"FK_User_Gender_GenderId\". The conflict occurred in database \"JustCare10\", table \"dbo.Gender\", column 'Id'.\r\n   at Microsoft.Data.SqlClient.SqlConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)\r\n   at Microsoft.Data.SqlClient.SqlInternalConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)\r\n   at Microsoft.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)\r\n   at Microsoft.Data.SqlClient.TdsParser.TryRun(RunBehavior runBehavior, SqlCommand cmdHandler, SqlDataReader dataStream, BulkCopySimpleResultSet bulkCopyHandler, TdsParserStateObject stateObj, Boolean& dataReady)\r\n   at Microsoft.Data.SqlClient.SqlDataReader.TryHasMoreRows(Boolean& moreRows)\r\n   at Microsoft.Data.SqlClient.SqlDataReader.TryReadInternal(Boolean setTimeout, Boolean& more)\r\n   at Microsoft.Data.SqlClient.SqlDataReader.ReadAsyncExecute(Task task, Object state)\r\n   at Microsoft.Data.SqlClient.SqlDataReader.InvokeAsyncCall[T](SqlDataReaderBaseAsyncCallContext`1 context)\r\n--- End of stack trace from previous location ---\r\n   at Microsoft.EntityFrameworkCore.Update.AffectedCountModificationCommandBatch.ConsumeResultSetAsync(Int32 startCommandIndex, RelationalDataReader reader, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.Update.AffectedCountModificationCommandBatch.ConsumeAsync(RelationalDataReader reader, CancellationToken cancellationToken)\r\nClientConnectionId:19e89848-b104-4de2-8e1b-62c6f626d5b8\r\nError Number:547,State:0,Class:16\r\n   --- End of inner exception stack trace ---\r\n   at Microsoft.EntityFrameworkCore.Update.AffectedCountModificationCommandBatch.ConsumeAsync(RelationalDataReader reader, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.SqlServer.Update.Internal.SqlServerModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(IList`1 entriesToSave, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(StateManager stateManager, Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.DbContext.SaveChangesAsync(Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)","@tr":"fa635b9bc3c5466da5c085a94c8ad297","@sp":"36889c5e287e85ae","contextType":"JustCare_MB.Data.JustCareContext","newline":"\r\n","error":"Microsoft.EntityFrameworkCore.DbUpdateException: An error occurred while saving the entity changes. See the inner exception for details.\r\n ---> Microsoft.Data.SqlClient.SqlException (0x80131904): The INSERT statement conflicted with the FOREIGN KEY constraint \"FK_User_Gender_GenderId\". The conflict occurred in database \"JustCare10\", table \"dbo.Gender\", column 'Id'.\r\n   at Microsoft.Data.SqlClient.SqlConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)\r\n   at Microsoft.Data.SqlClient.SqlInternalConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)\r\n   at Microsoft.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)\r\n   at Microsoft.Data.SqlClient.TdsParser.TryRun(RunBehavior runBehavior, SqlCommand cmdHandler, SqlDataReader dataStream, BulkCopySimpleResultSet bulkCopyHandler, TdsParserStateObject stateObj, Boolean& dataReady)\r\n   at Microsoft.Data.SqlClient.SqlDataReader.TryHasMoreRows(Boolean& moreRows)\r\n   at Microsoft.Data.SqlClient.SqlDataReader.TryReadInternal(Boolean setTimeout, Boolean& more)\r\n   at Microsoft.Data.SqlClient.SqlDataReader.ReadAsyncExecute(Task task, Object state)\r\n   at Microsoft.Data.SqlClient.SqlDataReader.InvokeAsyncCall[T](SqlDataReaderBaseAsyncCallContext`1 context)\r\n--- End of stack trace from previous location ---\r\n   at Microsoft.EntityFrameworkCore.Update.AffectedCountModificationCommandBatch.ConsumeResultSetAsync(Int32 startCommandIndex, RelationalDataReader reader, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.Update.AffectedCountModificationCommandBatch.ConsumeAsync(RelationalDataReader reader, CancellationToken cancellationToken)\r\nClientConnectionId:19e89848-b104-4de2-8e1b-62c6f626d5b8\r\nError Number:547,State:0,Class:16\r\n   --- End of inner exception stack trace ---\r\n   at Microsoft.EntityFrameworkCore.Update.AffectedCountModificationCommandBatch.ConsumeAsync(RelationalDataReader reader, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.SqlServer.Update.Internal.SqlServerModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(IList`1 entriesToSave, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(StateManager stateManager, Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.DbContext.SaveChangesAsync(Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)","EventId":{"Id":10000,"Name":"Microsoft.EntityFrameworkCore.Update.SaveChangesFailed"},"SourceContext":"Microsoft.EntityFrameworkCore.Update","ActionId":"80d1c0e9-f232-4292-b917-0d0725048614","ActionName":"JustCareAPI.Controllers.UserController.Register (JustCareAPI)","RequestId":"80000038-0009-ff00-b63f-84710c7967bb","RequestPath":"/UserAPI/Register"}
{"@t":"2024-01-16T06:05:50.3275915Z","@mt":"An error occurred while saving the entity changes. See the inner exception for details.","@l":"Error","@x":"Microsoft.EntityFrameworkCore.DbUpdateException: An error occurred while saving the entity changes. See the inner exception for details.\r\n ---> Microsoft.Data.SqlClient.SqlException (0x80131904): The INSERT statement conflicted with the FOREIGN KEY constraint \"FK_User_Gender_GenderId\". The conflict occurred in database \"JustCare10\", table \"dbo.Gender\", column 'Id'.\r\n   at Microsoft.Data.SqlClient.SqlConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)\r\n   at Microsoft.Data.SqlClient.SqlInternalConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)\r\n   at Microsoft.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)\r\n   at Microsoft.Data.SqlClient.TdsParser.TryRun(RunBehavior runBehavior, SqlCommand cmdHandler, SqlDataReader dataStream, BulkCopySimpleResultSet bulkCopyHandler, TdsParserStateObject stateObj, Boolean& dataReady)\r\n   at Microsoft.Data.SqlClient.SqlDataReader.TryHasMoreRows(Boolean& moreRows)\r\n   at Microsoft.Data.SqlClient.SqlDataReader.TryReadInternal(Boolean setTimeout, Boolean& more)\r\n   at Microsoft.Data.SqlClient.SqlDataReader.ReadAsyncExecute(Task task, Object state)\r\n   at Microsoft.Data.SqlClient.SqlDataReader.InvokeAsyncCall[T](SqlDataReaderBaseAsyncCallContext`1 context)\r\n--- End of stack trace from previous location ---\r\n   at Microsoft.EntityFrameworkCore.Update.AffectedCountModificationCommandBatch.ConsumeResultSetAsync(Int32 startCommandIndex, RelationalDataReader reader, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.Update.AffectedCountModificationCommandBatch.ConsumeAsync(RelationalDataReader reader, CancellationToken cancellationToken)\r\nClientConnectionId:19e89848-b104-4de2-8e1b-62c6f626d5b8\r\nError Number:547,State:0,Class:16\r\n   --- End of inner exception stack trace ---\r\n   at Microsoft.EntityFrameworkCore.Update.AffectedCountModificationCommandBatch.ConsumeAsync(RelationalDataReader reader, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.SqlServer.Update.Internal.SqlServerModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(IList`1 entriesToSave, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(StateManager stateManager, Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.DbContext.SaveChangesAsync(Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.DbContext.SaveChangesAsync(Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)\r\n   at JustCare_MB.Services.UsersService.Register(UserRegisterDto userRegisterDto) in C:\\Users\\Smail_-\\Desktop\\JustCare\\JustCare_MB\\Services\\UsersService.cs:line 149\r\n   at JustCareAPI.Controllers.UserController.Register(UserRegisterDto userRegisterDto) in C:\\Users\\Smail_-\\Desktop\\JustCare\\JustCareAPI\\Controllers\\UserController.cs:line 47\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(ActionContext actionContext, IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Awaited|17_0(ResourceInvoker invoker, Task task, IDisposable scope)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Awaited|17_0(ResourceInvoker invoker, Task task, IDisposable scope)\r\n   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)\r\n   at JustCare_MB.Middlewares.GlobalExceptionHandlingMiddleware.InvokeAsync(HttpContext context, RequestDelegate next) in C:\\Users\\Smail_-\\Desktop\\JustCare\\JustCare_MB\\Middlewares\\GlobalExceptionHandlingMiddleware.cs:line 31","@tr":"fa635b9bc3c5466da5c085a94c8ad297","@sp":"36889c5e287e85ae","SourceContext":"JustCare_MB.Middlewares.GlobalExceptionHandlingMiddleware","ActionId":"80d1c0e9-f232-4292-b917-0d0725048614","ActionName":"JustCareAPI.Controllers.UserController.Register (JustCareAPI)","RequestId":"80000038-0009-ff00-b63f-84710c7967bb","RequestPath":"/UserAPI/Register"}
{"@t":"2024-01-16T06:05:50.3303017Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["8116.6212"],"@tr":"fa635b9bc3c5466da5c085a94c8ad297","@sp":"36889c5e287e85ae","RequestMethod":"POST","RequestPath":"/UserAPI/Register","StatusCode":400,"Elapsed":8116.6212,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"80000038-0009-ff00-b63f-84710c7967bb"}
{"@t":"2024-01-16T06:06:18.5132640Z","@mt":"An exception occurred in the database while saving changes for context type '{contextType}'.{newline}{error}","@l":"Error","@x":"Microsoft.EntityFrameworkCore.DbUpdateException: An error occurred while saving the entity changes. See the inner exception for details.\r\n ---> Microsoft.Data.SqlClient.SqlException (0x80131904): The INSERT statement conflicted with the FOREIGN KEY constraint \"FK_User_Gender_GenderId\". The conflict occurred in database \"JustCare10\", table \"dbo.Gender\", column 'Id'.\r\n   at Microsoft.Data.SqlClient.SqlConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)\r\n   at Microsoft.Data.SqlClient.SqlInternalConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)\r\n   at Microsoft.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)\r\n   at Microsoft.Data.SqlClient.TdsParser.TryRun(RunBehavior runBehavior, SqlCommand cmdHandler, SqlDataReader dataStream, BulkCopySimpleResultSet bulkCopyHandler, TdsParserStateObject stateObj, Boolean& dataReady)\r\n   at Microsoft.Data.SqlClient.SqlDataReader.TryHasMoreRows(Boolean& moreRows)\r\n   at Microsoft.Data.SqlClient.SqlDataReader.TryReadInternal(Boolean setTimeout, Boolean& more)\r\n   at Microsoft.Data.SqlClient.SqlDataReader.ReadAsyncExecute(Task task, Object state)\r\n   at Microsoft.Data.SqlClient.SqlDataReader.InvokeAsyncCall[T](SqlDataReaderBaseAsyncCallContext`1 context)\r\n--- End of stack trace from previous location ---\r\n   at Microsoft.EntityFrameworkCore.Update.AffectedCountModificationCommandBatch.ConsumeResultSetAsync(Int32 startCommandIndex, RelationalDataReader reader, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.Update.AffectedCountModificationCommandBatch.ConsumeAsync(RelationalDataReader reader, CancellationToken cancellationToken)\r\nClientConnectionId:19e89848-b104-4de2-8e1b-62c6f626d5b8\r\nError Number:547,State:0,Class:16\r\n   --- End of inner exception stack trace ---\r\n   at Microsoft.EntityFrameworkCore.Update.AffectedCountModificationCommandBatch.ConsumeAsync(RelationalDataReader reader, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.SqlServer.Update.Internal.SqlServerModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(IList`1 entriesToSave, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(StateManager stateManager, Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.DbContext.SaveChangesAsync(Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)","@tr":"f01ac8bb0908b09561d01419f4d2c9e1","@sp":"bbb931c4812b5071","contextType":"JustCare_MB.Data.JustCareContext","newline":"\r\n","error":"Microsoft.EntityFrameworkCore.DbUpdateException: An error occurred while saving the entity changes. See the inner exception for details.\r\n ---> Microsoft.Data.SqlClient.SqlException (0x80131904): The INSERT statement conflicted with the FOREIGN KEY constraint \"FK_User_Gender_GenderId\". The conflict occurred in database \"JustCare10\", table \"dbo.Gender\", column 'Id'.\r\n   at Microsoft.Data.SqlClient.SqlConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)\r\n   at Microsoft.Data.SqlClient.SqlInternalConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)\r\n   at Microsoft.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)\r\n   at Microsoft.Data.SqlClient.TdsParser.TryRun(RunBehavior runBehavior, SqlCommand cmdHandler, SqlDataReader dataStream, BulkCopySimpleResultSet bulkCopyHandler, TdsParserStateObject stateObj, Boolean& dataReady)\r\n   at Microsoft.Data.SqlClient.SqlDataReader.TryHasMoreRows(Boolean& moreRows)\r\n   at Microsoft.Data.SqlClient.SqlDataReader.TryReadInternal(Boolean setTimeout, Boolean& more)\r\n   at Microsoft.Data.SqlClient.SqlDataReader.ReadAsyncExecute(Task task, Object state)\r\n   at Microsoft.Data.SqlClient.SqlDataReader.InvokeAsyncCall[T](SqlDataReaderBaseAsyncCallContext`1 context)\r\n--- End of stack trace from previous location ---\r\n   at Microsoft.EntityFrameworkCore.Update.AffectedCountModificationCommandBatch.ConsumeResultSetAsync(Int32 startCommandIndex, RelationalDataReader reader, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.Update.AffectedCountModificationCommandBatch.ConsumeAsync(RelationalDataReader reader, CancellationToken cancellationToken)\r\nClientConnectionId:19e89848-b104-4de2-8e1b-62c6f626d5b8\r\nError Number:547,State:0,Class:16\r\n   --- End of inner exception stack trace ---\r\n   at Microsoft.EntityFrameworkCore.Update.AffectedCountModificationCommandBatch.ConsumeAsync(RelationalDataReader reader, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.SqlServer.Update.Internal.SqlServerModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(IList`1 entriesToSave, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(StateManager stateManager, Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.DbContext.SaveChangesAsync(Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)","EventId":{"Id":10000,"Name":"Microsoft.EntityFrameworkCore.Update.SaveChangesFailed"},"SourceContext":"Microsoft.EntityFrameworkCore.Update","ActionId":"80d1c0e9-f232-4292-b917-0d0725048614","ActionName":"JustCareAPI.Controllers.UserController.Register (JustCareAPI)","RequestId":"80000015-000a-fe00-b63f-84710c7967bb","RequestPath":"/UserAPI/Register"}
{"@t":"2024-01-16T06:06:23.8696655Z","@mt":"An error occurred while saving the entity changes. See the inner exception for details.","@l":"Error","@x":"Microsoft.EntityFrameworkCore.DbUpdateException: An error occurred while saving the entity changes. See the inner exception for details.\r\n ---> Microsoft.Data.SqlClient.SqlException (0x80131904): The INSERT statement conflicted with the FOREIGN KEY constraint \"FK_User_Gender_GenderId\". The conflict occurred in database \"JustCare10\", table \"dbo.Gender\", column 'Id'.\r\n   at Microsoft.Data.SqlClient.SqlConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)\r\n   at Microsoft.Data.SqlClient.SqlInternalConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)\r\n   at Microsoft.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)\r\n   at Microsoft.Data.SqlClient.TdsParser.TryRun(RunBehavior runBehavior, SqlCommand cmdHandler, SqlDataReader dataStream, BulkCopySimpleResultSet bulkCopyHandler, TdsParserStateObject stateObj, Boolean& dataReady)\r\n   at Microsoft.Data.SqlClient.SqlDataReader.TryHasMoreRows(Boolean& moreRows)\r\n   at Microsoft.Data.SqlClient.SqlDataReader.TryReadInternal(Boolean setTimeout, Boolean& more)\r\n   at Microsoft.Data.SqlClient.SqlDataReader.ReadAsyncExecute(Task task, Object state)\r\n   at Microsoft.Data.SqlClient.SqlDataReader.InvokeAsyncCall[T](SqlDataReaderBaseAsyncCallContext`1 context)\r\n--- End of stack trace from previous location ---\r\n   at Microsoft.EntityFrameworkCore.Update.AffectedCountModificationCommandBatch.ConsumeResultSetAsync(Int32 startCommandIndex, RelationalDataReader reader, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.Update.AffectedCountModificationCommandBatch.ConsumeAsync(RelationalDataReader reader, CancellationToken cancellationToken)\r\nClientConnectionId:19e89848-b104-4de2-8e1b-62c6f626d5b8\r\nError Number:547,State:0,Class:16\r\n   --- End of inner exception stack trace ---\r\n   at Microsoft.EntityFrameworkCore.Update.AffectedCountModificationCommandBatch.ConsumeAsync(RelationalDataReader reader, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.SqlServer.Update.Internal.SqlServerModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(IList`1 entriesToSave, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(StateManager stateManager, Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.DbContext.SaveChangesAsync(Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.DbContext.SaveChangesAsync(Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)\r\n   at JustCare_MB.Services.UsersService.Register(UserRegisterDto userRegisterDto) in C:\\Users\\Smail_-\\Desktop\\JustCare\\JustCare_MB\\Services\\UsersService.cs:line 149\r\n   at JustCareAPI.Controllers.UserController.Register(UserRegisterDto userRegisterDto) in C:\\Users\\Smail_-\\Desktop\\JustCare\\JustCareAPI\\Controllers\\UserController.cs:line 47\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(ActionContext actionContext, IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Awaited|17_0(ResourceInvoker invoker, Task task, IDisposable scope)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Awaited|17_0(ResourceInvoker invoker, Task task, IDisposable scope)\r\n   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)\r\n   at JustCare_MB.Middlewares.GlobalExceptionHandlingMiddleware.InvokeAsync(HttpContext context, RequestDelegate next) in C:\\Users\\Smail_-\\Desktop\\JustCare\\JustCare_MB\\Middlewares\\GlobalExceptionHandlingMiddleware.cs:line 31","@tr":"f01ac8bb0908b09561d01419f4d2c9e1","@sp":"bbb931c4812b5071","SourceContext":"JustCare_MB.Middlewares.GlobalExceptionHandlingMiddleware","ActionId":"80d1c0e9-f232-4292-b917-0d0725048614","ActionName":"JustCareAPI.Controllers.UserController.Register (JustCareAPI)","RequestId":"80000015-000a-fe00-b63f-84710c7967bb","RequestPath":"/UserAPI/Register"}
{"@t":"2024-01-16T06:08:22.9123286Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["126452.6003"],"@tr":"f01ac8bb0908b09561d01419f4d2c9e1","@sp":"bbb931c4812b5071","RequestMethod":"POST","RequestPath":"/UserAPI/Register","StatusCode":400,"Elapsed":126452.6003,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"80000015-000a-fe00-b63f-84710c7967bb"}
{"@t":"2024-01-16T06:08:26.5690994Z","@mt":"An exception occurred in the database while saving changes for context type '{contextType}'.{newline}{error}","@l":"Error","@x":"Microsoft.EntityFrameworkCore.DbUpdateException: An error occurred while saving the entity changes. See the inner exception for details.\r\n ---> Microsoft.Data.SqlClient.SqlException (0x80131904): The INSERT statement conflicted with the FOREIGN KEY constraint \"FK_User_Gender_GenderId\". The conflict occurred in database \"JustCare10\", table \"dbo.Gender\", column 'Id'.\r\n   at Microsoft.Data.SqlClient.SqlConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)\r\n   at Microsoft.Data.SqlClient.SqlInternalConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)\r\n   at Microsoft.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)\r\n   at Microsoft.Data.SqlClient.TdsParser.TryRun(RunBehavior runBehavior, SqlCommand cmdHandler, SqlDataReader dataStream, BulkCopySimpleResultSet bulkCopyHandler, TdsParserStateObject stateObj, Boolean& dataReady)\r\n   at Microsoft.Data.SqlClient.SqlDataReader.TryHasMoreRows(Boolean& moreRows)\r\n   at Microsoft.Data.SqlClient.SqlDataReader.TryReadInternal(Boolean setTimeout, Boolean& more)\r\n   at Microsoft.Data.SqlClient.SqlDataReader.ReadAsyncExecute(Task task, Object state)\r\n   at Microsoft.Data.SqlClient.SqlDataReader.InvokeAsyncCall[T](SqlDataReaderBaseAsyncCallContext`1 context)\r\n--- End of stack trace from previous location ---\r\n   at Microsoft.EntityFrameworkCore.Update.AffectedCountModificationCommandBatch.ConsumeResultSetAsync(Int32 startCommandIndex, RelationalDataReader reader, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.Update.AffectedCountModificationCommandBatch.ConsumeAsync(RelationalDataReader reader, CancellationToken cancellationToken)\r\nClientConnectionId:19e89848-b104-4de2-8e1b-62c6f626d5b8\r\nError Number:547,State:0,Class:16\r\n   --- End of inner exception stack trace ---\r\n   at Microsoft.EntityFrameworkCore.Update.AffectedCountModificationCommandBatch.ConsumeAsync(RelationalDataReader reader, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.SqlServer.Update.Internal.SqlServerModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(IList`1 entriesToSave, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(StateManager stateManager, Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.DbContext.SaveChangesAsync(Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)","@tr":"4465b522dde7a3ef5fc21c748a72e854","@sp":"d40c594094404c8c","contextType":"JustCare_MB.Data.JustCareContext","newline":"\r\n","error":"Microsoft.EntityFrameworkCore.DbUpdateException: An error occurred while saving the entity changes. See the inner exception for details.\r\n ---> Microsoft.Data.SqlClient.SqlException (0x80131904): The INSERT statement conflicted with the FOREIGN KEY constraint \"FK_User_Gender_GenderId\". The conflict occurred in database \"JustCare10\", table \"dbo.Gender\", column 'Id'.\r\n   at Microsoft.Data.SqlClient.SqlConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)\r\n   at Microsoft.Data.SqlClient.SqlInternalConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)\r\n   at Microsoft.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)\r\n   at Microsoft.Data.SqlClient.TdsParser.TryRun(RunBehavior runBehavior, SqlCommand cmdHandler, SqlDataReader dataStream, BulkCopySimpleResultSet bulkCopyHandler, TdsParserStateObject stateObj, Boolean& dataReady)\r\n   at Microsoft.Data.SqlClient.SqlDataReader.TryHasMoreRows(Boolean& moreRows)\r\n   at Microsoft.Data.SqlClient.SqlDataReader.TryReadInternal(Boolean setTimeout, Boolean& more)\r\n   at Microsoft.Data.SqlClient.SqlDataReader.ReadAsyncExecute(Task task, Object state)\r\n   at Microsoft.Data.SqlClient.SqlDataReader.InvokeAsyncCall[T](SqlDataReaderBaseAsyncCallContext`1 context)\r\n--- End of stack trace from previous location ---\r\n   at Microsoft.EntityFrameworkCore.Update.AffectedCountModificationCommandBatch.ConsumeResultSetAsync(Int32 startCommandIndex, RelationalDataReader reader, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.Update.AffectedCountModificationCommandBatch.ConsumeAsync(RelationalDataReader reader, CancellationToken cancellationToken)\r\nClientConnectionId:19e89848-b104-4de2-8e1b-62c6f626d5b8\r\nError Number:547,State:0,Class:16\r\n   --- End of inner exception stack trace ---\r\n   at Microsoft.EntityFrameworkCore.Update.AffectedCountModificationCommandBatch.ConsumeAsync(RelationalDataReader reader, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.SqlServer.Update.Internal.SqlServerModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(IList`1 entriesToSave, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(StateManager stateManager, Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.DbContext.SaveChangesAsync(Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)","EventId":{"Id":10000,"Name":"Microsoft.EntityFrameworkCore.Update.SaveChangesFailed"},"SourceContext":"Microsoft.EntityFrameworkCore.Update","ActionId":"80d1c0e9-f232-4292-b917-0d0725048614","ActionName":"JustCareAPI.Controllers.UserController.Register (JustCareAPI)","RequestId":"80000015-000d-fd00-b63f-84710c7967bb","RequestPath":"/UserAPI/Register"}
{"@t":"2024-01-16T06:12:39.4480384Z","@mt":"An error occurred while saving the entity changes. See the inner exception for details.","@l":"Error","@x":"Microsoft.EntityFrameworkCore.DbUpdateException: An error occurred while saving the entity changes. See the inner exception for details.\r\n ---> Microsoft.Data.SqlClient.SqlException (0x80131904): The INSERT statement conflicted with the FOREIGN KEY constraint \"FK_User_Gender_GenderId\". The conflict occurred in database \"JustCare10\", table \"dbo.Gender\", column 'Id'.\r\n   at Microsoft.Data.SqlClient.SqlConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)\r\n   at Microsoft.Data.SqlClient.SqlInternalConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)\r\n   at Microsoft.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)\r\n   at Microsoft.Data.SqlClient.TdsParser.TryRun(RunBehavior runBehavior, SqlCommand cmdHandler, SqlDataReader dataStream, BulkCopySimpleResultSet bulkCopyHandler, TdsParserStateObject stateObj, Boolean& dataReady)\r\n   at Microsoft.Data.SqlClient.SqlDataReader.TryHasMoreRows(Boolean& moreRows)\r\n   at Microsoft.Data.SqlClient.SqlDataReader.TryReadInternal(Boolean setTimeout, Boolean& more)\r\n   at Microsoft.Data.SqlClient.SqlDataReader.ReadAsyncExecute(Task task, Object state)\r\n   at Microsoft.Data.SqlClient.SqlDataReader.InvokeAsyncCall[T](SqlDataReaderBaseAsyncCallContext`1 context)\r\n--- End of stack trace from previous location ---\r\n   at Microsoft.EntityFrameworkCore.Update.AffectedCountModificationCommandBatch.ConsumeResultSetAsync(Int32 startCommandIndex, RelationalDataReader reader, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.Update.AffectedCountModificationCommandBatch.ConsumeAsync(RelationalDataReader reader, CancellationToken cancellationToken)\r\nClientConnectionId:19e89848-b104-4de2-8e1b-62c6f626d5b8\r\nError Number:547,State:0,Class:16\r\n   --- End of inner exception stack trace ---\r\n   at Microsoft.EntityFrameworkCore.Update.AffectedCountModificationCommandBatch.ConsumeAsync(RelationalDataReader reader, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.SqlServer.Update.Internal.SqlServerModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(IList`1 entriesToSave, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(StateManager stateManager, Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.DbContext.SaveChangesAsync(Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.DbContext.SaveChangesAsync(Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)\r\n   at JustCare_MB.Services.UsersService.Register(UserRegisterDto userRegisterDto) in C:\\Users\\Smail_-\\Desktop\\JustCare\\JustCare_MB\\Services\\UsersService.cs:line 149\r\n   at JustCareAPI.Controllers.UserController.Register(UserRegisterDto userRegisterDto) in C:\\Users\\Smail_-\\Desktop\\JustCare\\JustCareAPI\\Controllers\\UserController.cs:line 47\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(ActionContext actionContext, IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Awaited|17_0(ResourceInvoker invoker, Task task, IDisposable scope)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Awaited|17_0(ResourceInvoker invoker, Task task, IDisposable scope)\r\n   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)\r\n   at JustCare_MB.Middlewares.GlobalExceptionHandlingMiddleware.InvokeAsync(HttpContext context, RequestDelegate next) in C:\\Users\\Smail_-\\Desktop\\JustCare\\JustCare_MB\\Middlewares\\GlobalExceptionHandlingMiddleware.cs:line 31","@tr":"4465b522dde7a3ef5fc21c748a72e854","@sp":"d40c594094404c8c","SourceContext":"JustCare_MB.Middlewares.GlobalExceptionHandlingMiddleware","ActionId":"80d1c0e9-f232-4292-b917-0d0725048614","ActionName":"JustCareAPI.Controllers.UserController.Register (JustCareAPI)","RequestId":"80000015-000d-fd00-b63f-84710c7967bb","RequestPath":"/UserAPI/Register"}
{"@t":"2024-01-16T06:12:43.1278089Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["258035.7764"],"@tr":"4465b522dde7a3ef5fc21c748a72e854","@sp":"d40c594094404c8c","RequestMethod":"POST","RequestPath":"/UserAPI/Register","StatusCode":400,"Elapsed":258035.7764,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"80000015-000d-fd00-b63f-84710c7967bb"}
{"@t":"2024-01-16T06:12:52.4651674Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["7046.0976"],"@tr":"38a4ba799615258a316c5e0a1708aefa","@sp":"ee406f9da02dd28f","RequestMethod":"POST","RequestPath":"/UserAPI/Register","StatusCode":200,"Elapsed":7046.0976,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"80000027-0000-fd00-b63f-84710c7967bb"}
{"@t":"2024-01-16T06:13:34.5027129Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["5203.7084"],"@tr":"d87520ef64ca30f0c03c59a0f79c51e3","@sp":"94e1e228ee89aca0","RequestMethod":"POST","RequestPath":"/UserAPI/Login","StatusCode":200,"Elapsed":5203.7084,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"8000002f-000d-fe00-b63f-84710c7967bb"}
{"@t":"2024-01-16T06:16:05.5822663Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["47.4484"],"@tr":"5d32c7bb9f895d7a87615143d9930a7b","@sp":"e337b4088cd89318","RequestMethod":"POST","RequestPath":"/UserAPI/Register","StatusCode":400,"Elapsed":47.4484,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"80000038-000b-fe00-b63f-84710c7967bb"}
{"@t":"2024-01-16T06:16:21.4912297Z","@mt":"Create Appointment: {\"Date\":\"2024-01-16T00:00:00\",\"CategoryId\":0,\"CategoryName\":\"string\"}","@tr":"883a2b2f3acf9d73a1eab08721425df0","@sp":"f80d8f7a44e2ba6a","SourceContext":"JustCare_MB.Services.AppointmentService","ActionId":"5ceb7e2f-8edf-495f-9635-a8e4234966f8","ActionName":"JustCareAPI.Controllers.AppointmentController.CreateAppointment (JustCareAPI)","RequestId":"8000006e-000a-ff00-b63f-84710c7967bb","RequestPath":"/AppointmentAPI/Create%20appointment"}
{"@t":"2024-01-16T06:16:21.5615518Z","@mt":"The appointment must be at least 12 hours away","@l":"Error","@x":"JustCare_MB.Helpers.TimeNotValid: The appointment must be at least 12 hours away\r\n   at JustCare_MB.Services.AppointmentService.CreateAppointment(CreateAppointmentDto appointmentDto) in C:\\Users\\Smail_-\\Desktop\\JustCare\\JustCare_MB\\Services\\AppointmentService.cs:line 52\r\n   at JustCareAPI.Controllers.AppointmentController.CreateAppointment(CreateAppointmentDto appointmentDto) in C:\\Users\\Smail_-\\Desktop\\JustCare\\JustCareAPI\\Controllers\\AppointmentController.cs:line 29\r\n   at lambda_method168(Closure, Object)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfActionResultExecutor.Execute(ActionContext actionContext, IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Awaited|17_0(ResourceInvoker invoker, Task task, IDisposable scope)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Awaited|17_0(ResourceInvoker invoker, Task task, IDisposable scope)\r\n   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)\r\n   at JustCare_MB.Middlewares.GlobalExceptionHandlingMiddleware.InvokeAsync(HttpContext context, RequestDelegate next) in C:\\Users\\Smail_-\\Desktop\\JustCare\\JustCare_MB\\Middlewares\\GlobalExceptionHandlingMiddleware.cs:line 31","@tr":"883a2b2f3acf9d73a1eab08721425df0","@sp":"f80d8f7a44e2ba6a","SourceContext":"JustCare_MB.Middlewares.GlobalExceptionHandlingMiddleware","ActionId":"5ceb7e2f-8edf-495f-9635-a8e4234966f8","ActionName":"JustCareAPI.Controllers.AppointmentController.CreateAppointment (JustCareAPI)","RequestId":"8000006e-000a-ff00-b63f-84710c7967bb","RequestPath":"/AppointmentAPI/Create%20appointment"}
{"@t":"2024-01-16T06:16:21.5633243Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["3225.7885"],"@tr":"883a2b2f3acf9d73a1eab08721425df0","@sp":"f80d8f7a44e2ba6a","RequestMethod":"POST","RequestPath":"/AppointmentAPI/Create appointment","StatusCode":400,"Elapsed":3225.7885,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"8000006e-000a-ff00-b63f-84710c7967bb"}
{"@t":"2024-01-16T06:16:36.3634963Z","@mt":"Create Appointment: {\"Date\":\"2024-01-17T00:00:00\",\"CategoryId\":0,\"CategoryName\":\"string\"}","@tr":"0784a21b5a0ff963a7cffbe5511cc87a","@sp":"e399c0e6eb89d40b","SourceContext":"JustCare_MB.Services.AppointmentService","ActionId":"5ceb7e2f-8edf-495f-9635-a8e4234966f8","ActionName":"JustCareAPI.Controllers.AppointmentController.CreateAppointment (JustCareAPI)","RequestId":"8000003b-000e-ff00-b63f-84710c7967bb","RequestPath":"/AppointmentAPI/Create%20appointment"}
{"@t":"2024-01-16T06:16:36.4179787Z","@mt":"An exception occurred in the database while saving changes for context type '{contextType}'.{newline}{error}","@l":"Error","@x":"Microsoft.EntityFrameworkCore.DbUpdateException: An error occurred while saving the entity changes. See the inner exception for details.\r\n ---> Microsoft.Data.SqlClient.SqlException (0x80131904): Cannot insert the value NULL into column 'DentistDescription', table 'JustCare10.dbo.Appointment'; column does not allow nulls. INSERT fails.\r\n   at Microsoft.Data.SqlClient.SqlConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)\r\n   at Microsoft.Data.SqlClient.SqlInternalConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)\r\n   at Microsoft.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)\r\n   at Microsoft.Data.SqlClient.TdsParser.TryRun(RunBehavior runBehavior, SqlCommand cmdHandler, SqlDataReader dataStream, BulkCopySimpleResultSet bulkCopyHandler, TdsParserStateObject stateObj, Boolean& dataReady)\r\n   at Microsoft.Data.SqlClient.SqlDataReader.TryHasMoreRows(Boolean& moreRows)\r\n   at Microsoft.Data.SqlClient.SqlDataReader.TryReadInternal(Boolean setTimeout, Boolean& more)\r\n   at Microsoft.Data.SqlClient.SqlDataReader.Read()\r\n   at Microsoft.EntityFrameworkCore.Storage.RelationalDataReader.Read()\r\n   at Microsoft.EntityFrameworkCore.Update.AffectedCountModificationCommandBatch.ConsumeResultSet(Int32 startCommandIndex, RelationalDataReader reader)\r\n   at Microsoft.EntityFrameworkCore.Update.AffectedCountModificationCommandBatch.Consume(RelationalDataReader reader)\r\nClientConnectionId:19e89848-b104-4de2-8e1b-62c6f626d5b8\r\nError Number:515,State:2,Class:16\r\n   --- End of inner exception stack trace ---\r\n   at Microsoft.EntityFrameworkCore.Update.AffectedCountModificationCommandBatch.Consume(RelationalDataReader reader)\r\n   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.Execute(IRelationalConnection connection)\r\n   at Microsoft.EntityFrameworkCore.SqlServer.Update.Internal.SqlServerModificationCommandBatch.Execute(IRelationalConnection connection)\r\n   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.Execute(IEnumerable`1 commandBatches, IRelationalConnection connection)\r\n   at Microsoft.EntityFrameworkCore.Storage.RelationalDatabase.SaveChanges(IList`1 entries)\r\n   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChanges(IList`1 entriesToSave)\r\n   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChanges(StateManager stateManager, Boolean acceptAllChangesOnSuccess)\r\n   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.<>c.<SaveChanges>b__107_0(DbContext _, ValueTuple`2 t)\r\n   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.Execute[TState,TResult](TState state, Func`3 operation, Func`3 verifySucceeded)\r\n   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChanges(Boolean acceptAllChangesOnSuccess)\r\n   at Microsoft.EntityFrameworkCore.DbContext.SaveChanges(Boolean acceptAllChangesOnSuccess)","@tr":"0784a21b5a0ff963a7cffbe5511cc87a","@sp":"e399c0e6eb89d40b","contextType":"JustCare_MB.Data.JustCareContext","newline":"\r\n","error":"Microsoft.EntityFrameworkCore.DbUpdateException: An error occurred while saving the entity changes. See the inner exception for details.\r\n ---> Microsoft.Data.SqlClient.SqlException (0x80131904): Cannot insert the value NULL into column 'DentistDescription', table 'JustCare10.dbo.Appointment'; column does not allow nulls. INSERT fails.\r\n   at Microsoft.Data.SqlClient.SqlConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)\r\n   at Microsoft.Data.SqlClient.SqlInternalConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)\r\n   at Microsoft.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)\r\n   at Microsoft.Data.SqlClient.TdsParser.TryRun(RunBehavior runBehavior, SqlCommand cmdHandler, SqlDataReader dataStream, BulkCopySimpleResultSet bulkCopyHandler, TdsParserStateObject stateObj, Boolean& dataReady)\r\n   at Microsoft.Data.SqlClient.SqlDataReader.TryHasMoreRows(Boolean& moreRows)\r\n   at Microsoft.Data.SqlClient.SqlDataReader.TryReadInternal(Boolean setTimeout, Boolean& more)\r\n   at Microsoft.Data.SqlClient.SqlDataReader.Read()\r\n   at Microsoft.EntityFrameworkCore.Storage.RelationalDataReader.Read()\r\n   at Microsoft.EntityFrameworkCore.Update.AffectedCountModificationCommandBatch.ConsumeResultSet(Int32 startCommandIndex, RelationalDataReader reader)\r\n   at Microsoft.EntityFrameworkCore.Update.AffectedCountModificationCommandBatch.Consume(RelationalDataReader reader)\r\nClientConnectionId:19e89848-b104-4de2-8e1b-62c6f626d5b8\r\nError Number:515,State:2,Class:16\r\n   --- End of inner exception stack trace ---\r\n   at Microsoft.EntityFrameworkCore.Update.AffectedCountModificationCommandBatch.Consume(RelationalDataReader reader)\r\n   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.Execute(IRelationalConnection connection)\r\n   at Microsoft.EntityFrameworkCore.SqlServer.Update.Internal.SqlServerModificationCommandBatch.Execute(IRelationalConnection connection)\r\n   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.Execute(IEnumerable`1 commandBatches, IRelationalConnection connection)\r\n   at Microsoft.EntityFrameworkCore.Storage.RelationalDatabase.SaveChanges(IList`1 entries)\r\n   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChanges(IList`1 entriesToSave)\r\n   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChanges(StateManager stateManager, Boolean acceptAllChangesOnSuccess)\r\n   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.<>c.<SaveChanges>b__107_0(DbContext _, ValueTuple`2 t)\r\n   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.Execute[TState,TResult](TState state, Func`3 operation, Func`3 verifySucceeded)\r\n   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChanges(Boolean acceptAllChangesOnSuccess)\r\n   at Microsoft.EntityFrameworkCore.DbContext.SaveChanges(Boolean acceptAllChangesOnSuccess)","EventId":{"Id":10000,"Name":"Microsoft.EntityFrameworkCore.Update.SaveChangesFailed"},"SourceContext":"Microsoft.EntityFrameworkCore.Update","ActionId":"5ceb7e2f-8edf-495f-9635-a8e4234966f8","ActionName":"JustCareAPI.Controllers.AppointmentController.CreateAppointment (JustCareAPI)","RequestId":"8000003b-000e-ff00-b63f-84710c7967bb","RequestPath":"/AppointmentAPI/Create%20appointment"}
{"@t":"2024-01-16T06:16:43.9745487Z","@mt":"An error occurred while saving the entity changes. See the inner exception for details.","@l":"Error","@x":"Microsoft.EntityFrameworkCore.DbUpdateException: An error occurred while saving the entity changes. See the inner exception for details.\r\n ---> Microsoft.Data.SqlClient.SqlException (0x80131904): Cannot insert the value NULL into column 'DentistDescription', table 'JustCare10.dbo.Appointment'; column does not allow nulls. INSERT fails.\r\n   at Microsoft.Data.SqlClient.SqlConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)\r\n   at Microsoft.Data.SqlClient.SqlInternalConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)\r\n   at Microsoft.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)\r\n   at Microsoft.Data.SqlClient.TdsParser.TryRun(RunBehavior runBehavior, SqlCommand cmdHandler, SqlDataReader dataStream, BulkCopySimpleResultSet bulkCopyHandler, TdsParserStateObject stateObj, Boolean& dataReady)\r\n   at Microsoft.Data.SqlClient.SqlDataReader.TryHasMoreRows(Boolean& moreRows)\r\n   at Microsoft.Data.SqlClient.SqlDataReader.TryReadInternal(Boolean setTimeout, Boolean& more)\r\n   at Microsoft.Data.SqlClient.SqlDataReader.Read()\r\n   at Microsoft.EntityFrameworkCore.Storage.RelationalDataReader.Read()\r\n   at Microsoft.EntityFrameworkCore.Update.AffectedCountModificationCommandBatch.ConsumeResultSet(Int32 startCommandIndex, RelationalDataReader reader)\r\n   at Microsoft.EntityFrameworkCore.Update.AffectedCountModificationCommandBatch.Consume(RelationalDataReader reader)\r\nClientConnectionId:19e89848-b104-4de2-8e1b-62c6f626d5b8\r\nError Number:515,State:2,Class:16\r\n   --- End of inner exception stack trace ---\r\n   at Microsoft.EntityFrameworkCore.Update.AffectedCountModificationCommandBatch.Consume(RelationalDataReader reader)\r\n   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.Execute(IRelationalConnection connection)\r\n   at Microsoft.EntityFrameworkCore.SqlServer.Update.Internal.SqlServerModificationCommandBatch.Execute(IRelationalConnection connection)\r\n   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.Execute(IEnumerable`1 commandBatches, IRelationalConnection connection)\r\n   at Microsoft.EntityFrameworkCore.Storage.RelationalDatabase.SaveChanges(IList`1 entries)\r\n   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChanges(IList`1 entriesToSave)\r\n   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChanges(StateManager stateManager, Boolean acceptAllChangesOnSuccess)\r\n   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.<>c.<SaveChanges>b__107_0(DbContext _, ValueTuple`2 t)\r\n   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.Execute[TState,TResult](TState state, Func`3 operation, Func`3 verifySucceeded)\r\n   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChanges(Boolean acceptAllChangesOnSuccess)\r\n   at Microsoft.EntityFrameworkCore.DbContext.SaveChanges(Boolean acceptAllChangesOnSuccess)\r\n   at Microsoft.EntityFrameworkCore.DbContext.SaveChanges()\r\n   at JustCare_MB.Services.AppointmentService.CreateAppointment(CreateAppointmentDto appointmentDto) in C:\\Users\\Smail_-\\Desktop\\JustCare\\JustCare_MB\\Services\\AppointmentService.cs:line 59\r\n   at JustCareAPI.Controllers.AppointmentController.CreateAppointment(CreateAppointmentDto appointmentDto) in C:\\Users\\Smail_-\\Desktop\\JustCare\\JustCareAPI\\Controllers\\AppointmentController.cs:line 29\r\n   at lambda_method168(Closure, Object)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfActionResultExecutor.Execute(ActionContext actionContext, IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Awaited|17_0(ResourceInvoker invoker, Task task, IDisposable scope)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Awaited|17_0(ResourceInvoker invoker, Task task, IDisposable scope)\r\n   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)\r\n   at JustCare_MB.Middlewares.GlobalExceptionHandlingMiddleware.InvokeAsync(HttpContext context, RequestDelegate next) in C:\\Users\\Smail_-\\Desktop\\JustCare\\JustCare_MB\\Middlewares\\GlobalExceptionHandlingMiddleware.cs:line 31","@tr":"0784a21b5a0ff963a7cffbe5511cc87a","@sp":"e399c0e6eb89d40b","SourceContext":"JustCare_MB.Middlewares.GlobalExceptionHandlingMiddleware","ActionId":"5ceb7e2f-8edf-495f-9635-a8e4234966f8","ActionName":"JustCareAPI.Controllers.AppointmentController.CreateAppointment (JustCareAPI)","RequestId":"8000003b-000e-ff00-b63f-84710c7967bb","RequestPath":"/AppointmentAPI/Create%20appointment"}
{"@t":"2024-01-16T06:16:43.9779696Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["11268.5641"],"@tr":"0784a21b5a0ff963a7cffbe5511cc87a","@sp":"e399c0e6eb89d40b","RequestMethod":"POST","RequestPath":"/AppointmentAPI/Create appointment","StatusCode":400,"Elapsed":11268.5641,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"8000003b-000e-ff00-b63f-84710c7967bb"}
{"@t":"2024-01-16T06:33:32.1695113Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["269.7810"],"@tr":"cfa4cdba54dd0ac6d1b8a4fc4b9475fe","@sp":"0fc786a89eb65734","RequestMethod":"GET","RequestPath":"/swagger/index.html","StatusCode":200,"Elapsed":269.781,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"80000002-0004-fc00-b63f-84710c7967bb"}
{"@t":"2024-01-16T06:33:35.7861803Z","@mt":"Create Appointment: {\"Date\":\"2024-01-17T00:00:00\",\"CategoryId\":0,\"CategoryName\":\"string\"}","@tr":"2063689d29d83eece000d7d5173f3971","@sp":"4fa028c747e9e565","SourceContext":"JustCare_MB.Services.AppointmentService","ActionId":"9994c8cd-7909-4a8e-aa06-2a70fc27a6c2","ActionName":"JustCareAPI.Controllers.AppointmentController.CreateAppointment (JustCareAPI)","RequestId":"80000071-000c-ff00-b63f-84710c7967bb","RequestPath":"/AppointmentAPI/Create%20appointment"}
{"@t":"2024-01-16T06:33:38.1516837Z","@mt":"Category id is not exist","@l":"Error","@x":"JustCare_MB.Helpers.InvalidIdException: Category id is not exist\r\n   at JustCare_MB.Services.AppointmentService.CreateAppointment(CreateAppointmentDto appointmentDto) in C:\\Users\\Smail_-\\Desktop\\JustCare\\JustCare_MB\\Services\\AppointmentService.cs:line 52\r\n   at JustCareAPI.Controllers.AppointmentController.CreateAppointment(CreateAppointmentDto appointmentDto) in C:\\Users\\Smail_-\\Desktop\\JustCare\\JustCareAPI\\Controllers\\AppointmentController.cs:line 29\r\n   at lambda_method6(Closure, Object)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfActionResultExecutor.Execute(ActionContext actionContext, IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Awaited|17_0(ResourceInvoker invoker, Task task, IDisposable scope)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Awaited|17_0(ResourceInvoker invoker, Task task, IDisposable scope)\r\n   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)\r\n   at JustCare_MB.Middlewares.GlobalExceptionHandlingMiddleware.InvokeAsync(HttpContext context, RequestDelegate next) in C:\\Users\\Smail_-\\Desktop\\JustCare\\JustCare_MB\\Middlewares\\GlobalExceptionHandlingMiddleware.cs:line 31","@tr":"2063689d29d83eece000d7d5173f3971","@sp":"4fa028c747e9e565","SourceContext":"JustCare_MB.Middlewares.GlobalExceptionHandlingMiddleware","ActionId":"9994c8cd-7909-4a8e-aa06-2a70fc27a6c2","ActionName":"JustCareAPI.Controllers.AppointmentController.CreateAppointment (JustCareAPI)","RequestId":"80000071-000c-ff00-b63f-84710c7967bb","RequestPath":"/AppointmentAPI/Create%20appointment"}
{"@t":"2024-01-16T06:33:38.2022422Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["2934.9828"],"@tr":"2063689d29d83eece000d7d5173f3971","@sp":"4fa028c747e9e565","RequestMethod":"POST","RequestPath":"/AppointmentAPI/Create appointment","StatusCode":404,"Elapsed":2934.9828,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"80000071-000c-ff00-b63f-84710c7967bb"}
{"@t":"2024-01-16T06:34:48.6496702Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["253.8632"],"@tr":"57b716b2673c44da4831c0f80d675b0b","@sp":"0b20d42d0085c411","RequestMethod":"GET","RequestPath":"/swagger/index.html","StatusCode":200,"Elapsed":253.8632,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"80000066-000f-fd00-b63f-84710c7967bb"}
{"@t":"2024-01-16T06:34:52.2894431Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["489.5615"],"@tr":"4e83a94c5bd22abec11b25ed442c2220","@sp":"c7e1ca44053808e6","RequestMethod":"POST","RequestPath":"/AppointmentAPI/Create appointment","StatusCode":400,"Elapsed":489.5615,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"80000046-0008-fc00-b63f-84710c7967bb"}
{"@t":"2024-01-16T06:35:42.5432008Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["327.4990"],"@tr":"1bda474fcabb142ab9c3faf037ad643f","@sp":"052eb58ae3c0ca61","RequestMethod":"GET","RequestPath":"/swagger/index.html","StatusCode":200,"Elapsed":327.499,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"80000017-0002-fc00-b63f-84710c7967bb"}
{"@t":"2024-01-16T06:35:42.9244567Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["176.4606"],"@tr":"f4031bb37b145f9afa03255b51e46ac0","@sp":"7e62fe55c8106eac","RequestMethod":"GET","RequestPath":"/swagger/v1/swagger.json","StatusCode":200,"Elapsed":176.4606,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"80000068-000f-fd00-b63f-84710c7967bb"}
{"@t":"2024-01-16T06:36:07.6749739Z","@mt":"Create Appointment: {\"Date\":\"2024-01-17T00:00:00\",\"CategoryId\":1}","@tr":"fb10d6da2f71219457e9865e0cba5a68","@sp":"66c2d87e718703d2","SourceContext":"JustCare_MB.Services.AppointmentService","ActionId":"1115486a-2012-4f56-8f8a-1f993d854a09","ActionName":"JustCareAPI.Controllers.AppointmentController.CreateAppointment (JustCareAPI)","RequestId":"80000076-0000-fe00-b63f-84710c7967bb","RequestPath":"/AppointmentAPI/Create%20appointment"}
{"@t":"2024-01-16T06:36:10.4133021Z","@mt":"An exception occurred in the database while saving changes for context type '{contextType}'.{newline}{error}","@l":"Error","@x":"Microsoft.EntityFrameworkCore.DbUpdateException: An error occurred while saving the entity changes. See the inner exception for details.\r\n ---> Microsoft.Data.SqlClient.SqlException (0x80131904): Cannot insert the value NULL into column 'DentistDescription', table 'JustCare10.dbo.Appointment'; column does not allow nulls. INSERT fails.\r\n   at Microsoft.Data.SqlClient.SqlConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)\r\n   at Microsoft.Data.SqlClient.SqlInternalConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)\r\n   at Microsoft.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)\r\n   at Microsoft.Data.SqlClient.TdsParser.TryRun(RunBehavior runBehavior, SqlCommand cmdHandler, SqlDataReader dataStream, BulkCopySimpleResultSet bulkCopyHandler, TdsParserStateObject stateObj, Boolean& dataReady)\r\n   at Microsoft.Data.SqlClient.SqlDataReader.TryHasMoreRows(Boolean& moreRows)\r\n   at Microsoft.Data.SqlClient.SqlDataReader.TryReadInternal(Boolean setTimeout, Boolean& more)\r\n   at Microsoft.Data.SqlClient.SqlDataReader.Read()\r\n   at Microsoft.EntityFrameworkCore.Storage.RelationalDataReader.Read()\r\n   at Microsoft.EntityFrameworkCore.Update.AffectedCountModificationCommandBatch.ConsumeResultSet(Int32 startCommandIndex, RelationalDataReader reader)\r\n   at Microsoft.EntityFrameworkCore.Update.AffectedCountModificationCommandBatch.Consume(RelationalDataReader reader)\r\nClientConnectionId:3cf17527-78e5-4d9f-874e-8544d9511062\r\nError Number:515,State:2,Class:16\r\n   --- End of inner exception stack trace ---\r\n   at Microsoft.EntityFrameworkCore.Update.AffectedCountModificationCommandBatch.Consume(RelationalDataReader reader)\r\n   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.Execute(IRelationalConnection connection)\r\n   at Microsoft.EntityFrameworkCore.SqlServer.Update.Internal.SqlServerModificationCommandBatch.Execute(IRelationalConnection connection)\r\n   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.Execute(IEnumerable`1 commandBatches, IRelationalConnection connection)\r\n   at Microsoft.EntityFrameworkCore.Storage.RelationalDatabase.SaveChanges(IList`1 entries)\r\n   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChanges(IList`1 entriesToSave)\r\n   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChanges(StateManager stateManager, Boolean acceptAllChangesOnSuccess)\r\n   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.<>c.<SaveChanges>b__107_0(DbContext _, ValueTuple`2 t)\r\n   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.Execute[TState,TResult](TState state, Func`3 operation, Func`3 verifySucceeded)\r\n   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChanges(Boolean acceptAllChangesOnSuccess)\r\n   at Microsoft.EntityFrameworkCore.DbContext.SaveChanges(Boolean acceptAllChangesOnSuccess)","@tr":"fb10d6da2f71219457e9865e0cba5a68","@sp":"66c2d87e718703d2","contextType":"JustCare_MB.Data.JustCareContext","newline":"\r\n","error":"Microsoft.EntityFrameworkCore.DbUpdateException: An error occurred while saving the entity changes. See the inner exception for details.\r\n ---> Microsoft.Data.SqlClient.SqlException (0x80131904): Cannot insert the value NULL into column 'DentistDescription', table 'JustCare10.dbo.Appointment'; column does not allow nulls. INSERT fails.\r\n   at Microsoft.Data.SqlClient.SqlConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)\r\n   at Microsoft.Data.SqlClient.SqlInternalConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)\r\n   at Microsoft.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)\r\n   at Microsoft.Data.SqlClient.TdsParser.TryRun(RunBehavior runBehavior, SqlCommand cmdHandler, SqlDataReader dataStream, BulkCopySimpleResultSet bulkCopyHandler, TdsParserStateObject stateObj, Boolean& dataReady)\r\n   at Microsoft.Data.SqlClient.SqlDataReader.TryHasMoreRows(Boolean& moreRows)\r\n   at Microsoft.Data.SqlClient.SqlDataReader.TryReadInternal(Boolean setTimeout, Boolean& more)\r\n   at Microsoft.Data.SqlClient.SqlDataReader.Read()\r\n   at Microsoft.EntityFrameworkCore.Storage.RelationalDataReader.Read()\r\n   at Microsoft.EntityFrameworkCore.Update.AffectedCountModificationCommandBatch.ConsumeResultSet(Int32 startCommandIndex, RelationalDataReader reader)\r\n   at Microsoft.EntityFrameworkCore.Update.AffectedCountModificationCommandBatch.Consume(RelationalDataReader reader)\r\nClientConnectionId:3cf17527-78e5-4d9f-874e-8544d9511062\r\nError Number:515,State:2,Class:16\r\n   --- End of inner exception stack trace ---\r\n   at Microsoft.EntityFrameworkCore.Update.AffectedCountModificationCommandBatch.Consume(RelationalDataReader reader)\r\n   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.Execute(IRelationalConnection connection)\r\n   at Microsoft.EntityFrameworkCore.SqlServer.Update.Internal.SqlServerModificationCommandBatch.Execute(IRelationalConnection connection)\r\n   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.Execute(IEnumerable`1 commandBatches, IRelationalConnection connection)\r\n   at Microsoft.EntityFrameworkCore.Storage.RelationalDatabase.SaveChanges(IList`1 entries)\r\n   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChanges(IList`1 entriesToSave)\r\n   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChanges(StateManager stateManager, Boolean acceptAllChangesOnSuccess)\r\n   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.<>c.<SaveChanges>b__107_0(DbContext _, ValueTuple`2 t)\r\n   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.Execute[TState,TResult](TState state, Func`3 operation, Func`3 verifySucceeded)\r\n   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChanges(Boolean acceptAllChangesOnSuccess)\r\n   at Microsoft.EntityFrameworkCore.DbContext.SaveChanges(Boolean acceptAllChangesOnSuccess)","EventId":{"Id":10000,"Name":"Microsoft.EntityFrameworkCore.Update.SaveChangesFailed"},"SourceContext":"Microsoft.EntityFrameworkCore.Update","ActionId":"1115486a-2012-4f56-8f8a-1f993d854a09","ActionName":"JustCareAPI.Controllers.AppointmentController.CreateAppointment (JustCareAPI)","RequestId":"80000076-0000-fe00-b63f-84710c7967bb","RequestPath":"/AppointmentAPI/Create%20appointment"}
{"@t":"2024-01-16T06:36:10.7434288Z","@mt":"An error occurred while saving the entity changes. See the inner exception for details.","@l":"Error","@x":"Microsoft.EntityFrameworkCore.DbUpdateException: An error occurred while saving the entity changes. See the inner exception for details.\r\n ---> Microsoft.Data.SqlClient.SqlException (0x80131904): Cannot insert the value NULL into column 'DentistDescription', table 'JustCare10.dbo.Appointment'; column does not allow nulls. INSERT fails.\r\n   at Microsoft.Data.SqlClient.SqlConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)\r\n   at Microsoft.Data.SqlClient.SqlInternalConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)\r\n   at Microsoft.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)\r\n   at Microsoft.Data.SqlClient.TdsParser.TryRun(RunBehavior runBehavior, SqlCommand cmdHandler, SqlDataReader dataStream, BulkCopySimpleResultSet bulkCopyHandler, TdsParserStateObject stateObj, Boolean& dataReady)\r\n   at Microsoft.Data.SqlClient.SqlDataReader.TryHasMoreRows(Boolean& moreRows)\r\n   at Microsoft.Data.SqlClient.SqlDataReader.TryReadInternal(Boolean setTimeout, Boolean& more)\r\n   at Microsoft.Data.SqlClient.SqlDataReader.Read()\r\n   at Microsoft.EntityFrameworkCore.Storage.RelationalDataReader.Read()\r\n   at Microsoft.EntityFrameworkCore.Update.AffectedCountModificationCommandBatch.ConsumeResultSet(Int32 startCommandIndex, RelationalDataReader reader)\r\n   at Microsoft.EntityFrameworkCore.Update.AffectedCountModificationCommandBatch.Consume(RelationalDataReader reader)\r\nClientConnectionId:3cf17527-78e5-4d9f-874e-8544d9511062\r\nError Number:515,State:2,Class:16\r\n   --- End of inner exception stack trace ---\r\n   at Microsoft.EntityFrameworkCore.Update.AffectedCountModificationCommandBatch.Consume(RelationalDataReader reader)\r\n   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.Execute(IRelationalConnection connection)\r\n   at Microsoft.EntityFrameworkCore.SqlServer.Update.Internal.SqlServerModificationCommandBatch.Execute(IRelationalConnection connection)\r\n   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.Execute(IEnumerable`1 commandBatches, IRelationalConnection connection)\r\n   at Microsoft.EntityFrameworkCore.Storage.RelationalDatabase.SaveChanges(IList`1 entries)\r\n   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChanges(IList`1 entriesToSave)\r\n   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChanges(StateManager stateManager, Boolean acceptAllChangesOnSuccess)\r\n   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.<>c.<SaveChanges>b__107_0(DbContext _, ValueTuple`2 t)\r\n   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.Execute[TState,TResult](TState state, Func`3 operation, Func`3 verifySucceeded)\r\n   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChanges(Boolean acceptAllChangesOnSuccess)\r\n   at Microsoft.EntityFrameworkCore.DbContext.SaveChanges(Boolean acceptAllChangesOnSuccess)\r\n   at Microsoft.EntityFrameworkCore.DbContext.SaveChanges()\r\n   at JustCare_MB.Services.AppointmentService.CreateAppointment(CreateAppointmentDto appointmentDto) in C:\\Users\\Smail_-\\Desktop\\JustCare\\JustCare_MB\\Services\\AppointmentService.cs:line 64\r\n   at JustCareAPI.Controllers.AppointmentController.CreateAppointment(CreateAppointmentDto appointmentDto) in C:\\Users\\Smail_-\\Desktop\\JustCare\\JustCareAPI\\Controllers\\AppointmentController.cs:line 29\r\n   at lambda_method6(Closure, Object)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfActionResultExecutor.Execute(ActionContext actionContext, IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Awaited|17_0(ResourceInvoker invoker, Task task, IDisposable scope)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Awaited|17_0(ResourceInvoker invoker, Task task, IDisposable scope)\r\n   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)\r\n   at JustCare_MB.Middlewares.GlobalExceptionHandlingMiddleware.InvokeAsync(HttpContext context, RequestDelegate next) in C:\\Users\\Smail_-\\Desktop\\JustCare\\JustCare_MB\\Middlewares\\GlobalExceptionHandlingMiddleware.cs:line 31","@tr":"fb10d6da2f71219457e9865e0cba5a68","@sp":"66c2d87e718703d2","SourceContext":"JustCare_MB.Middlewares.GlobalExceptionHandlingMiddleware","ActionId":"1115486a-2012-4f56-8f8a-1f993d854a09","ActionName":"JustCareAPI.Controllers.AppointmentController.CreateAppointment (JustCareAPI)","RequestId":"80000076-0000-fe00-b63f-84710c7967bb","RequestPath":"/AppointmentAPI/Create%20appointment"}
{"@t":"2024-01-16T06:36:10.7996511Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["4441.9923"],"@tr":"fb10d6da2f71219457e9865e0cba5a68","@sp":"66c2d87e718703d2","RequestMethod":"POST","RequestPath":"/AppointmentAPI/Create appointment","StatusCode":400,"Elapsed":4441.9923,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"80000076-0000-fe00-b63f-84710c7967bb"}
{"@t":"2024-01-16T08:09:46.5725113Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["218.6393"],"@tr":"cb2f3dbf44df0cf28957bd12e07b2158","@sp":"f4c2ce51c0389943","RequestMethod":"GET","RequestPath":"/swagger/index.html","StatusCode":200,"Elapsed":218.6393,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"80000026-0002-f800-b63f-84710c7967bb"}
{"@t":"2024-01-16T08:09:46.8712420Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["135.7241"],"@tr":"83712fc8470de10feb7a770ed611ccf0","@sp":"0f94e8067f02ac02","RequestMethod":"GET","RequestPath":"/swagger/v1/swagger.json","StatusCode":200,"Elapsed":135.7241,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"80000016-0001-fd00-b63f-84710c7967bb"}
{"@t":"2024-01-16T10:23:22.1945753Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["165.1349"],"@tr":"d73d67581a3c6ade913ba8f5a8099f1e","@sp":"afd51cc113bf1dd1","RequestMethod":"GET","RequestPath":"/swagger/index.html","StatusCode":200,"Elapsed":165.1349,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"8000002c-0000-fd00-b63f-84710c7967bb"}
{"@t":"2024-01-16T10:23:22.3824524Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["77.8067"],"@tr":"a8c85879b1a4d6475675f65dc9896511","@sp":"eaa99e48e2aadf8e","RequestMethod":"GET","RequestPath":"/swagger/v1/swagger.json","StatusCode":200,"Elapsed":77.8067,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"8000001a-0001-fd00-b63f-84710c7967bb"}
{"@t":"2024-01-16T11:02:04.4446246Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["171.6004"],"@tr":"c7c44a8f30c3a3e620fd32dd6617f005","@sp":"36229c202b386e9a","RequestMethod":"GET","RequestPath":"/swagger/index.html","StatusCode":200,"Elapsed":171.6004,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"80000012-0006-fd00-b63f-84710c7967bb"}
{"@t":"2024-01-16T11:02:04.6235489Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["83.8452"],"@tr":"db4e5d2eb0ebc2ebd91110b432d8d9e2","@sp":"735cebb96bd60360","RequestMethod":"GET","RequestPath":"/swagger/v1/swagger.json","StatusCode":200,"Elapsed":83.8452,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"80000004-0003-fe00-b63f-84710c7967bb"}
{"@t":"2024-01-16T11:04:00.1740186Z","@mt":"Object reference not set to an instance of an object.","@l":"Error","@x":"System.NullReferenceException: Object reference not set to an instance of an object.\r\n   at JustCare_MB.Services.UsersService.GenerateTokenAndCreateUserLoginDto(User user, UserLoginResponseDto userLoginResponseDto) in C:\\Users\\Smail_-\\Desktop\\JustCare\\JustCare_MB\\Services\\UsersService.cs:line 84\r\n   at JustCare_MB.Services.UsersService.Login(UserLoginRequestDto userLogin) in C:\\Users\\Smail_-\\Desktop\\JustCare\\JustCare_MB\\Services\\UsersService.cs:line 124\r\n   at JustCareAPI.Controllers.UserController.Login(UserLoginRequestDto userLogin) in C:\\Users\\Smail_-\\Desktop\\JustCare\\JustCareAPI\\Controllers\\UserController.cs:line 36\r\n   at lambda_method6(Closure, Object)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfActionResultExecutor.Execute(ActionContext actionContext, IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Awaited|17_0(ResourceInvoker invoker, Task task, IDisposable scope)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Awaited|17_0(ResourceInvoker invoker, Task task, IDisposable scope)\r\n   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)\r\n   at JustCare_MB.Middlewares.GlobalExceptionHandlingMiddleware.InvokeAsync(HttpContext context, RequestDelegate next) in C:\\Users\\Smail_-\\Desktop\\JustCare\\JustCare_MB\\Middlewares\\GlobalExceptionHandlingMiddleware.cs:line 31","@tr":"d40fcaf968fd176c04e0c0aa6dc19e77","@sp":"9159f2b5d2523cce","SourceContext":"JustCare_MB.Middlewares.GlobalExceptionHandlingMiddleware","ActionId":"fcffdf18-b5fb-4076-a7e6-9c96a643e816","ActionName":"JustCareAPI.Controllers.UserController.Login (JustCareAPI)","RequestId":"80000030-0002-f800-b63f-84710c7967bb","RequestPath":"/UserAPI/Login"}
{"@t":"2024-01-16T11:04:00.1914160Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["56602.1310"],"@tr":"d40fcaf968fd176c04e0c0aa6dc19e77","@sp":"9159f2b5d2523cce","RequestMethod":"POST","RequestPath":"/UserAPI/Login","StatusCode":400,"Elapsed":56602.131,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"80000030-0002-f800-b63f-84710c7967bb"}
{"@t":"2024-01-16T11:05:43.3682420Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["174.4436"],"@tr":"cbf295bb856e233c274055edc7592287","@sp":"01527fa54ccff153","RequestMethod":"GET","RequestPath":"/swagger/index.html","StatusCode":200,"Elapsed":174.4436,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"80000032-0002-f800-b63f-84710c7967bb"}
{"@t":"2024-01-16T11:05:43.5595556Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["99.7745"],"@tr":"89f1c8c959e82c02e3573906f62da922","@sp":"d540952272e000d7","RequestMethod":"GET","RequestPath":"/swagger/v1/swagger.json","StatusCode":200,"Elapsed":99.7745,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"8000001e-000f-fe00-b63f-84710c7967bb"}
{"@t":"2024-01-16T11:05:46.4763662Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["1118.7344"],"@tr":"6a2e1de0db275cafdde7aac76c6af180","@sp":"7c0512282cc91802","RequestMethod":"POST","RequestPath":"/UserAPI/Login","StatusCode":200,"Elapsed":1118.7344,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"80000028-0004-ff00-b63f-84710c7967bb"}
{"@t":"2024-01-16T11:06:44.3555722Z","@mt":"Get All Appoitnment Dates By Category Id: 1","@tr":"c72f91bbf92f3571cd50c0108dbe97b7","@sp":"50d2d5d39ab93ade","SourceContext":"JustCare_MB.Services.AppointmentService","ActionId":"0d02f3f4-af17-4aa6-a5fa-df5d4119d971","ActionName":"JustCareAPI.Controllers.AppointmentController.GetAllDatesDtoByCategoryId (JustCareAPI)","RequestId":"80000030-0000-fd00-b63f-84710c7967bb","RequestPath":"/AppointmentAPI/1"}
{"@t":"2024-01-16T11:06:44.5833931Z","@mt":"There are no appointments","@l":"Error","@x":"JustCare_MB.Helpers.NotFoundException: There are no appointments\r\n   at JustCare_MB.Services.AppointmentService.GetAllAppoitnmentDatesDtoByCategoryId(Int32 Categoryid) in C:\\Users\\Smail_-\\Desktop\\JustCare\\JustCare_MB\\Services\\AppointmentService.cs:line 121\r\n   at JustCareAPI.Controllers.AppointmentController.GetAllDatesDtoByCategoryId(Int32 Categoryid) in C:\\Users\\Smail_-\\Desktop\\JustCare\\JustCareAPI\\Controllers\\AppointmentController.cs:line 36\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(ActionContext actionContext, IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Awaited|17_0(ResourceInvoker invoker, Task task, IDisposable scope)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Awaited|17_0(ResourceInvoker invoker, Task task, IDisposable scope)\r\n   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)\r\n   at JustCare_MB.Middlewares.GlobalExceptionHandlingMiddleware.InvokeAsync(HttpContext context, RequestDelegate next) in C:\\Users\\Smail_-\\Desktop\\JustCare\\JustCare_MB\\Middlewares\\GlobalExceptionHandlingMiddleware.cs:line 31","@tr":"c72f91bbf92f3571cd50c0108dbe97b7","@sp":"50d2d5d39ab93ade","SourceContext":"JustCare_MB.Middlewares.GlobalExceptionHandlingMiddleware","ActionId":"0d02f3f4-af17-4aa6-a5fa-df5d4119d971","ActionName":"JustCareAPI.Controllers.AppointmentController.GetAllDatesDtoByCategoryId (JustCareAPI)","RequestId":"80000030-0000-fd00-b63f-84710c7967bb","RequestPath":"/AppointmentAPI/1"}
{"@t":"2024-01-16T11:06:44.6047424Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["392.1337"],"@tr":"c72f91bbf92f3571cd50c0108dbe97b7","@sp":"50d2d5d39ab93ade","RequestMethod":"GET","RequestPath":"/AppointmentAPI/1","StatusCode":404,"Elapsed":392.1337,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"80000030-0000-fd00-b63f-84710c7967bb"}
{"@t":"2024-01-16T11:06:56.6679017Z","@mt":"Get all Categories","@tr":"d97c29e0621dd3037ec1b3dce7b69160","@sp":"d44cc983fa999ab5","SourceContext":"JustCare_MB.Services.CategoryService","ActionId":"860bb7b0-9a79-42ad-9cbb-a7229ea55433","ActionName":"JustCareAPI.Controllers.CategoryController.GetAllCategorys (JustCareAPI)","RequestId":"80000032-0000-fd00-b63f-84710c7967bb","RequestPath":"/CategoryAPI/GetAllCategorys"}
{"@t":"2024-01-16T11:06:56.7852579Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["129.7787"],"@tr":"d97c29e0621dd3037ec1b3dce7b69160","@sp":"d44cc983fa999ab5","RequestMethod":"GET","RequestPath":"/CategoryAPI/GetAllCategorys","StatusCode":200,"Elapsed":129.7787,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"80000032-0000-fd00-b63f-84710c7967bb"}
{"@t":"2024-01-16T11:07:27.2235039Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["49.6530"],"@tr":"20384dfa862e70d40d80c58c57a39e2d","@sp":"2e07e2634cbaafd4","RequestMethod":"POST","RequestPath":"/AppointmentAPI/Create appointment","StatusCode":400,"Elapsed":49.653,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"8000004a-000e-ff00-b63f-84710c7967bb"}
{"@t":"2024-01-16T11:08:01.0150908Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["15.2330"],"@tr":"3e43f3d9ba789942ac66bc56c09e9963","@sp":"b946631efa172e48","RequestMethod":"POST","RequestPath":"/AppointmentAPI/Create appointment","StatusCode":400,"Elapsed":15.233,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"80000008-000c-fe00-b63f-84710c7967bb"}
{"@t":"2024-01-16T11:54:40.7078707Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["167.3445"],"@tr":"79ac13d90d37d3b208756f001a5e57b4","@sp":"0bb04fb5f173aad1","RequestMethod":"GET","RequestPath":"/swagger/index.html","StatusCode":200,"Elapsed":167.3445,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"8000004c-000e-ff00-b63f-84710c7967bb"}
{"@t":"2024-01-16T11:54:40.8760751Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["80.6442"],"@tr":"ed82d3cecc1bb6faa4b99c07994cef72","@sp":"9b6b4fde6f5c5198","RequestMethod":"GET","RequestPath":"/swagger/v1/swagger.json","StatusCode":200,"Elapsed":80.6442,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"80000013-0003-ff00-b63f-84710c7967bb"}
{"@t":"2024-01-16T11:54:43.1492075Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["341.2235"],"@tr":"99cb408bac777598520c2a4f842553e3","@sp":"a6ef3d10025c8fc5","RequestMethod":"POST","RequestPath":"/AppointmentAPI/Create appointment","StatusCode":400,"Elapsed":341.2235,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"80000002-000b-fc00-b63f-84710c7967bb"}
{"@t":"2024-01-16T11:55:26.8311024Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["27.2177"],"@tr":"ac9de294b1798de7f08610a743611a26","@sp":"7857708d503328f0","RequestMethod":"POST","RequestPath":"/AppointmentAPI/Create appointment","StatusCode":400,"Elapsed":27.2177,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"8000005a-0009-ff00-b63f-84710c7967bb"}
{"@t":"2024-01-16T11:56:17.3564282Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["160.5296"],"@tr":"0464f5ee2991546e03e73aaf7a454c9f","@sp":"8443057af5106740","RequestMethod":"GET","RequestPath":"/swagger/index.html","StatusCode":200,"Elapsed":160.5296,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"80000098-000f-fd00-b63f-84710c7967bb"}
{"@t":"2024-01-16T11:56:17.5240976Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["81.5535"],"@tr":"e2d14c8d13d7e62d198d40b5cca4bb34","@sp":"02cc21579159798a","RequestMethod":"GET","RequestPath":"/swagger/v1/swagger.json","StatusCode":200,"Elapsed":81.5535,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"80000019-0004-fd00-b63f-84710c7967bb"}
{"@t":"2024-01-16T11:57:01.2333410Z","@mt":"Create Appointment: {\"Date\":\"2024-01-17T00:00:00\",\"CategoryId\":0,\"DentistDescription\":\"beee\",\"Images\":[\"\",\"\"]}","@tr":"16011ebd7ef72df347f840bf3f71d3ed","@sp":"b7bd10319814e264","SourceContext":"JustCare_MB.Services.AppointmentService","ActionId":"49858247-b076-4050-88f1-86a50e205a8d","ActionName":"JustCareAPI.Controllers.AppointmentController.CreateAppointment (JustCareAPI)","RequestId":"80000006-000b-fc00-b63f-84710c7967bb","RequestPath":"/AppointmentAPI/Create%20appointment"}
{"@t":"2024-01-16T11:57:19.7905749Z","@mt":"Category id is not exist","@l":"Error","@x":"JustCare_MB.Helpers.InvalidIdException: Category id is not exist\r\n   at JustCare_MB.Services.AppointmentService.CreateAppointment(CreateAppointmentDto appointmentDto) in C:\\Users\\Smail_-\\Desktop\\JustCare\\JustCare_MB\\Services\\AppointmentService.cs:line 71\r\n   at JustCareAPI.Controllers.AppointmentController.CreateAppointment(CreateAppointmentDto appointmentDto) in C:\\Users\\Smail_-\\Desktop\\JustCare\\JustCareAPI\\Controllers\\AppointmentController.cs:line 29\r\n   at lambda_method6(Closure, Object)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfActionResultExecutor.Execute(ActionContext actionContext, IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Awaited|17_0(ResourceInvoker invoker, Task task, IDisposable scope)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Awaited|17_0(ResourceInvoker invoker, Task task, IDisposable scope)\r\n   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)\r\n   at JustCare_MB.Middlewares.GlobalExceptionHandlingMiddleware.InvokeAsync(HttpContext context, RequestDelegate next) in C:\\Users\\Smail_-\\Desktop\\JustCare\\JustCare_MB\\Middlewares\\GlobalExceptionHandlingMiddleware.cs:line 31","@tr":"16011ebd7ef72df347f840bf3f71d3ed","@sp":"b7bd10319814e264","SourceContext":"JustCare_MB.Middlewares.GlobalExceptionHandlingMiddleware","ActionId":"49858247-b076-4050-88f1-86a50e205a8d","ActionName":"JustCareAPI.Controllers.AppointmentController.CreateAppointment (JustCareAPI)","RequestId":"80000006-000b-fc00-b63f-84710c7967bb","RequestPath":"/AppointmentAPI/Create%20appointment"}
{"@t":"2024-01-16T11:57:19.8085222Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["43589.0036"],"@tr":"16011ebd7ef72df347f840bf3f71d3ed","@sp":"b7bd10319814e264","RequestMethod":"POST","RequestPath":"/AppointmentAPI/Create appointment","StatusCode":404,"Elapsed":43589.0036,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"80000006-000b-fc00-b63f-84710c7967bb"}
{"@t":"2024-01-16T11:58:12.9851819Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["170.6984"],"@tr":"b3249280c4510d6cd4e76cb9efb272d9","@sp":"cf69bd20f3a28215","RequestMethod":"GET","RequestPath":"/swagger/index.html","StatusCode":200,"Elapsed":170.6984,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"80000023-0006-fb00-b63f-84710c7967bb"}
{"@t":"2024-01-16T11:58:13.1487289Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["80.9790"],"@tr":"dff49b6f5509852521a6073b0bdad1c7","@sp":"ed0a6726eafeba5e","RequestMethod":"GET","RequestPath":"/swagger/v1/swagger.json","StatusCode":200,"Elapsed":80.979,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"80000036-0000-fd00-b63f-84710c7967bb"}
{"@t":"2024-01-16T11:58:23.8819484Z","@mt":"Create Appointment: {\"Date\":\"2024-01-17T00:00:00\",\"CategoryId\":1,\"DentistDescription\":\"beee\",\"Images\":[\"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\",\"\"]}","@tr":"4f72801e8f292767cb05455dd745aea8","@sp":"8aab95e7a94db80b","SourceContext":"JustCare_MB.Services.AppointmentService","ActionId":"17063d6c-258f-4bfe-9f40-de6e0533551f","ActionName":"JustCareAPI.Controllers.AppointmentController.CreateAppointment (JustCareAPI)","RequestId":"8000000c-000c-fe00-b63f-84710c7967bb","RequestPath":"/AppointmentAPI/Create%20appointment"}
{"@t":"2024-01-16T11:58:29.1653217Z","@mt":"The appointment must be at least 12 hours away","@l":"Error","@x":"JustCare_MB.Helpers.TimeNotValid: The appointment must be at least 12 hours away\r\n   at JustCare_MB.Services.AppointmentService.CreateAppointment(CreateAppointmentDto appointmentDto) in C:\\Users\\Smail_-\\Desktop\\JustCare\\JustCare_MB\\Services\\AppointmentService.cs:line 68\r\n   at JustCareAPI.Controllers.AppointmentController.CreateAppointment(CreateAppointmentDto appointmentDto) in C:\\Users\\Smail_-\\Desktop\\JustCare\\JustCareAPI\\Controllers\\AppointmentController.cs:line 29\r\n   at lambda_method6(Closure, Object)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfActionResultExecutor.Execute(ActionContext actionContext, IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Awaited|17_0(ResourceInvoker invoker, Task task, IDisposable scope)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Awaited|17_0(ResourceInvoker invoker, Task task, IDisposable scope)\r\n   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)\r\n   at JustCare_MB.Middlewares.GlobalExceptionHandlingMiddleware.InvokeAsync(HttpContext context, RequestDelegate next) in C:\\Users\\Smail_-\\Desktop\\JustCare\\JustCare_MB\\Middlewares\\GlobalExceptionHandlingMiddleware.cs:line 31","@tr":"4f72801e8f292767cb05455dd745aea8","@sp":"8aab95e7a94db80b","SourceContext":"JustCare_MB.Middlewares.GlobalExceptionHandlingMiddleware","ActionId":"17063d6c-258f-4bfe-9f40-de6e0533551f","ActionName":"JustCareAPI.Controllers.AppointmentController.CreateAppointment (JustCareAPI)","RequestId":"8000000c-000c-fe00-b63f-84710c7967bb","RequestPath":"/AppointmentAPI/Create%20appointment"}
{"@t":"2024-01-16T11:58:29.1781414Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["7308.2169"],"@tr":"4f72801e8f292767cb05455dd745aea8","@sp":"8aab95e7a94db80b","RequestMethod":"POST","RequestPath":"/AppointmentAPI/Create appointment","StatusCode":400,"Elapsed":7308.2169,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"8000000c-000c-fe00-b63f-84710c7967bb"}
{"@t":"2024-01-16T11:58:46.7506020Z","@mt":"Create Appointment: {\"Date\":\"2024-01-18T00:00:00\",\"CategoryId\":1,\"DentistDescription\":\"beee\",\"Images\":[\"\",\"\"]}","@tr":"01c35b97f1b361944ad4090cea0958f0","@sp":"dc51151ec4ba5738","SourceContext":"JustCare_MB.Services.AppointmentService","ActionId":"17063d6c-258f-4bfe-9f40-de6e0533551f","ActionName":"JustCareAPI.Controllers.AppointmentController.CreateAppointment (JustCareAPI)","RequestId":"80000060-0009-ff00-b63f-84710c7967bb","RequestPath":"/AppointmentAPI/Create%20appointment"}
{"@t":"2024-01-16T12:07:04.3633392Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["168.6505"],"@tr":"5253d8fc3760f82af9ba4f5863283b91","@sp":"fb75c55c603aac30","RequestMethod":"GET","RequestPath":"/swagger/index.html","StatusCode":200,"Elapsed":168.6505,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"8000001b-0004-fd00-b63f-84710c7967bb"}
{"@t":"2024-01-16T12:07:04.5338251Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["80.9461"],"@tr":"05242be1c9a34b28eaf93268d5df4000","@sp":"e9508fca2428a544","RequestMethod":"GET","RequestPath":"/swagger/v1/swagger.json","StatusCode":200,"Elapsed":80.9461,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"8000002a-0006-fb00-b63f-84710c7967bb"}
{"@t":"2024-01-16T12:07:08.2379688Z","@mt":"Create Appointment: {\"Date\":\"2024-01-18T00:00:00\",\"CategoryId\":1,\"DentistDescription\":\"beee\",\"Images\":[\"\",\"\"]}","@tr":"e0c8c2ac809518f1fea2d055b1638346","@sp":"ffd9e31ee7b5444c","SourceContext":"JustCare_MB.Services.AppointmentService","ActionId":"510669f9-00ae-4982-a733-d751c66ef870","ActionName":"JustCareAPI.Controllers.AppointmentController.CreateAppointment (JustCareAPI)","RequestId":"80000094-000a-ff00-b63f-84710c7967bb","RequestPath":"/AppointmentAPI/Create%20appointment"}
{"@t":"2024-01-16T12:08:54.4686120Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["108365.7149"],"@tr":"e0c8c2ac809518f1fea2d055b1638346","@sp":"ffd9e31ee7b5444c","RequestMethod":"POST","RequestPath":"/AppointmentAPI/Create appointment","StatusCode":200,"Elapsed":108365.7149,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"80000094-000a-ff00-b63f-84710c7967bb"}
{"@t":"2024-01-16T12:09:56.8378312Z","@mt":"Create Appointment: {\"Date\":\"2024-01-18T00:00:00\",\"CategoryId\":1,\"DentistDescription\":\"beee\",\"Images\":[\"\",\"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\"]}","@tr":"3fb284c91282b93a3b334071b4d1281c","@sp":"7ae2416642d2a03e","SourceContext":"JustCare_MB.Services.AppointmentService","ActionId":"510669f9-00ae-4982-a733-d751c66ef870","ActionName":"JustCareAPI.Controllers.AppointmentController.CreateAppointment (JustCareAPI)","RequestId":"8000001d-0004-fd00-b63f-84710c7967bb","RequestPath":"/AppointmentAPI/Create%20appointment"}
{"@t":"2024-01-16T12:09:58.5203246Z","@mt":"Appointment Exists","@l":"Error","@x":"JustCare_MB.Helpers.ExistsException: Appointment Exists\r\n   at JustCare_MB.Services.AppointmentService.CreateAppointment(CreateAppointmentDto appointmentDto) in C:\\Users\\Smail_-\\Desktop\\JustCare\\JustCare_MB\\Services\\AppointmentService.cs:line 59\r\n   at JustCareAPI.Controllers.AppointmentController.CreateAppointment(CreateAppointmentDto appointmentDto) in C:\\Users\\Smail_-\\Desktop\\JustCare\\JustCareAPI\\Controllers\\AppointmentController.cs:line 29\r\n   at lambda_method6(Closure, Object)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfActionResultExecutor.Execute(ActionContext actionContext, IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Awaited|17_0(ResourceInvoker invoker, Task task, IDisposable scope)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Awaited|17_0(ResourceInvoker invoker, Task task, IDisposable scope)\r\n   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)\r\n   at JustCare_MB.Middlewares.GlobalExceptionHandlingMiddleware.InvokeAsync(HttpContext context, RequestDelegate next) in C:\\Users\\Smail_-\\Desktop\\JustCare\\JustCare_MB\\Middlewares\\GlobalExceptionHandlingMiddleware.cs:line 31","@tr":"3fb284c91282b93a3b334071b4d1281c","@sp":"7ae2416642d2a03e","SourceContext":"JustCare_MB.Middlewares.GlobalExceptionHandlingMiddleware","ActionId":"510669f9-00ae-4982-a733-d751c66ef870","ActionName":"JustCareAPI.Controllers.AppointmentController.CreateAppointment (JustCareAPI)","RequestId":"8000001d-0004-fd00-b63f-84710c7967bb","RequestPath":"/AppointmentAPI/Create%20appointment"}
{"@t":"2024-01-16T12:09:58.5368487Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["4280.7628"],"@tr":"3fb284c91282b93a3b334071b4d1281c","@sp":"7ae2416642d2a03e","RequestMethod":"POST","RequestPath":"/AppointmentAPI/Create appointment","StatusCode":409,"Elapsed":4280.7628,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"8000001d-0004-fd00-b63f-84710c7967bb"}
{"@t":"2024-01-16T12:10:12.1357551Z","@mt":"Create Appointment: {\"Date\":\"2024-01-28T00:00:00\",\"CategoryId\":1,\"DentistDescription\":\"beee\",\"Images\":[\"\",\"\"]}","@tr":"489778b27ab200ae1be016e3ef4766d1","@sp":"60faa5dfa39dfc0a","SourceContext":"JustCare_MB.Services.AppointmentService","ActionId":"510669f9-00ae-4982-a733-d751c66ef870","ActionName":"JustCareAPI.Controllers.AppointmentController.CreateAppointment (JustCareAPI)","RequestId":"8000001f-0004-fd00-b63f-84710c7967bb","RequestPath":"/AppointmentAPI/Create%20appointment"}
{"@t":"2024-01-16T12:11:02.3047048Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["251.4843"],"@tr":"3d7bb4e2b5044ea3430f20745374421c","@sp":"fd9e9b11cb4aea84","RequestMethod":"GET","RequestPath":"/swagger/index.html","StatusCode":200,"Elapsed":251.4843,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"80000031-000d-fe00-b63f-84710c7967bb"}
{"@t":"2024-01-16T12:11:25.4389165Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["23039.7772"],"@tr":"2799b101aabf9f591c2d1baf435a914f","@sp":"fea4f18db48ff7e2","RequestMethod":"GET","RequestPath":"/swagger/v1/swagger.json","StatusCode":200,"Elapsed":23039.7772,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"8000002b-0004-ff00-b63f-84710c7967bb"}
{"@t":"2024-01-16T12:11:25.4960822Z","@mt":"Create Appointment: {\"Date\":\"2024-01-28T00:00:00\",\"CategoryId\":1,\"DentistDescription\":\"beee\",\"Images\":[\"\",\"\"]}","@tr":"b7b8d277e4112b3879589032986c739d","@sp":"b36e4eca7a0a16d3","SourceContext":"JustCare_MB.Services.AppointmentService","ActionId":"c2b682d8-c1a9-44f5-aba2-5d769aa76818","ActionName":"JustCareAPI.Controllers.AppointmentController.CreateAppointment (JustCareAPI)","RequestId":"80000021-0004-fd00-b63f-84710c7967bb","RequestPath":"/AppointmentAPI/Create%20appointment"}
{"@t":"2024-01-16T12:11:26.3502081Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["24298.7519"],"@tr":"b7b8d277e4112b3879589032986c739d","@sp":"b36e4eca7a0a16d3","RequestMethod":"POST","RequestPath":"/AppointmentAPI/Create appointment","StatusCode":200,"Elapsed":24298.7519,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"80000021-0004-fd00-b63f-84710c7967bb"}
{"@t":"2024-01-16T12:11:32.0241242Z","@mt":"Create Appointment: {\"Date\":\"2024-01-28T00:00:00\",\"CategoryId\":1,\"DentistDescription\":\"beee\",\"Images\":[\"\",\"/9j/4AAQSkZJRgABAQAAAQABAAD/2wCEAAkGBxMTEhUSEBIVFhUVFRUVFRUVFxUVFRUXFxUWFhUVFRYYHSggGBolHRUVITEhJSkrLi4uFx8zODMsNygtLisBCgoKDg0OGxAQGi0lICUtLS4tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLf/AABEIAJEBWwMBIgACEQEDEQH/xAAbAAACAwEBAQAAAAAAAAAAAAACAwABBAUGB//EAEIQAAEDAgIGBgcECQQDAAAAAAEAAhEDIQQxEkFRYXGBBSKRobHRBhMyQpLB8BRSYuEVI1NyorLC0vEHM0OCFoOj/8QAGgEAAgMBAQAAAAAAAAAAAAAAAAECAwUEBv/EADkRAAEDAQUECAQFBAMAAAAAAAEAAhEDBBIhMUFRYaGxE3GBkcHR4fAFFCKiI0JS0vEVMlNicpLC/9oADAMBAAIRAxEAPwDlEqpUK1dHdH1Kz9CkwuO7IDa45AL05IAkrwzWlxgCSkMC002r3fRXoE0AGu8vOxvVA3TmeNl3aPoxhm+zQZ/2l3e4lcL7dTGUn3vWrS+FViJcQOJ4YcV8vY1aKbV9O/QeH/Y0/hHkgd6P4Y/8I5SPAqn51p0K6P6W8ZOHFfPWNWim1e1Po1htTCOD3fMom+jVD8XxfkkbWw7ffapD4fUGzv8AReQptWhjV66n0Dhx7hPFzvNa6fR1EZU29gVbrS3QK5thfqRxK8axq0MYvZtwzPujsSK+Apn3R2Kv5gHRWixkarzbGJrGLfWwIGSW2mnfByS6ItzS2MTW001lNNp05yUS5TYyUptNMDFqbg9qL7Oq76uFJZw0bQiDRuTfVqaKV5S6MIRTV+qRBm5GKe5K8ncSfVqjTWj1f4VegNgReRcCxmmgdTXQ9U3YEupQGpMPSNNc91NLdTWqo0hLBB4qYcqixY3MSXsXRexZ3U1MOVRZK572JD2Lu0MGDnddGjQaNQSNYBMWYnMrxj6R2HsKzPavoRa3YlVKLDm0HiJTFp3JOsX+3D1Xzp7Vne1fQ6nRVE50hyEeCQ7oLD/sv4n+atFpbqCqHWB+hHHyXzt7VnqNX0n9B4f9kOZcfEq/0Jh/2TOd/FTFsaNDwVf9NefzBfLKjVnqNX1w9B0P2LPhHks2I9FcM/OiORc3wKm23M2FVu+FPjBw4+q+R1AlFe+6Y9BCAXYd5P4HRfcHiI5jmvD4vDOpuLKjS1wzBEH/ABvXZSrMqD6Ssy0WWrRP1jt07/OCkSrVIlcudOwOEdWqNpM9p5gbBtJ3ASeS+x9A9DU6FMMYLDMnN51ud9WXg/8ATjDB1ao8+4wAcXHPsaRzX1OiLLJt9Ul1zQc16H4TQa2n0mpnuy5ymAISESElZy2EtwCqyJ6UVIJJmkNir1w2JRVQhCccQNiWcQNiWQgcEJSmnEITXSSEJTSlFUekFGQhIQkmltuK3YanAWFmTefyXUZkk4psEIihIVlw2qiVFTS3IdJW5AU0kfrUPrygKohOEIziVRxO5LLUBahRlM+0KjXSSEJCESre9JKIqi1NJaAJAKza1poew7dPgswCcpAQU5j04V1mARAJJytIxCIYncswCMNSTlaRidyL16zgIoRCcp3rBsVSEsIghNMaAmAJbUwFRTVkWXnvSToGniGQ4Q4ToPGbT827R87r0SXXFlJji0gjNRexr2lrhIK+B43CupPdTeIc0wR8xu180tet/wBSMKG1qdQe+0g8WnPscByXkl6GjU6RgdtXjrTR6Gq5mz+RwXr/APTasBVqs+8xrux0f1L6fQfZfFPRnG+pxNN5MNmHfunqknhIPJfYsM9ZVuZFSdo9Fv8AwqoHULuwnjj59xW2ULiqLkBcuILTUcUKolCSmkiUQaSrTQiUZCEtRByJCSSWoSxPhVopoWYsVaC06CgYhCyuOiJOou8AUttdzrk22aloxdP9Uf3j4R4rFQIDZO0Kuo8tbICnTAJgp2mAmNq/QK4+LrdfRkjIjvnLXb/KxfpF0HbEtEgkjK2raNizHW5zSfRaQsTXAQvVNr7+1Ma+dYXlR0q4CTlE5bp7FsodLA2cDnquIyk7p8VY34i05qD/AIe4CQvQKLiOxrRMuaOevOIVU+lWEGDkDIOYjORnaVb88z2VT8k85cl3IQOjaFxv0ky06V8tewfNIq9LgEtjLI7SADHG/cUnfEGKTbA8rsvO9IdTlcM9MOJbFgbGRcGJ15WmymH6UJnStYEETlnlq19ipPxHQK7+mkCSuu6hqkJegWGR+RWOhVJfJeAI1ka9V9Vs9fDPrGCIm+dr7vrgVdZ7U57sVz17O1jZGa00vZdvA+fml6Cbhm9Q/ujuJ8k3QXeuNZwxEGJ2gr0UISg1GGo4UKSFUKIHOQF6E5TlEoPRhyEJrSmNKQCjBQmnApVd9lYcsuJekEL5z/qRWmrTZ91pd2uj+nvXkF1fSHGeur1KgyLoHAWHaBPNcpegs7LlMNXkLXUFSu541PAYDgEbAvrHon0j67DsJPWHVfxGs8RB5rxjfQ6oM3gcie+F2/RTB1MPVcx92PbIIJIBblY7QT2BcVqrUarIa7Eeytaw2O12Z81KZDTgcjGwmCfZXtw5QlJpuRkrNWwo4pTnK3FJcUIKIvVaaS5yrTTSWtj05pWJjlopuQhaQrSwUUpIRQqchLkurimNILzwGZPJGSYBJgLRWp/qyNg7xdceg3MDUVv/AEsz7j+weaw6Q0pbkcpsdiqf9TCFeGvpuBIXG6RY5r5GURoiLiRIE5aiBusubQqtIudIC8ZOmTpCxzG0bRK7vS1KW7DII2W2dy4GKu4wMr6ORyAPWGokzzWQYc8tdnpv3bMccd5nDLSDSGBzcBrGmUHbhu3YFV60hpa6SAHCctoE8Yidu3VpbXyDDE2nO8ySALkdm5c17wCGyTJnZMOnRMbeyx2X0US+pUcGmACA421gEgzMC4OoycxAmHRiTUPs4aY4YzqNMVe8kgMGGJx0u464YgiDltwwC0PaciSDBJLnGNE315DVxGrNY9EkODBps0h1wCdCGtvIHXbtA607pI7VLoLSIe7ONdyM/eMki+UroM6M0QBOsWGVrQBqGWSmL0fSMO7twk8cOrBUXmj+4ye+MdJ8M+K8/hwb6FSSAdK4cCYuIyb3ZX2q3VIguMgESIgjbOjadR1rbjehgbkAmIBIBAvbMdXXkudVpOaQJIBiWvJLS429oklovFnWOo5Ksug/icfP0GgyVzWSPwz2DDhvx12nNFi3iAcrw0ixA9W/M6wBfZZKoVzFzBOk4jUR/wAQLdXswRtk5rIKoc6lMgEE3g3DXQ7eY0voW1F0gkDOLm8tsBmed/uqYodG6Dt7AAYz24HSUPqFzQN3aSZ03HfGuM4dGhUL32sNMGTsaBkDlqP/AGEjZ6HDNAEAbL7c+3VdcjojA+8RkTE3Ig2uLZRO+Su2xl7/AFrldFl+ogDLDhquK0w0HGT57N2zbsC34RnVO+3z+ajd+qyEY6k0QXjlfwU9a03Y4EHYda1AcVnuY4CSEaiAPUlSUERKU9ytxSajkIQPel6aCo5J00IWtr0xrlja9PYUIWppRgpLSjBSTTC5ec9MOkPVYd0HrP8A1beYOkeTZ5wu7UcvHelWAqV6rQ2NFjddruMusNwaraN2+C8wFVXFR1MikCXHDDn2LwdQJK9R/wCIVT77ew+SH/wyt95v8XktYWuj+rn5Lz5+EW3/ABnvb5r3AeTfUha8TMc0VvZS3UjqXiWVntMyvewDgV0KNVaZXKp1IK6FJ8hbYIOIWQWlpIOiJyRUKa5IrJqCQ96APVOQxsk8AkXAZqbKbn/2iVqpvWlhXOpOW6mU1EggwVpa5EXJLSrcUIVuesGMqS4xwT9O6ygmJ1m65bW8tp4arrsjfqLveP8ACWxrkb3dxUcMpMcEFQzlrkc1x2SoRUjQrprtv0z7yTcUC5lrWsc9We/gvO4llwYIkskZ7nb7aXcV6HCulhGxcbpSk5p3SHN2E5EHeSdLfJ2Km1U7r+2O/wBFfZal5h95eq47rPIglzbAZXDzJM5AS0E7xnIB7/QOFAaHOuXdcnKSQIIE2sBaTYDPNcPoql6x1V5HWfUMEGxFtGZjIk/JexpMDRA2QPruU3MHSXdkdU45bpJjv1SNT6L22fDy8MgCTfiYAa3PwWdxd94zxQkxdXpWyXbUqMoQIlcNOkawvkxsTKVU5FI6QwYcDncZjMGbEb5hXTctjxIhQr0mVKd9qlRqPpVLjl4DpAmlEj2asA6pc10iDld1iN41SelTjSaL6IOW5oy4XHxFM9JsKNF0iRpDXAJADoPxOS/R1umetcNydbrSBc8I5m+yOMtvUyRmDj1HDnE/ytIvALTGBBjrGI4XgO3SF6votkMuCLk335I61TqnfblrQuqaLYScSb6P3RfjmV2Uop0i/sWc78SsAevyS3kDIBNwbwHC0au1Z3H8lA7uXLTrvDwSV2OZeaRtXYa9MDljL7960NK2ViI3FJqFE4pTyhCzVnLPpIqrlRd/iFVUrsYQHFXU7O94kI2OWukVibtC2UVaqi0tMFaWo5Smq6roCEBJr1Vk1zlPIlU+ogNTcuG21IAYF22RmBd2e+3krdUMoNI7Vb3yhWbJXcAnDbo3RNNpNlbd6shJQlIIvnM3+u5dLBZLE8RHGO1bcEFsWR16kN2Cz7U3652+GHKEbws9VasSLrK9dK5VkqmBxsroO1bEOINxyP12IqdTUVmW531ALUszYojfiqN7gXHfuWmg6Qs7yZtkm4V2fH81Ow1DixV2tguhy1tVVHIqYScSVoLgWdz/AGj+E99vmsqc7Lie4fQUdAFlm2931Bq0rGIZO08sFREgbVToAtnIVFxPNWadjdcTHXXArq61MIYeRqI/PzWf0iozScYuBI2yCCDPEJxPsu2WPyRdN05o1CPuOEi+Ygc5haNqZJDurgVxWc3CWHQwvO+irJblE1HDf1Xlond5r1rwIC876J0yAQdoI3TUqNIA40pt95ehrmABH19QqaTfxj18FdaX4Gd/fqs1TMbhPejByul1HdY9iFwOvs/JV2szVKlSbFNo3IqkytlK4+tiwl3gtOGfYdnerrIZY9iptLYuu2GO/wBlcb0ppfqqlvcneNTiOTh2FK9E2dUkmerTb8Om2Y22XU9IaM0KpINmOdG2BMDiJCx+idOGQREUqM7/ANWHO7yVWxuD56/uE+CvqVPw2f8AIz2tMcnduK6tRw0wNTRJ5JLdpGckniltfOm77x0RwzPgO1NFxAMAKy1G6xrPfvFVWcTeftPAe+CGBt7VbYzuUJOxUCuBdRC0tdZp3R2WWyk5c1h6vA+P+FuwxW+x15oKxqzbtRw3+qa5JqlaKgWLFOgFSJUA28QAswcJJPJUSNnehCPRKwqr77yVtwGiAro5rZSWOl7QWymtWyuvUgs22CKk7gtNMIMbkm4bNLxoXQuVcp4UawnUjbUgnj4KOqlY1pdeqlbFJpawN3eviqdYQhlFp228UCoVgC0CZvkgqVDMIntnI+SU5x1pKLUT5IldHCOXOBlpnUtWDfYbrLRsLsHNXLa2y0HYea2YlyyuTKjrrPiakDecvNd5IAkrga0vcANVmeQXEzlYK2vAyCWGqBYdWpfeXLaDQBdGiP1qdRs7sKzlpGY8kYdDgdXmrbK67VG9V1mXmEDZygrqUTZZsSmU3JbxK2FjrJVMFo2AntVestYQpVdLj2diqnmse1OmqVs0mXaYB2KU3XRAXuUPrCqJGxcyshSPaA4jiPooq9WaJOwPkbYpvcO9oVG0EbVh6TeW06mjk5jiOEGQN+Y5rVoHpaQGo98lxWgXH39CIO4xCd0BRgEjW1h+LSqW+NbX1JedjbnksGFxIa3RbFqdMCNsO8Glieyzd7rnhq806bQ0mocAPfv0UahNRwp7c+rP1VoyCRPJUIjPl+atrrRlvWW915xK7ygITGmAdxB7f8KnP571bDJg6xo+S6LG+7VE6qm0NL6R7+5M6RGlSf8Aia6NlwQPFcroSqRSe6b6LR3EAdhC1faIa5hzGXGcu1c/Bsgupj3ng8LuaB2Adi7GUYcWn2LzVzOrTRvD9Q77tTzXQYIawbtLt/IBaJixGecIJGllbIcrDwRh0nIWXHa33qi6qbLtNrdyr1W9LIjNN9bGYuhL7zcrlVgJRURcjaO8FasMsjXjSBy1dq1tC2LI6aQ3LOtjYeDtC01jZYMTeBtK1PcsbjJLonUPNTtFS5TJUbK2Xzs9jz7ETjsEpdQaz2KzE3PJVWbrlYi0RgUtz9ca5W5pWLRG1PwtS0ax4LSsLxBaua105aHDTkfXmuhh3JeLdr5oabrpGOqW42XccMVwsbfcG7SswbYZX7c0bWWyG5UQIE3UdnM+awXGXErZJlAKZTRTCB1QZQibUCSRlLc8ymHfGV1dQE5eajqg19iSJQioNQhRj9E3157lbQ3OEFRwKspVDTdeCTmhwukYLTUrga54LIXEkk5nuVQrG1X17UagugQFGlQbTyzU0TmqUJRgAe13LkV2SjsxwCFwG+e1HmZHeqc4bPJMGDIUQn4atIg5jvRV6uiN+pZHmVS0PnhdyxXN8m0vvabPeipoRm0EKMGcoXED81nkyV1nere6dSglLdWb95vaFTsQ0CZtzI7k7jtihebGYWlxMDKFz+l3D1L2m2lZp2OdbVulXielKYFg4kbiAN5J1LC0PquBLeqIM5awdEAgkZCxE5Los9+m+9kNZw9erDmouDTTxy0wOJ0g5deMxOC0YTCwQXkEEEwNdmCDsGfYug46ylUqWjvMAchlCanaLSagDRl74JUaDacka8tPBQhRQpkRYCVyK4lCGayhcNSvROwqwBrnemDGISBWbpGkXN0m+0NHSAsTcdYb1h6FaWvq6ftyHNG0Pb7Q3DxK61QDIi3E+K5OKwr2kOZJLLAiAdH7pBsdkaxfVbTZbA4RH1ZctezlpJHJ8swOn8sgx1Tvyg90rtUHAW70T3EZBczB9JNJh4IIMbp4GDwzWtuNaSdHnZw7bWWe5j5kjux5K8uE467cJ6phG9wJyRz1batqU+oy3WAneExjmwesDwIUS1w0Tvt0KjmSMhl3p2HrSIOYSnCRsjaqcW6xJ7FfZ7R0Ug5KNWiKjYKbiK2oZ69yRp+EKw4QYCFrr5BRr1zVM6J0qQptgK/VncjgEZ5IZvmjMGwVCmZ1QhoItPFWKcXBuqcYEIAYUmuLTIRmtTa496x+skl50zOQGU60OmdgKjmyc10vtjnNuwqWUGU3SP46kdOnF5S6jSjeBYTkjadhyXIrZWdQI6oM7kCFMJBxmrRPbTA/mVOxuotHbPhHijbQJN3nsA8ETsI6bVH/ABHzVv07R3HxVUmcj3gcggbi9V/hA8XFU7Egfe7GFW7DTm4niT8iFZwbC3LL9/8AuR9O37R6Jx/r958AUBxBORP8IP8AKq+1RnM79COeUpp6PZbqt3WHiVQwIygDk2PBEt9gDzRgRlHa4/tWY49ut/8AA8+CJvSMjqgv3tY9ajh2i4I+Gn5IDQB2fDT8kX2/p5ftHNS6MH83A+ZVDGOH/F2lw8WpP2l59yN00z2HTHeE8YRs3A5U6f8Aan06Ijhup/2ovjRo4nx8EjSETfPAeB5rnOxLh7XVG99PwAPirOJt1W1Sd1OqR3EAhdFlASYNt0DwhCGxN3fE7zR0mwR1Yeaj0bTgZPX/ACFzmF5ypz+8x4P8Q+aJzXj3GjeIBHIFbH0RrAPG/eU7RsIA7Ajpjl78uCZpszHl4yuWRWd74A2gnwbI71TejJMve4nbN+RJJHIrpvO231sREACPBRFRwyMdWHKFYS2IjmeZKz/ZKbfZY3cYnvPNMCPTtARNfAUSSc1EYaJbTdXp7h2K5BOxW5zdiSaWUQqFCiLIzKEzCmgTqVvEATmrrDLYha7bdCjjmmMAIyQhovmdSttQG0IGOjJCIKF+CYfaAO4gHx+SyVuimz1ZGwXAHAgytZVhx47s1MPcMii71dwWQ4Sq32KzgPxOfA7neKDQq7WOP4gAOR0yCt7tU28EUCIJCA8zp3Dnmh0ERHdPKY4LmPY8XLW32U5H8MpbqrhqPKnXA8QF0zh26g2eAHeoaJ/F8TvkVI1ifRIU6Y04fx4rnCvU1d/V/mlX9sqbAOBpGeekul6qB7RHMnxU9XOTnD4fJHSD9IRdGp99srnUK1R3unm4f0NKL1rpvSdzZVeFsGHJ94nf1T8kX2cTmOGjT8kX2/pHHxJSLT/kPcPABYH1WjPRH/qe2OcWRB+kf908jP8ANK2to7YG/Qp+So0GzYj4W+SL7NnL9qCHfqn/ALfuPJZ22P8Au1D/ANaX9qp9QE2qv+Fv9iZVwVOfZniG+Sn2NgHVbF948CiWbftb5p4jT7iP/JVUZz9b2tHdARetIP8AuN+Bze+/grbgQb3HAu/uTDhD+0dyJHgUfTt4Ry81Akzl3O82+Cyms7a4/uuZ/UAr9adj/wD4/IpjsM4Gz3+PjKP7Kf2h7G+ScN0I+5SvmMj9vkEylmnNzKiipQ5Z3Zox7J4+SiiFLZ1qqmrgmt18B4K1EJHJJo/LyRU8yrUQg5oW+12q8RqVqIR+YKqGfJLKiiFIZrQ7JBW1KKIUG5hLd8kIVqIVgyUVqKIQUKOnr4KKISchbmnV8laiFF2aCp7I+tSqjnyUUQjQ9qlHMqm581SiE9qupmVTdfBRRCeiutq4ICoohDckb/kFHauAUUQkEVbNCzXwUUQgZJtHJA/2uxRRCBmgq5oVFEJjJROoa1aiEnZI2KKKIUChdmEqrmVFEBSac//Z\"]}","@tr":"f6c45548e0ab80e13435f55094cc9428","@sp":"c7f3f62c6bc8a661","SourceContext":"JustCare_MB.Services.AppointmentService","ActionId":"c2b682d8-c1a9-44f5-aba2-5d769aa76818","ActionName":"JustCareAPI.Controllers.AppointmentController.CreateAppointment (JustCareAPI)","RequestId":"80000023-0004-fd00-b63f-84710c7967bb","RequestPath":"/AppointmentAPI/Create%20appointment"}
{"@t":"2024-01-16T12:11:32.1181823Z","@mt":"Appointment Exists","@l":"Error","@x":"JustCare_MB.Helpers.ExistsException: Appointment Exists\r\n   at JustCare_MB.Services.AppointmentService.CreateAppointment(CreateAppointmentDto appointmentDto) in C:\\Users\\Smail_-\\Desktop\\JustCare\\JustCare_MB\\Services\\AppointmentService.cs:line 59\r\n   at JustCareAPI.Controllers.AppointmentController.CreateAppointment(CreateAppointmentDto appointmentDto) in C:\\Users\\Smail_-\\Desktop\\JustCare\\JustCareAPI\\Controllers\\AppointmentController.cs:line 29\r\n   at lambda_method6(Closure, Object)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfActionResultExecutor.Execute(ActionContext actionContext, IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Awaited|17_0(ResourceInvoker invoker, Task task, IDisposable scope)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Awaited|17_0(ResourceInvoker invoker, Task task, IDisposable scope)\r\n   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)\r\n   at JustCare_MB.Middlewares.GlobalExceptionHandlingMiddleware.InvokeAsync(HttpContext context, RequestDelegate next) in C:\\Users\\Smail_-\\Desktop\\JustCare\\JustCare_MB\\Middlewares\\GlobalExceptionHandlingMiddleware.cs:line 31","@tr":"f6c45548e0ab80e13435f55094cc9428","@sp":"c7f3f62c6bc8a661","SourceContext":"JustCare_MB.Middlewares.GlobalExceptionHandlingMiddleware","ActionId":"c2b682d8-c1a9-44f5-aba2-5d769aa76818","ActionName":"JustCareAPI.Controllers.AppointmentController.CreateAppointment (JustCareAPI)","RequestId":"80000023-0004-fd00-b63f-84710c7967bb","RequestPath":"/AppointmentAPI/Create%20appointment"}
{"@t":"2024-01-16T12:11:32.1339508Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["1754.5144"],"@tr":"f6c45548e0ab80e13435f55094cc9428","@sp":"c7f3f62c6bc8a661","RequestMethod":"POST","RequestPath":"/AppointmentAPI/Create appointment","StatusCode":409,"Elapsed":1754.5144,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"80000023-0004-fd00-b63f-84710c7967bb"}
{"@t":"2024-01-16T12:11:41.1152598Z","@mt":"Create Appointment: {\"Date\":\"2024-01-28T00:00:00\",\"CategoryId\":1,\"DentistDescription\":\"beee\",\"Images\":[\"\",\"\"]}","@tr":"84ac2bc3bf498bf5b3d2944537e88237","@sp":"55a15f79e0bbc4d6","SourceContext":"JustCare_MB.Services.AppointmentService","ActionId":"c2b682d8-c1a9-44f5-aba2-5d769aa76818","ActionName":"JustCareAPI.Controllers.AppointmentController.CreateAppointment (JustCareAPI)","RequestId":"80000025-0004-fd00-b63f-84710c7967bb","RequestPath":"/AppointmentAPI/Create%20appointment"}
{"@t":"2024-01-16T12:11:41.2248462Z","@mt":"Appointment Exists","@l":"Error","@x":"JustCare_MB.Helpers.ExistsException: Appointment Exists\r\n   at JustCare_MB.Services.AppointmentService.CreateAppointment(CreateAppointmentDto appointmentDto) in C:\\Users\\Smail_-\\Desktop\\JustCare\\JustCare_MB\\Services\\AppointmentService.cs:line 59\r\n   at JustCareAPI.Controllers.AppointmentController.CreateAppointment(CreateAppointmentDto appointmentDto) in C:\\Users\\Smail_-\\Desktop\\JustCare\\JustCareAPI\\Controllers\\AppointmentController.cs:line 29\r\n   at lambda_method6(Closure, Object)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfActionResultExecutor.Execute(ActionContext actionContext, IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Awaited|17_0(ResourceInvoker invoker, Task task, IDisposable scope)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Awaited|17_0(ResourceInvoker invoker, Task task, IDisposable scope)\r\n   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)\r\n   at JustCare_MB.Middlewares.GlobalExceptionHandlingMiddleware.InvokeAsync(HttpContext context, RequestDelegate next) in C:\\Users\\Smail_-\\Desktop\\JustCare\\JustCare_MB\\Middlewares\\GlobalExceptionHandlingMiddleware.cs:line 31","@tr":"84ac2bc3bf498bf5b3d2944537e88237","@sp":"55a15f79e0bbc4d6","SourceContext":"JustCare_MB.Middlewares.GlobalExceptionHandlingMiddleware","ActionId":"c2b682d8-c1a9-44f5-aba2-5d769aa76818","ActionName":"JustCareAPI.Controllers.AppointmentController.CreateAppointment (JustCareAPI)","RequestId":"80000025-0004-fd00-b63f-84710c7967bb","RequestPath":"/AppointmentAPI/Create%20appointment"}
{"@t":"2024-01-16T12:11:41.2263663Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["4464.0384"],"@tr":"84ac2bc3bf498bf5b3d2944537e88237","@sp":"55a15f79e0bbc4d6","RequestMethod":"POST","RequestPath":"/AppointmentAPI/Create appointment","StatusCode":409,"Elapsed":4464.0384,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"80000025-0004-fd00-b63f-84710c7967bb"}
{"@t":"2024-01-16T12:11:57.2810393Z","@mt":"Create Appointment: {\"Date\":\"2024-01-29T00:00:00\",\"CategoryId\":1,\"DentistDescription\":\"beee\",\"Images\":[\"\",\"\"]}","@tr":"b8f6e0c2ce3ed7a6abf0485dd42171fd","@sp":"c522a8eac347e0b9","SourceContext":"JustCare_MB.Services.AppointmentService","ActionId":"c2b682d8-c1a9-44f5-aba2-5d769aa76818","ActionName":"JustCareAPI.Controllers.AppointmentController.CreateAppointment (JustCareAPI)","RequestId":"80000027-0004-fd00-b63f-84710c7967bb","RequestPath":"/AppointmentAPI/Create%20appointment"}
{"@t":"2024-01-16T12:11:57.2952420Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["2013.7524"],"@tr":"b8f6e0c2ce3ed7a6abf0485dd42171fd","@sp":"c522a8eac347e0b9","RequestMethod":"POST","RequestPath":"/AppointmentAPI/Create appointment","StatusCode":200,"Elapsed":2013.7524,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"80000027-0004-fd00-b63f-84710c7967bb"}
{"@t":"2024-01-16T12:12:13.8747090Z","@mt":"Create Appointment: {\"Date\":\"2024-01-20T00:00:00\",\"CategoryId\":1,\"DentistDescription\":\"beee\",\"Images\":[\"\",\"\"]}","@tr":"fd0e8baf4f648be52ce6baee462e395d","@sp":"8ab48949eb287cb5","SourceContext":"JustCare_MB.Services.AppointmentService","ActionId":"c2b682d8-c1a9-44f5-aba2-5d769aa76818","ActionName":"JustCareAPI.Controllers.AppointmentController.CreateAppointment (JustCareAPI)","RequestId":"80000096-000a-ff00-b63f-84710c7967bb","RequestPath":"/AppointmentAPI/Create%20appointment"}
{"@t":"2024-01-16T12:12:13.8868488Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["1488.6682"],"@tr":"fd0e8baf4f648be52ce6baee462e395d","@sp":"8ab48949eb287cb5","RequestMethod":"POST","RequestPath":"/AppointmentAPI/Create appointment","StatusCode":200,"Elapsed":1488.6682,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"80000096-000a-ff00-b63f-84710c7967bb"}
{"@t":"2024-01-16T12:12:31.3476079Z","@mt":"Create Appointment: {\"Date\":\"2024-01-21T00:00:00\",\"CategoryId\":1,\"DentistDescription\":\"beee\",\"Images\":[\"\",\"\"]}","@tr":"3defafe6dc62219e6e622d7b2e798f44","@sp":"473db5d2251bd4b2","SourceContext":"JustCare_MB.Services.AppointmentService","ActionId":"c2b682d8-c1a9-44f5-aba2-5d769aa76818","ActionName":"JustCareAPI.Controllers.AppointmentController.CreateAppointment (JustCareAPI)","RequestId":"80000010-0002-fa00-b63f-84710c7967bb","RequestPath":"/AppointmentAPI/Create%20appointment"}
{"@t":"2024-01-16T12:13:05.0971277Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["42785.1256"],"@tr":"3defafe6dc62219e6e622d7b2e798f44","@sp":"473db5d2251bd4b2","RequestMethod":"POST","RequestPath":"/AppointmentAPI/Create appointment","StatusCode":200,"Elapsed":42785.1256,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"80000010-0002-fa00-b63f-84710c7967bb"}
{"@t":"2024-01-16T12:16:30.9990360Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["165.2164"],"@tr":"815c2cf4112be66017f31f7e33b917e0","@sp":"fe29caeb137c393a","RequestMethod":"GET","RequestPath":"/swagger/index.html","StatusCode":200,"Elapsed":165.2164,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"800000ae-0000-fe00-b63f-84710c7967bb"}
{"@t":"2024-01-16T12:16:31.1706935Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["85.2356"],"@tr":"d5da129fc79cdfba0ac0a3f84ac1c9ca","@sp":"ec1ec2c43f08529d","RequestMethod":"GET","RequestPath":"/swagger/v1/swagger.json","StatusCode":200,"Elapsed":85.2356,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"8000003c-0002-f800-b63f-84710c7967bb"}
{"@t":"2024-01-16T12:16:43.9399298Z","@mt":"Create Appointment: {\"Date\":\"2024-01-21T00:00:00\",\"CategoryId\":1,\"DentistDescription\":\"beee\",\"Images\":[\"\",\"\"]}","@tr":"46ea40ea3504266f8132984b92c7b388","@sp":"a092fc68f25ef4c2","SourceContext":"JustCare_MB.Services.AppointmentService","ActionId":"9394215f-f841-48cd-a98c-4bc1bc97b440","ActionName":"JustCareAPI.Controllers.AppointmentController.CreateAppointment (JustCareAPI)","RequestId":"8000003e-0002-f800-b63f-84710c7967bb","RequestPath":"/AppointmentAPI/Create%20appointment"}
{"@t":"2024-01-16T12:16:44.7347949Z","@mt":"Appointment Exists","@l":"Error","@x":"JustCare_MB.Helpers.ExistsException: Appointment Exists\r\n   at JustCare_MB.Services.AppointmentService.CreateAppointment(CreateAppointmentDto appointmentDto) in C:\\Users\\Smail_-\\Desktop\\JustCare\\JustCare_MB\\Services\\AppointmentService.cs:line 59\r\n   at JustCareAPI.Controllers.AppointmentController.CreateAppointment(CreateAppointmentDto appointmentDto) in C:\\Users\\Smail_-\\Desktop\\JustCare\\JustCareAPI\\Controllers\\AppointmentController.cs:line 29\r\n   at lambda_method6(Closure, Object)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfActionResultExecutor.Execute(ActionContext actionContext, IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Awaited|17_0(ResourceInvoker invoker, Task task, IDisposable scope)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Awaited|17_0(ResourceInvoker invoker, Task task, IDisposable scope)\r\n   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)\r\n   at JustCare_MB.Middlewares.GlobalExceptionHandlingMiddleware.InvokeAsync(HttpContext context, RequestDelegate next) in C:\\Users\\Smail_-\\Desktop\\JustCare\\JustCare_MB\\Middlewares\\GlobalExceptionHandlingMiddleware.cs:line 31","@tr":"46ea40ea3504266f8132984b92c7b388","@sp":"a092fc68f25ef4c2","SourceContext":"JustCare_MB.Middlewares.GlobalExceptionHandlingMiddleware","ActionId":"9394215f-f841-48cd-a98c-4bc1bc97b440","ActionName":"JustCareAPI.Controllers.AppointmentController.CreateAppointment (JustCareAPI)","RequestId":"8000003e-0002-f800-b63f-84710c7967bb","RequestPath":"/AppointmentAPI/Create%20appointment"}
{"@t":"2024-01-16T12:16:44.7563924Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["7563.0809"],"@tr":"46ea40ea3504266f8132984b92c7b388","@sp":"a092fc68f25ef4c2","RequestMethod":"POST","RequestPath":"/AppointmentAPI/Create appointment","StatusCode":409,"Elapsed":7563.0809,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"8000003e-0002-f800-b63f-84710c7967bb"}
{"@t":"2024-01-16T12:16:55.3602411Z","@mt":"Create Appointment: {\"Date\":\"2024-01-22T00:00:00\",\"CategoryId\":1,\"DentistDescription\":\"beee\",\"Images\":[\"\",\"\"]}","@tr":"d8fed740ef6fef2e43c3776da10ea9e1","@sp":"dbdae07f2eba223e","SourceContext":"JustCare_MB.Services.AppointmentService","ActionId":"9394215f-f841-48cd-a98c-4bc1bc97b440","ActionName":"JustCareAPI.Controllers.AppointmentController.CreateAppointment (JustCareAPI)","RequestId":"80000019-0000-ff00-b63f-84710c7967bb","RequestPath":"/AppointmentAPI/Create%20appointment"}
{"@t":"2024-01-16T12:17:04.0957697Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["12499.4706"],"@tr":"d8fed740ef6fef2e43c3776da10ea9e1","@sp":"dbdae07f2eba223e","RequestMethod":"POST","RequestPath":"/AppointmentAPI/Create appointment","StatusCode":200,"Elapsed":12499.4706,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"80000019-0000-ff00-b63f-84710c7967bb"}
{"@t":"2024-01-16T12:54:28.3990474Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["461.5834"],"@tr":"e32795b22c59443ae26cea88c24fb69f","@sp":"2a0f345c661b7f14","RequestMethod":"GET","RequestPath":"/swagger/index.html","StatusCode":200,"Elapsed":461.5834,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"80000018-0006-ff00-b63f-84710c7967bb"}
{"@t":"2024-01-16T12:54:34.9789392Z","@mt":"Create Appointment: {\"Date\":\"2024-01-22T00:00:00\",\"CategoryId\":1,\"DentistDescription\":\"beee\",\"Images\":[\"\",\"\"]}","@tr":"e5f001f82745f7a6d42825dbb038f51c","@sp":"223fe2ab9e65971f","SourceContext":"JustCare_MB.Services.AppointmentService","ActionId":"b884f104-f502-49a3-89af-a6fdb8ac0d6c","ActionName":"JustCareAPI.Controllers.AppointmentController.CreateAppointment (JustCareAPI)","RequestId":"80000027-0001-fd00-b63f-84710c7967bb","RequestPath":"/AppointmentAPI/Create%20appointment"}
{"@t":"2024-01-16T12:54:36.1905071Z","@mt":"Appointment Exists","@l":"Error","@x":"JustCare_MB.Helpers.ExistsException: Appointment Exists\r\n   at JustCare_MB.Services.AppointmentService.CreateAppointment(CreateAppointmentDto appointmentDto) in C:\\Users\\Smail_-\\Desktop\\JustCare\\JustCare_MB\\Services\\AppointmentService.cs:line 59\r\n   at JustCareAPI.Controllers.AppointmentController.CreateAppointment(CreateAppointmentDto appointmentDto) in C:\\Users\\Smail_-\\Desktop\\JustCare\\JustCareAPI\\Controllers\\AppointmentController.cs:line 29\r\n   at lambda_method6(Closure, Object)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfActionResultExecutor.Execute(ActionContext actionContext, IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Awaited|17_0(ResourceInvoker invoker, Task task, IDisposable scope)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Awaited|17_0(ResourceInvoker invoker, Task task, IDisposable scope)\r\n   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)\r\n   at JustCare_MB.Middlewares.GlobalExceptionHandlingMiddleware.InvokeAsync(HttpContext context, RequestDelegate next) in C:\\Users\\Smail_-\\Desktop\\JustCare\\JustCare_MB\\Middlewares\\GlobalExceptionHandlingMiddleware.cs:line 31","@tr":"e5f001f82745f7a6d42825dbb038f51c","@sp":"223fe2ab9e65971f","SourceContext":"JustCare_MB.Middlewares.GlobalExceptionHandlingMiddleware","ActionId":"b884f104-f502-49a3-89af-a6fdb8ac0d6c","ActionName":"JustCareAPI.Controllers.AppointmentController.CreateAppointment (JustCareAPI)","RequestId":"80000027-0001-fd00-b63f-84710c7967bb","RequestPath":"/AppointmentAPI/Create%20appointment"}
{"@t":"2024-01-16T12:54:36.2057222Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["8262.9169"],"@tr":"e5f001f82745f7a6d42825dbb038f51c","@sp":"223fe2ab9e65971f","RequestMethod":"POST","RequestPath":"/AppointmentAPI/Create appointment","StatusCode":409,"Elapsed":8262.9169,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"80000027-0001-fd00-b63f-84710c7967bb"}
{"@t":"2024-01-16T12:54:54.7150099Z","@mt":"Create Appointment: {\"Date\":\"2024-01-23T00:00:00\",\"CategoryId\":1,\"DentistDescription\":\"beee\",\"Images\":[\"\",\"\"]}","@tr":"2af8a691d6b8eca56b7d2282d8b22ae1","@sp":"f3db4bdb2cd39ecb","SourceContext":"JustCare_MB.Services.AppointmentService","ActionId":"b884f104-f502-49a3-89af-a6fdb8ac0d6c","ActionName":"JustCareAPI.Controllers.AppointmentController.CreateAppointment (JustCareAPI)","RequestId":"80000054-000d-fd00-b63f-84710c7967bb","RequestPath":"/AppointmentAPI/Create%20appointment"}
{"@t":"2024-01-16T12:56:23.9185097Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["264.1814"],"@tr":"c66432af809500a73805245ee19262ca","@sp":"18f4da8b053ce862","RequestMethod":"GET","RequestPath":"/swagger/index.html","StatusCode":200,"Elapsed":264.1814,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"80000042-0002-f800-b63f-84710c7967bb"}
{"@t":"2024-01-16T12:56:24.1937932Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["141.3740"],"@tr":"edf95f52ac02f15644157fb6c9e18192","@sp":"f4ccb59a5613245d","RequestMethod":"GET","RequestPath":"/swagger/v1/swagger.json","StatusCode":200,"Elapsed":141.374,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"800000b3-0000-fe00-b63f-84710c7967bb"}
{"@t":"2024-01-16T12:56:28.9201476Z","@mt":"Create Appointment: {\"Date\":\"2024-01-23T00:00:00\",\"CategoryId\":1,\"DentistDescription\":\"beee\",\"Images\":[\"\",\"\"]}","@tr":"a7d0a9dc7fc3d76956f85304558c90ba","@sp":"cc039dcc31522c90","SourceContext":"JustCare_MB.Services.AppointmentService","ActionId":"1aed1668-01c9-46ab-8420-f3e6f448527c","ActionName":"JustCareAPI.Controllers.AppointmentController.CreateAppointment (JustCareAPI)","RequestId":"80000044-0002-f800-b63f-84710c7967bb","RequestPath":"/AppointmentAPI/Create%20appointment"}
{"@t":"2024-01-16T12:56:29.9974494Z","@mt":"Could not find a part of the path 'C:\\Images\\DentistAppointmentImages\\8845806b-91ea-413b-8a93-b4fc9459c678.jpg'.","@l":"Error","@x":"System.IO.DirectoryNotFoundException: Could not find a part of the path 'C:\\Images\\DentistAppointmentImages\\8845806b-91ea-413b-8a93-b4fc9459c678.jpg'.\r\n   at Microsoft.Win32.SafeHandles.SafeFileHandle.CreateFile(String fullPath, FileMode mode, FileAccess access, FileShare share, FileOptions options)\r\n   at Microsoft.Win32.SafeHandles.SafeFileHandle.Open(String fullPath, FileMode mode, FileAccess access, FileShare share, FileOptions options, Int64 preallocationSize, Nullable`1 unixCreateMode)\r\n   at System.IO.Strategies.OSFileStreamStrategy..ctor(String path, FileMode mode, FileAccess access, FileShare share, FileOptions options, Int64 preallocationSize, Nullable`1 unixCreateMode)\r\n   at System.IO.Strategies.FileStreamHelpers.ChooseStrategyCore(String path, FileMode mode, FileAccess access, FileShare share, FileOptions options, Int64 preallocationSize, Nullable`1 unixCreateMode)\r\n   at System.IO.FileStream..ctor(String path, FileMode mode)\r\n   at JustCare_MB.Services.AppointmentService.CreateAppointment(CreateAppointmentDto appointmentDto) in C:\\Users\\Smail_-\\Desktop\\JustCare\\JustCare_MB\\Services\\AppointmentService.cs:line 102\r\n   at JustCareAPI.Controllers.AppointmentController.CreateAppointment(CreateAppointmentDto appointmentDto) in C:\\Users\\Smail_-\\Desktop\\JustCare\\JustCareAPI\\Controllers\\AppointmentController.cs:line 29\r\n   at lambda_method6(Closure, Object)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfActionResultExecutor.Execute(ActionContext actionContext, IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Awaited|17_0(ResourceInvoker invoker, Task task, IDisposable scope)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Awaited|17_0(ResourceInvoker invoker, Task task, IDisposable scope)\r\n   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)\r\n   at JustCare_MB.Middlewares.GlobalExceptionHandlingMiddleware.InvokeAsync(HttpContext context, RequestDelegate next) in C:\\Users\\Smail_-\\Desktop\\JustCare\\JustCare_MB\\Middlewares\\GlobalExceptionHandlingMiddleware.cs:line 31","@tr":"a7d0a9dc7fc3d76956f85304558c90ba","@sp":"cc039dcc31522c90","SourceContext":"JustCare_MB.Middlewares.GlobalExceptionHandlingMiddleware","ActionId":"1aed1668-01c9-46ab-8420-f3e6f448527c","ActionName":"JustCareAPI.Controllers.AppointmentController.CreateAppointment (JustCareAPI)","RequestId":"80000044-0002-f800-b63f-84710c7967bb","RequestPath":"/AppointmentAPI/Create%20appointment"}
{"@t":"2024-01-16T12:56:30.0176124Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["4988.5962"],"@tr":"a7d0a9dc7fc3d76956f85304558c90ba","@sp":"cc039dcc31522c90","RequestMethod":"POST","RequestPath":"/AppointmentAPI/Create appointment","StatusCode":400,"Elapsed":4988.5962,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"80000044-0002-f800-b63f-84710c7967bb"}
